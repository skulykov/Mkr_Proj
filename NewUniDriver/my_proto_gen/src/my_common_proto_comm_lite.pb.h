// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: my_common_proto_comm_lite.proto

#ifndef PROTOBUF_my_5fcommon_5fproto_5fcomm_5flite_2eproto__INCLUDED
#define PROTOBUF_my_5fcommon_5fproto_5fcomm_5flite_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace my_comm_proto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
void protobuf_AssignDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
void protobuf_ShutdownFile_my_5fcommon_5fproto_5fcomm_5flite_2eproto();

class PAMessage;
class PBoxIdVehicleRow;
class PBoxIdVehicleRowList;
class PConfiguration;
class PEmployeeRow;
class PHosAlertRow;
class PInspectionCategoryRow;
class PInspectionCategoryRowList;
class PInspectionItem;
class PInspectionItemList;
class PInspectionRow;
class PInspectionRowList;
class PRecapRow;
class PRecapRowList;
class PRegister;
class PRuleSelectionHistoryRow;
class PRuleSelectionHistoryRowList;
class PTimeLogRow;
class PTimeLogRowList;
class PWOIStatus;
class PWOIStatusList;
class PWorkOrderItem;
class PWorkOrderList;

// ===================================================================

class PAMessage : public ::google::protobuf::MessageLite {
 public:
  PAMessage();
  virtual ~PAMessage();

  PAMessage(const PAMessage& from);

  inline PAMessage& operator=(const PAMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const PAMessage& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PAMessage* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PAMessage* other);

  // implements Message ----------------------------------------------

  inline PAMessage* New() const { return New(NULL); }

  PAMessage* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PAMessage& from);
  void MergeFrom(const PAMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PAMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 aID = 1;
  bool has_aid() const;
  void clear_aid();
  static const int kAIDFieldNumber = 1;
  ::google::protobuf::int32 aid() const;
  void set_aid(::google::protobuf::int32 value);

  // required int32 rID = 2;
  bool has_rid() const;
  void clear_rid();
  static const int kRIDFieldNumber = 2;
  ::google::protobuf::int32 rid() const;
  void set_rid(::google::protobuf::int32 value);

  // required string msg = 3;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 3;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // required int64 ts = 4;
  bool has_ts() const;
  void clear_ts();
  static const int kTsFieldNumber = 4;
  ::google::protobuf::int64 ts() const;
  void set_ts(::google::protobuf::int64 value);

  // required int32 type = 5;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:my_comm_proto.PAMessage)
 private:
  inline void set_has_aid();
  inline void clear_has_aid();
  inline void set_has_rid();
  inline void clear_has_rid();
  inline void set_has_msg();
  inline void clear_has_msg();
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_type();
  inline void clear_has_type();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 aid_;
  ::google::protobuf::int32 rid_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int64 ts_;
  ::google::protobuf::int32 type_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  #endif
  friend void protobuf_AssignDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  friend void protobuf_ShutdownFile_my_5fcommon_5fproto_5fcomm_5flite_2eproto();

  void InitAsDefaultInstance();
  static PAMessage* default_instance_;
};
// -------------------------------------------------------------------

class PWOIStatus : public ::google::protobuf::MessageLite {
 public:
  PWOIStatus();
  virtual ~PWOIStatus();

  PWOIStatus(const PWOIStatus& from);

  inline PWOIStatus& operator=(const PWOIStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const PWOIStatus& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PWOIStatus* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PWOIStatus* other);

  // implements Message ----------------------------------------------

  inline PWOIStatus* New() const { return New(NULL); }

  PWOIStatus* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PWOIStatus& from);
  void MergeFrom(const PWOIStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PWOIStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 ID = 1;
  bool has_id() const;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // required int32 status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:my_comm_proto.PWOIStatus)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 status_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  #endif
  friend void protobuf_AssignDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  friend void protobuf_ShutdownFile_my_5fcommon_5fproto_5fcomm_5flite_2eproto();

  void InitAsDefaultInstance();
  static PWOIStatus* default_instance_;
};
// -------------------------------------------------------------------

class PWorkOrderItem : public ::google::protobuf::MessageLite {
 public:
  PWorkOrderItem();
  virtual ~PWorkOrderItem();

  PWorkOrderItem(const PWorkOrderItem& from);

  inline PWorkOrderItem& operator=(const PWorkOrderItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const PWorkOrderItem& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PWorkOrderItem* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PWorkOrderItem* other);

  // implements Message ----------------------------------------------

  inline PWorkOrderItem* New() const { return New(NULL); }

  PWorkOrderItem* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PWorkOrderItem& from);
  void MergeFrom(const PWorkOrderItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PWorkOrderItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 ID = 1;
  bool has_id() const;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // required string Name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required string Caller = 3;
  bool has_caller() const;
  void clear_caller();
  static const int kCallerFieldNumber = 3;
  const ::std::string& caller() const;
  void set_caller(const ::std::string& value);
  void set_caller(const char* value);
  void set_caller(const char* value, size_t size);
  ::std::string* mutable_caller();
  ::std::string* release_caller();
  void set_allocated_caller(::std::string* caller);

  // optional string Phone = 4;
  bool has_phone() const;
  void clear_phone();
  static const int kPhoneFieldNumber = 4;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // required string Reference = 5;
  bool has_reference() const;
  void clear_reference();
  static const int kReferenceFieldNumber = 5;
  const ::std::string& reference() const;
  void set_reference(const ::std::string& value);
  void set_reference(const char* value);
  void set_reference(const char* value, size_t size);
  ::std::string* mutable_reference();
  ::std::string* release_reference();
  void set_allocated_reference(::std::string* reference);

  // required string LocationName = 6;
  bool has_locationname() const;
  void clear_locationname();
  static const int kLocationNameFieldNumber = 6;
  const ::std::string& locationname() const;
  void set_locationname(const ::std::string& value);
  void set_locationname(const char* value);
  void set_locationname(const char* value, size_t size);
  ::std::string* mutable_locationname();
  ::std::string* release_locationname();
  void set_allocated_locationname(::std::string* locationname);

  // optional string Street = 7;
  bool has_street() const;
  void clear_street();
  static const int kStreetFieldNumber = 7;
  const ::std::string& street() const;
  void set_street(const ::std::string& value);
  void set_street(const char* value);
  void set_street(const char* value, size_t size);
  ::std::string* mutable_street();
  ::std::string* release_street();
  void set_allocated_street(::std::string* street);

  // optional string City = 9;
  bool has_city() const;
  void clear_city();
  static const int kCityFieldNumber = 9;
  const ::std::string& city() const;
  void set_city(const ::std::string& value);
  void set_city(const char* value);
  void set_city(const char* value, size_t size);
  ::std::string* mutable_city();
  ::std::string* release_city();
  void set_allocated_city(::std::string* city);

  // optional string Country = 10;
  bool has_country() const;
  void clear_country();
  static const int kCountryFieldNumber = 10;
  const ::std::string& country() const;
  void set_country(const ::std::string& value);
  void set_country(const char* value);
  void set_country(const char* value, size_t size);
  ::std::string* mutable_country();
  ::std::string* release_country();
  void set_allocated_country(::std::string* country);

  // optional string PostalCode = 11;
  bool has_postalcode() const;
  void clear_postalcode();
  static const int kPostalCodeFieldNumber = 11;
  const ::std::string& postalcode() const;
  void set_postalcode(const ::std::string& value);
  void set_postalcode(const char* value);
  void set_postalcode(const char* value, size_t size);
  ::std::string* mutable_postalcode();
  ::std::string* release_postalcode();
  void set_allocated_postalcode(::std::string* postalcode);

  // optional string Province = 13;
  bool has_province() const;
  void clear_province();
  static const int kProvinceFieldNumber = 13;
  const ::std::string& province() const;
  void set_province(const ::std::string& value);
  void set_province(const char* value);
  void set_province(const char* value, size_t size);
  ::std::string* mutable_province();
  ::std::string* release_province();
  void set_allocated_province(::std::string* province);

  // required string Instructions = 14;
  bool has_instructions() const;
  void clear_instructions();
  static const int kInstructionsFieldNumber = 14;
  const ::std::string& instructions() const;
  void set_instructions(const ::std::string& value);
  void set_instructions(const char* value);
  void set_instructions(const char* value, size_t size);
  ::std::string* mutable_instructions();
  ::std::string* release_instructions();
  void set_allocated_instructions(::std::string* instructions);

  // required int64 StartTime = 15;
  bool has_starttime() const;
  void clear_starttime();
  static const int kStartTimeFieldNumber = 15;
  ::google::protobuf::int64 starttime() const;
  void set_starttime(::google::protobuf::int64 value);

  // required int64 EndTime = 16;
  bool has_endtime() const;
  void clear_endtime();
  static const int kEndTimeFieldNumber = 16;
  ::google::protobuf::int64 endtime() const;
  void set_endtime(::google::protobuf::int64 value);

  // required string ActInstrs = 17;
  bool has_actinstrs() const;
  void clear_actinstrs();
  static const int kActInstrsFieldNumber = 17;
  const ::std::string& actinstrs() const;
  void set_actinstrs(const ::std::string& value);
  void set_actinstrs(const char* value);
  void set_actinstrs(const char* value, size_t size);
  ::std::string* mutable_actinstrs();
  ::std::string* release_actinstrs();
  void set_allocated_actinstrs(::std::string* actinstrs);

  // optional int64 CreatedTS = 18;
  bool has_createdts() const;
  void clear_createdts();
  static const int kCreatedTSFieldNumber = 18;
  ::google::protobuf::int64 createdts() const;
  void set_createdts(::google::protobuf::int64 value);

  // optional int64 LastUpdtdTS = 19;
  bool has_lastupdtdts() const;
  void clear_lastupdtdts();
  static const int kLastUpdtdTSFieldNumber = 19;
  ::google::protobuf::int64 lastupdtdts() const;
  void set_lastupdtdts(::google::protobuf::int64 value);

  // optional int64 AcceptedTS = 20;
  bool has_acceptedts() const;
  void clear_acceptedts();
  static const int kAcceptedTSFieldNumber = 20;
  ::google::protobuf::int64 acceptedts() const;
  void set_acceptedts(::google::protobuf::int64 value);

  // optional int64 CompletedTS = 21;
  bool has_completedts() const;
  void clear_completedts();
  static const int kCompletedTSFieldNumber = 21;
  ::google::protobuf::int64 completedts() const;
  void set_completedts(::google::protobuf::int64 value);

  // required int32 status = 22;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 22;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // required int32 serviceGroup = 23;
  bool has_servicegroup() const;
  void clear_servicegroup();
  static const int kServiceGroupFieldNumber = 23;
  ::google::protobuf::int32 servicegroup() const;
  void set_servicegroup(::google::protobuf::int32 value);

  // required int64 resourceID = 24;
  bool has_resourceid() const;
  void clear_resourceid();
  static const int kResourceIDFieldNumber = 24;
  ::google::protobuf::int64 resourceid() const;
  void set_resourceid(::google::protobuf::int64 value);

  // optional float Lat = 25;
  bool has_lat() const;
  void clear_lat();
  static const int kLatFieldNumber = 25;
  float lat() const;
  void set_lat(float value);

  // optional float Lon = 26;
  bool has_lon() const;
  void clear_lon();
  static const int kLonFieldNumber = 26;
  float lon() const;
  void set_lon(float value);

  // optional int32 editFlag = 27;
  bool has_editflag() const;
  void clear_editflag();
  static const int kEditFlagFieldNumber = 27;
  ::google::protobuf::int32 editflag() const;
  void set_editflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:my_comm_proto.PWorkOrderItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_caller();
  inline void clear_has_caller();
  inline void set_has_phone();
  inline void clear_has_phone();
  inline void set_has_reference();
  inline void clear_has_reference();
  inline void set_has_locationname();
  inline void clear_has_locationname();
  inline void set_has_street();
  inline void clear_has_street();
  inline void set_has_city();
  inline void clear_has_city();
  inline void set_has_country();
  inline void clear_has_country();
  inline void set_has_postalcode();
  inline void clear_has_postalcode();
  inline void set_has_province();
  inline void clear_has_province();
  inline void set_has_instructions();
  inline void clear_has_instructions();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_actinstrs();
  inline void clear_has_actinstrs();
  inline void set_has_createdts();
  inline void clear_has_createdts();
  inline void set_has_lastupdtdts();
  inline void clear_has_lastupdtdts();
  inline void set_has_acceptedts();
  inline void clear_has_acceptedts();
  inline void set_has_completedts();
  inline void clear_has_completedts();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_servicegroup();
  inline void clear_has_servicegroup();
  inline void set_has_resourceid();
  inline void clear_has_resourceid();
  inline void set_has_lat();
  inline void clear_has_lat();
  inline void set_has_lon();
  inline void clear_has_lon();
  inline void set_has_editflag();
  inline void clear_has_editflag();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr caller_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::internal::ArenaStringPtr reference_;
  ::google::protobuf::internal::ArenaStringPtr locationname_;
  ::google::protobuf::internal::ArenaStringPtr street_;
  ::google::protobuf::internal::ArenaStringPtr city_;
  ::google::protobuf::internal::ArenaStringPtr country_;
  ::google::protobuf::internal::ArenaStringPtr postalcode_;
  ::google::protobuf::internal::ArenaStringPtr province_;
  ::google::protobuf::internal::ArenaStringPtr instructions_;
  ::google::protobuf::int64 starttime_;
  ::google::protobuf::int64 endtime_;
  ::google::protobuf::internal::ArenaStringPtr actinstrs_;
  ::google::protobuf::int64 createdts_;
  ::google::protobuf::int64 lastupdtdts_;
  ::google::protobuf::int64 acceptedts_;
  ::google::protobuf::int64 completedts_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 servicegroup_;
  ::google::protobuf::int64 resourceid_;
  float lat_;
  float lon_;
  ::google::protobuf::int32 editflag_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  #endif
  friend void protobuf_AssignDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  friend void protobuf_ShutdownFile_my_5fcommon_5fproto_5fcomm_5flite_2eproto();

  void InitAsDefaultInstance();
  static PWorkOrderItem* default_instance_;
};
// -------------------------------------------------------------------

class PWorkOrderList : public ::google::protobuf::MessageLite {
 public:
  PWorkOrderList();
  virtual ~PWorkOrderList();

  PWorkOrderList(const PWorkOrderList& from);

  inline PWorkOrderList& operator=(const PWorkOrderList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const PWorkOrderList& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PWorkOrderList* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PWorkOrderList* other);

  // implements Message ----------------------------------------------

  inline PWorkOrderList* New() const { return New(NULL); }

  PWorkOrderList* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PWorkOrderList& from);
  void MergeFrom(const PWorkOrderList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PWorkOrderList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .my_comm_proto.PWorkOrderItem wo_items = 1;
  int wo_items_size() const;
  void clear_wo_items();
  static const int kWoItemsFieldNumber = 1;
  const ::my_comm_proto::PWorkOrderItem& wo_items(int index) const;
  ::my_comm_proto::PWorkOrderItem* mutable_wo_items(int index);
  ::my_comm_proto::PWorkOrderItem* add_wo_items();
  ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PWorkOrderItem >*
      mutable_wo_items();
  const ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PWorkOrderItem >&
      wo_items() const;

  // @@protoc_insertion_point(class_scope:my_comm_proto.PWorkOrderList)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PWorkOrderItem > wo_items_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  #endif
  friend void protobuf_AssignDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  friend void protobuf_ShutdownFile_my_5fcommon_5fproto_5fcomm_5flite_2eproto();

  void InitAsDefaultInstance();
  static PWorkOrderList* default_instance_;
};
// -------------------------------------------------------------------

class PWOIStatusList : public ::google::protobuf::MessageLite {
 public:
  PWOIStatusList();
  virtual ~PWOIStatusList();

  PWOIStatusList(const PWOIStatusList& from);

  inline PWOIStatusList& operator=(const PWOIStatusList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const PWOIStatusList& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PWOIStatusList* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PWOIStatusList* other);

  // implements Message ----------------------------------------------

  inline PWOIStatusList* New() const { return New(NULL); }

  PWOIStatusList* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PWOIStatusList& from);
  void MergeFrom(const PWOIStatusList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PWOIStatusList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .my_comm_proto.PWOIStatus wosts_items = 1;
  int wosts_items_size() const;
  void clear_wosts_items();
  static const int kWostsItemsFieldNumber = 1;
  const ::my_comm_proto::PWOIStatus& wosts_items(int index) const;
  ::my_comm_proto::PWOIStatus* mutable_wosts_items(int index);
  ::my_comm_proto::PWOIStatus* add_wosts_items();
  ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PWOIStatus >*
      mutable_wosts_items();
  const ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PWOIStatus >&
      wosts_items() const;

  // @@protoc_insertion_point(class_scope:my_comm_proto.PWOIStatusList)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PWOIStatus > wosts_items_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  #endif
  friend void protobuf_AssignDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  friend void protobuf_ShutdownFile_my_5fcommon_5fproto_5fcomm_5flite_2eproto();

  void InitAsDefaultInstance();
  static PWOIStatusList* default_instance_;
};
// -------------------------------------------------------------------

class PBoxIdVehicleRow : public ::google::protobuf::MessageLite {
 public:
  PBoxIdVehicleRow();
  virtual ~PBoxIdVehicleRow();

  PBoxIdVehicleRow(const PBoxIdVehicleRow& from);

  inline PBoxIdVehicleRow& operator=(const PBoxIdVehicleRow& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const PBoxIdVehicleRow& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PBoxIdVehicleRow* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PBoxIdVehicleRow* other);

  // implements Message ----------------------------------------------

  inline PBoxIdVehicleRow* New() const { return New(NULL); }

  PBoxIdVehicleRow* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PBoxIdVehicleRow& from);
  void MergeFrom(const PBoxIdVehicleRow& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBoxIdVehicleRow* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 ID = 1;
  bool has_id() const;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // required int64 mTS = 2;
  bool has_mts() const;
  void clear_mts();
  static const int kMTSFieldNumber = 2;
  ::google::protobuf::int64 mts() const;
  void set_mts(::google::protobuf::int64 value);

  // required string desc = 3;
  bool has_desc() const;
  void clear_desc();
  static const int kDescFieldNumber = 3;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // required int32 weight = 4;
  bool has_weight() const;
  void clear_weight();
  static const int kWeightFieldNumber = 4;
  ::google::protobuf::int32 weight() const;
  void set_weight(::google::protobuf::int32 value);

  // required int32 flag = 5;
  bool has_flag() const;
  void clear_flag();
  static const int kFlagFieldNumber = 5;
  ::google::protobuf::int32 flag() const;
  void set_flag(::google::protobuf::int32 value);

  // required string VL = 6;
  bool has_vl() const;
  void clear_vl();
  static const int kVLFieldNumber = 6;
  const ::std::string& vl() const;
  void set_vl(const ::std::string& value);
  void set_vl(const char* value);
  void set_vl(const char* value, size_t size);
  ::std::string* mutable_vl();
  ::std::string* release_vl();
  void set_allocated_vl(::std::string* vl);

  // required string VLP = 7;
  bool has_vlp() const;
  void clear_vlp();
  static const int kVLPFieldNumber = 7;
  const ::std::string& vlp() const;
  void set_vlp(const ::std::string& value);
  void set_vlp(const char* value);
  void set_vlp(const char* value, size_t size);
  ::std::string* mutable_vlp();
  ::std::string* release_vlp();
  void set_allocated_vlp(::std::string* vlp);

  // required int32 cid = 8;
  bool has_cid() const;
  void clear_cid();
  static const int kCidFieldNumber = 8;
  ::google::protobuf::int32 cid() const;
  void set_cid(::google::protobuf::int32 value);

  // required string Img = 9;
  bool has_img() const;
  void clear_img();
  static const int kImgFieldNumber = 9;
  const ::std::string& img() const;
  void set_img(const ::std::string& value);
  void set_img(const char* value);
  void set_img(const char* value, size_t size);
  ::std::string* mutable_img();
  ::std::string* release_img();
  void set_allocated_img(::std::string* img);

  // optional string maker = 10;
  bool has_maker() const;
  void clear_maker();
  static const int kMakerFieldNumber = 10;
  const ::std::string& maker() const;
  void set_maker(const ::std::string& value);
  void set_maker(const char* value);
  void set_maker(const char* value, size_t size);
  ::std::string* mutable_maker();
  ::std::string* release_maker();
  void set_allocated_maker(::std::string* maker);

  // optional string model = 11;
  bool has_model() const;
  void clear_model();
  static const int kModelFieldNumber = 11;
  const ::std::string& model() const;
  void set_model(const ::std::string& value);
  void set_model(const char* value);
  void set_model(const char* value, size_t size);
  ::std::string* mutable_model();
  ::std::string* release_model();
  void set_allocated_model(::std::string* model);

  // optional string color = 12;
  bool has_color() const;
  void clear_color();
  static const int kColorFieldNumber = 12;
  const ::std::string& color() const;
  void set_color(const ::std::string& value);
  void set_color(const char* value);
  void set_color(const char* value, size_t size);
  ::std::string* mutable_color();
  ::std::string* release_color();
  void set_allocated_color(::std::string* color);

  // optional int32 year = 13;
  bool has_year() const;
  void clear_year();
  static const int kYearFieldNumber = 13;
  ::google::protobuf::int32 year() const;
  void set_year(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:my_comm_proto.PBoxIdVehicleRow)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_mts();
  inline void clear_has_mts();
  inline void set_has_desc();
  inline void clear_has_desc();
  inline void set_has_weight();
  inline void clear_has_weight();
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_vl();
  inline void clear_has_vl();
  inline void set_has_vlp();
  inline void clear_has_vlp();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_img();
  inline void clear_has_img();
  inline void set_has_maker();
  inline void clear_has_maker();
  inline void set_has_model();
  inline void clear_has_model();
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_year();
  inline void clear_has_year();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 mts_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::int32 weight_;
  ::google::protobuf::int32 flag_;
  ::google::protobuf::internal::ArenaStringPtr vl_;
  ::google::protobuf::internal::ArenaStringPtr vlp_;
  ::google::protobuf::internal::ArenaStringPtr img_;
  ::google::protobuf::internal::ArenaStringPtr maker_;
  ::google::protobuf::int32 cid_;
  ::google::protobuf::int32 year_;
  ::google::protobuf::internal::ArenaStringPtr model_;
  ::google::protobuf::internal::ArenaStringPtr color_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  #endif
  friend void protobuf_AssignDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  friend void protobuf_ShutdownFile_my_5fcommon_5fproto_5fcomm_5flite_2eproto();

  void InitAsDefaultInstance();
  static PBoxIdVehicleRow* default_instance_;
};
// -------------------------------------------------------------------

class PBoxIdVehicleRowList : public ::google::protobuf::MessageLite {
 public:
  PBoxIdVehicleRowList();
  virtual ~PBoxIdVehicleRowList();

  PBoxIdVehicleRowList(const PBoxIdVehicleRowList& from);

  inline PBoxIdVehicleRowList& operator=(const PBoxIdVehicleRowList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const PBoxIdVehicleRowList& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PBoxIdVehicleRowList* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PBoxIdVehicleRowList* other);

  // implements Message ----------------------------------------------

  inline PBoxIdVehicleRowList* New() const { return New(NULL); }

  PBoxIdVehicleRowList* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PBoxIdVehicleRowList& from);
  void MergeFrom(const PBoxIdVehicleRowList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBoxIdVehicleRowList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .my_comm_proto.PBoxIdVehicleRow vitem = 1;
  int vitem_size() const;
  void clear_vitem();
  static const int kVitemFieldNumber = 1;
  const ::my_comm_proto::PBoxIdVehicleRow& vitem(int index) const;
  ::my_comm_proto::PBoxIdVehicleRow* mutable_vitem(int index);
  ::my_comm_proto::PBoxIdVehicleRow* add_vitem();
  ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PBoxIdVehicleRow >*
      mutable_vitem();
  const ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PBoxIdVehicleRow >&
      vitem() const;

  // @@protoc_insertion_point(class_scope:my_comm_proto.PBoxIdVehicleRowList)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PBoxIdVehicleRow > vitem_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  #endif
  friend void protobuf_AssignDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  friend void protobuf_ShutdownFile_my_5fcommon_5fproto_5fcomm_5flite_2eproto();

  void InitAsDefaultInstance();
  static PBoxIdVehicleRowList* default_instance_;
};
// -------------------------------------------------------------------

class PConfiguration : public ::google::protobuf::MessageLite {
 public:
  PConfiguration();
  virtual ~PConfiguration();

  PConfiguration(const PConfiguration& from);

  inline PConfiguration& operator=(const PConfiguration& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const PConfiguration& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PConfiguration* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PConfiguration* other);

  // implements Message ----------------------------------------------

  inline PConfiguration* New() const { return New(NULL); }

  PConfiguration* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PConfiguration& from);
  void MergeFrom(const PConfiguration& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PConfiguration* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 inspHD = 1;
  bool has_insphd() const;
  void clear_insphd();
  static const int kInspHDFieldNumber = 1;
  ::google::protobuf::int32 insphd() const;
  void set_insphd(::google::protobuf::int32 value);

  // required int32 inspHA = 2;
  bool has_inspha() const;
  void clear_inspha();
  static const int kInspHAFieldNumber = 2;
  ::google::protobuf::int32 inspha() const;
  void set_inspha(::google::protobuf::int32 value);

  // required int32 imagesLimit = 3;
  bool has_imageslimit() const;
  void clear_imageslimit();
  static const int kImagesLimitFieldNumber = 3;
  ::google::protobuf::int32 imageslimit() const;
  void set_imageslimit(::google::protobuf::int32 value);

  // required int32 violationthreshold = 4;
  bool has_violationthreshold() const;
  void clear_violationthreshold();
  static const int kViolationthresholdFieldNumber = 4;
  ::google::protobuf::int32 violationthreshold() const;
  void set_violationthreshold(::google::protobuf::int32 value);

  // required int32 login = 5;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 5;
  ::google::protobuf::int32 login() const;
  void set_login(::google::protobuf::int32 value);

  // required bool _scan_flag = 6;
  bool has__scan_flag() const;
  void clear__scan_flag();
  static const int kScanFlagFieldNumber = 6;
  bool _scan_flag() const;
  void set__scan_flag(bool value);

  // required string SearchType = 7;
  bool has_searchtype() const;
  void clear_searchtype();
  static const int kSearchTypeFieldNumber = 7;
  const ::std::string& searchtype() const;
  void set_searchtype(const ::std::string& value);
  void set_searchtype(const char* value);
  void set_searchtype(const char* value, size_t size);
  ::std::string* mutable_searchtype();
  ::std::string* release_searchtype();
  void set_allocated_searchtype(::std::string* searchtype);

  // required int32 ScreenLock = 8;
  bool has_screenlock() const;
  void clear_screenlock();
  static const int kScreenLockFieldNumber = 8;
  ::google::protobuf::int32 screenlock() const;
  void set_screenlock(::google::protobuf::int32 value);

  // required int32 OdoInputFlag = 9;
  bool has_odoinputflag() const;
  void clear_odoinputflag();
  static const int kOdoInputFlagFieldNumber = 9;
  ::google::protobuf::int32 odoinputflag() const;
  void set_odoinputflag(::google::protobuf::int32 value);

  // required int32 WeightThreshold = 10;
  bool has_weightthreshold() const;
  void clear_weightthreshold();
  static const int kWeightThresholdFieldNumber = 10;
  ::google::protobuf::int32 weightthreshold() const;
  void set_weightthreshold(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:my_comm_proto.PConfiguration)
 private:
  inline void set_has_insphd();
  inline void clear_has_insphd();
  inline void set_has_inspha();
  inline void clear_has_inspha();
  inline void set_has_imageslimit();
  inline void clear_has_imageslimit();
  inline void set_has_violationthreshold();
  inline void clear_has_violationthreshold();
  inline void set_has_login();
  inline void clear_has_login();
  inline void set_has__scan_flag();
  inline void clear_has__scan_flag();
  inline void set_has_searchtype();
  inline void clear_has_searchtype();
  inline void set_has_screenlock();
  inline void clear_has_screenlock();
  inline void set_has_odoinputflag();
  inline void clear_has_odoinputflag();
  inline void set_has_weightthreshold();
  inline void clear_has_weightthreshold();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 insphd_;
  ::google::protobuf::int32 inspha_;
  ::google::protobuf::int32 imageslimit_;
  ::google::protobuf::int32 violationthreshold_;
  ::google::protobuf::int32 login_;
  bool _scan_flag_;
  ::google::protobuf::internal::ArenaStringPtr searchtype_;
  ::google::protobuf::int32 screenlock_;
  ::google::protobuf::int32 odoinputflag_;
  ::google::protobuf::int32 weightthreshold_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  #endif
  friend void protobuf_AssignDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  friend void protobuf_ShutdownFile_my_5fcommon_5fproto_5fcomm_5flite_2eproto();

  void InitAsDefaultInstance();
  static PConfiguration* default_instance_;
};
// -------------------------------------------------------------------

class PEmployeeRow : public ::google::protobuf::MessageLite {
 public:
  PEmployeeRow();
  virtual ~PEmployeeRow();

  PEmployeeRow(const PEmployeeRow& from);

  inline PEmployeeRow& operator=(const PEmployeeRow& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const PEmployeeRow& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PEmployeeRow* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PEmployeeRow* other);

  // implements Message ----------------------------------------------

  inline PEmployeeRow* New() const { return New(NULL); }

  PEmployeeRow* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PEmployeeRow& from);
  void MergeFrom(const PEmployeeRow& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PEmployeeRow* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string ID = 1;
  bool has_id() const;
  void clear_id();
  static const int kIDFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required string DriverName = 2;
  bool has_drivername() const;
  void clear_drivername();
  static const int kDriverNameFieldNumber = 2;
  const ::std::string& drivername() const;
  void set_drivername(const ::std::string& value);
  void set_drivername(const char* value);
  void set_drivername(const char* value, size_t size);
  ::std::string* mutable_drivername();
  ::std::string* release_drivername();
  void set_allocated_drivername(::std::string* drivername);

  // optional string UserName = 3;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 3;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string Email = 4;
  bool has_email() const;
  void clear_email();
  static const int kEmailFieldNumber = 4;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // optional string Password = 5;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 5;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional string License = 6;
  bool has_license() const;
  void clear_license();
  static const int kLicenseFieldNumber = 6;
  const ::std::string& license() const;
  void set_license(const ::std::string& value);
  void set_license(const char* value);
  void set_license(const char* value, size_t size);
  ::std::string* mutable_license();
  ::std::string* release_license();
  void set_allocated_license(::std::string* license);

  // optional string Country = 7;
  bool has_country() const;
  void clear_country();
  static const int kCountryFieldNumber = 7;
  const ::std::string& country() const;
  void set_country(const ::std::string& value);
  void set_country(const char* value);
  void set_country(const char* value, size_t size);
  ::std::string* mutable_country();
  ::std::string* release_country();
  void set_allocated_country(::std::string* country);

  // optional string Signature = 8;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 8;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // optional string Domain = 9;
  bool has_domain() const;
  void clear_domain();
  static const int kDomainFieldNumber = 9;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  void set_domain(const char* value);
  void set_domain(const char* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // optional int32 Cycle = 10;
  bool has_cycle() const;
  void clear_cycle();
  static const int kCycleFieldNumber = 10;
  ::google::protobuf::int32 cycle() const;
  void set_cycle(::google::protobuf::int32 value);

  // optional int32 HOSExcept = 11;
  bool has_hosexcept() const;
  void clear_hosexcept();
  static const int kHOSExceptFieldNumber = 11;
  ::google::protobuf::int32 hosexcept() const;
  void set_hosexcept(::google::protobuf::int32 value);

  // optional int32 ApplyDTS = 12;
  bool has_applydts() const;
  void clear_applydts();
  static const int kApplyDTSFieldNumber = 12;
  ::google::protobuf::int32 applydts() const;
  void set_applydts(::google::protobuf::int32 value);

  // optional float TZ = 13;
  bool has_tz() const;
  void clear_tz();
  static const int kTZFieldNumber = 13;
  float tz() const;
  void set_tz(float value);

  // optional string HomeAddress = 14;
  bool has_homeaddress() const;
  void clear_homeaddress();
  static const int kHomeAddressFieldNumber = 14;
  const ::std::string& homeaddress() const;
  void set_homeaddress(const ::std::string& value);
  void set_homeaddress(const char* value);
  void set_homeaddress(const char* value, size_t size);
  ::std::string* mutable_homeaddress();
  ::std::string* release_homeaddress();
  void set_allocated_homeaddress(::std::string* homeaddress);

  // optional bool IsSupervisor = 15;
  bool has_issupervisor() const;
  void clear_issupervisor();
  static const int kIsSupervisorFieldNumber = 15;
  bool issupervisor() const;
  void set_issupervisor(bool value);

  // optional string State = 16;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 16;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  void set_state(const char* value);
  void set_state(const char* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // optional string OrgName = 17;
  bool has_orgname() const;
  void clear_orgname();
  static const int kOrgNameFieldNumber = 17;
  const ::std::string& orgname() const;
  void set_orgname(const ::std::string& value);
  void set_orgname(const char* value);
  void set_orgname(const char* value, size_t size);
  ::std::string* mutable_orgname();
  ::std::string* release_orgname();
  void set_allocated_orgname(::std::string* orgname);

  // optional string OrgAddr = 18;
  bool has_orgaddr() const;
  void clear_orgaddr();
  static const int kOrgAddrFieldNumber = 18;
  const ::std::string& orgaddr() const;
  void set_orgaddr(const ::std::string& value);
  void set_orgaddr(const char* value);
  void set_orgaddr(const char* value, size_t size);
  ::std::string* mutable_orgaddr();
  ::std::string* release_orgaddr();
  void set_allocated_orgaddr(::std::string* orgaddr);

  // optional bool DLS = 21;
  bool has_dls() const;
  void clear_dls();
  static const int kDLSFieldNumber = 21;
  bool dls() const;
  void set_dls(bool value);

  // optional string photo = 22;
  bool has_photo() const;
  void clear_photo();
  static const int kPhotoFieldNumber = 22;
  const ::std::string& photo() const;
  void set_photo(const ::std::string& value);
  void set_photo(const char* value);
  void set_photo(const char* value, size_t size);
  ::std::string* mutable_photo();
  ::std::string* release_photo();
  void set_allocated_photo(::std::string* photo);

  // @@protoc_insertion_point(class_scope:my_comm_proto.PEmployeeRow)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_drivername();
  inline void clear_has_drivername();
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_email();
  inline void clear_has_email();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_license();
  inline void clear_has_license();
  inline void set_has_country();
  inline void clear_has_country();
  inline void set_has_signature();
  inline void clear_has_signature();
  inline void set_has_domain();
  inline void clear_has_domain();
  inline void set_has_cycle();
  inline void clear_has_cycle();
  inline void set_has_hosexcept();
  inline void clear_has_hosexcept();
  inline void set_has_applydts();
  inline void clear_has_applydts();
  inline void set_has_tz();
  inline void clear_has_tz();
  inline void set_has_homeaddress();
  inline void clear_has_homeaddress();
  inline void set_has_issupervisor();
  inline void clear_has_issupervisor();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_orgname();
  inline void clear_has_orgname();
  inline void set_has_orgaddr();
  inline void clear_has_orgaddr();
  inline void set_has_dls();
  inline void clear_has_dls();
  inline void set_has_photo();
  inline void clear_has_photo();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr drivername_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr license_;
  ::google::protobuf::internal::ArenaStringPtr country_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  ::google::protobuf::int32 cycle_;
  ::google::protobuf::int32 hosexcept_;
  ::google::protobuf::int32 applydts_;
  float tz_;
  ::google::protobuf::internal::ArenaStringPtr homeaddress_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  ::google::protobuf::internal::ArenaStringPtr orgname_;
  ::google::protobuf::internal::ArenaStringPtr orgaddr_;
  ::google::protobuf::internal::ArenaStringPtr photo_;
  bool issupervisor_;
  bool dls_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  #endif
  friend void protobuf_AssignDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  friend void protobuf_ShutdownFile_my_5fcommon_5fproto_5fcomm_5flite_2eproto();

  void InitAsDefaultInstance();
  static PEmployeeRow* default_instance_;
};
// -------------------------------------------------------------------

class PTimeLogRow : public ::google::protobuf::MessageLite {
 public:
  PTimeLogRow();
  virtual ~PTimeLogRow();

  PTimeLogRow(const PTimeLogRow& from);

  inline PTimeLogRow& operator=(const PTimeLogRow& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const PTimeLogRow& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PTimeLogRow* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PTimeLogRow* other);

  // implements Message ----------------------------------------------

  inline PTimeLogRow* New() const { return New(NULL); }

  PTimeLogRow* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PTimeLogRow& from);
  void MergeFrom(const PTimeLogRow& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PTimeLogRow* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 Event = 1;
  bool has_event() const;
  void clear_event();
  static const int kEventFieldNumber = 1;
  ::google::protobuf::int32 event() const;
  void set_event(::google::protobuf::int32 value);

  // required int64 LogTime = 2;
  bool has_logtime() const;
  void clear_logtime();
  static const int kLogTimeFieldNumber = 2;
  ::google::protobuf::int64 logtime() const;
  void set_logtime(::google::protobuf::int64 value);

  // required bool Signed = 3;
  bool has_signed_() const;
  void clear_signed_();
  static const int kSignedFieldNumber = 3;
  bool signed_() const;
  void set_signed_(bool value);

  // required int32 TLID = 4;
  bool has_tlid() const;
  void clear_tlid();
  static const int kTLIDFieldNumber = 4;
  ::google::protobuf::int32 tlid() const;
  void set_tlid(::google::protobuf::int32 value);

  // required int32 Type = 5;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 Odo = 6;
  bool has_odo() const;
  void clear_odo();
  static const int kOdoFieldNumber = 6;
  ::google::protobuf::int32 odo() const;
  void set_odo(::google::protobuf::int32 value);

  // required int32 Logbookstopid = 7;
  bool has_logbookstopid() const;
  void clear_logbookstopid();
  static const int kLogbookstopidFieldNumber = 7;
  ::google::protobuf::int32 logbookstopid() const;
  void set_logbookstopid(::google::protobuf::int32 value);

  // optional string EqNo = 8;
  bool has_eqno() const;
  void clear_eqno();
  static const int kEqNoFieldNumber = 8;
  const ::std::string& eqno() const;
  void set_eqno(const ::std::string& value);
  void set_eqno(const char* value);
  void set_eqno(const char* value, size_t size);
  ::std::string* mutable_eqno();
  ::std::string* release_eqno();
  void set_allocated_eqno(::std::string* eqno);

  // optional float Lat = 9;
  bool has_lat() const;
  void clear_lat();
  static const int kLatFieldNumber = 9;
  float lat() const;
  void set_lat(float value);

  // optional float Lon = 10;
  bool has_lon() const;
  void clear_lon();
  static const int kLonFieldNumber = 10;
  float lon() const;
  void set_lon(float value);

  // required string Comment = 11;
  bool has_comment() const;
  void clear_comment();
  static const int kCommentFieldNumber = 11;
  const ::std::string& comment() const;
  void set_comment(const ::std::string& value);
  void set_comment(const char* value);
  void set_comment(const char* value, size_t size);
  ::std::string* mutable_comment();
  ::std::string* release_comment();
  void set_allocated_comment(::std::string* comment);

  // required string DriverId = 12;
  bool has_driverid() const;
  void clear_driverid();
  static const int kDriverIdFieldNumber = 12;
  const ::std::string& driverid() const;
  void set_driverid(const ::std::string& value);
  void set_driverid(const char* value);
  void set_driverid(const char* value, size_t size);
  ::std::string* mutable_driverid();
  ::std::string* release_driverid();
  void set_allocated_driverid(::std::string* driverid);

  // optional string State = 13;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 13;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  void set_state(const char* value);
  void set_state(const char* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // required int32 BoxID = 14;
  bool has_boxid() const;
  void clear_boxid();
  static const int kBoxIDFieldNumber = 14;
  ::google::protobuf::int32 boxid() const;
  void set_boxid(::google::protobuf::int32 value);

  // required int64 OLT = 15;
  bool has_olt() const;
  void clear_olt();
  static const int kOLTFieldNumber = 15;
  ::google::protobuf::int64 olt() const;
  void set_olt(::google::protobuf::int64 value);

  // optional int32 Editor = 16;
  bool has_editor() const;
  void clear_editor();
  static const int kEditorFieldNumber = 16;
  ::google::protobuf::int32 editor() const;
  void set_editor(::google::protobuf::int32 value);

  // optional float TZ = 17;
  bool has_tz() const;
  void clear_tz();
  static const int kTZFieldNumber = 17;
  float tz() const;
  void set_tz(float value);

  // optional float DST = 18;
  bool has_dst() const;
  void clear_dst();
  static const int kDSTFieldNumber = 18;
  float dst() const;
  void set_dst(float value);

  // optional string Addr = 19;
  bool has_addr() const;
  void clear_addr();
  static const int kAddrFieldNumber = 19;
  const ::std::string& addr() const;
  void set_addr(const ::std::string& value);
  void set_addr(const char* value);
  void set_addr(const char* value, size_t size);
  ::std::string* mutable_addr();
  ::std::string* release_addr();
  void set_allocated_addr(::std::string* addr);

  // optional int32 arGeo = 20;
  bool has_argeo() const;
  void clear_argeo();
  static const int kArGeoFieldNumber = 20;
  ::google::protobuf::int32 argeo() const;
  void set_argeo(::google::protobuf::int32 value);

  // optional string CoDriver = 21;
  bool has_codriver() const;
  void clear_codriver();
  static const int kCoDriverFieldNumber = 21;
  const ::std::string& codriver() const;
  void set_codriver(const ::std::string& value);
  void set_codriver(const char* value);
  void set_codriver(const char* value, size_t size);
  ::std::string* mutable_codriver();
  ::std::string* release_codriver();
  void set_allocated_codriver(::std::string* codriver);

  // optional int32 QualifyRadiusRule = 22;
  bool has_qualifyradiusrule() const;
  void clear_qualifyradiusrule();
  static const int kQualifyRadiusRuleFieldNumber = 22;
  ::google::protobuf::int32 qualifyradiusrule() const;
  void set_qualifyradiusrule(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:my_comm_proto.PTimeLogRow)
 private:
  inline void set_has_event();
  inline void clear_has_event();
  inline void set_has_logtime();
  inline void clear_has_logtime();
  inline void set_has_signed_();
  inline void clear_has_signed_();
  inline void set_has_tlid();
  inline void clear_has_tlid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_odo();
  inline void clear_has_odo();
  inline void set_has_logbookstopid();
  inline void clear_has_logbookstopid();
  inline void set_has_eqno();
  inline void clear_has_eqno();
  inline void set_has_lat();
  inline void clear_has_lat();
  inline void set_has_lon();
  inline void clear_has_lon();
  inline void set_has_comment();
  inline void clear_has_comment();
  inline void set_has_driverid();
  inline void clear_has_driverid();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_boxid();
  inline void clear_has_boxid();
  inline void set_has_olt();
  inline void clear_has_olt();
  inline void set_has_editor();
  inline void clear_has_editor();
  inline void set_has_tz();
  inline void clear_has_tz();
  inline void set_has_dst();
  inline void clear_has_dst();
  inline void set_has_addr();
  inline void clear_has_addr();
  inline void set_has_argeo();
  inline void clear_has_argeo();
  inline void set_has_codriver();
  inline void clear_has_codriver();
  inline void set_has_qualifyradiusrule();
  inline void clear_has_qualifyradiusrule();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 logtime_;
  ::google::protobuf::int32 event_;
  bool signed__;
  ::google::protobuf::int32 tlid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 odo_;
  ::google::protobuf::int32 logbookstopid_;
  ::google::protobuf::internal::ArenaStringPtr eqno_;
  float lat_;
  float lon_;
  ::google::protobuf::internal::ArenaStringPtr comment_;
  ::google::protobuf::internal::ArenaStringPtr driverid_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  ::google::protobuf::int64 olt_;
  ::google::protobuf::int32 boxid_;
  ::google::protobuf::int32 editor_;
  float tz_;
  float dst_;
  ::google::protobuf::internal::ArenaStringPtr addr_;
  ::google::protobuf::internal::ArenaStringPtr codriver_;
  ::google::protobuf::int32 argeo_;
  ::google::protobuf::int32 qualifyradiusrule_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  #endif
  friend void protobuf_AssignDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  friend void protobuf_ShutdownFile_my_5fcommon_5fproto_5fcomm_5flite_2eproto();

  void InitAsDefaultInstance();
  static PTimeLogRow* default_instance_;
};
// -------------------------------------------------------------------

class PHosAlertRow : public ::google::protobuf::MessageLite {
 public:
  PHosAlertRow();
  virtual ~PHosAlertRow();

  PHosAlertRow(const PHosAlertRow& from);

  inline PHosAlertRow& operator=(const PHosAlertRow& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const PHosAlertRow& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PHosAlertRow* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PHosAlertRow* other);

  // implements Message ----------------------------------------------

  inline PHosAlertRow* New() const { return New(NULL); }

  PHosAlertRow* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PHosAlertRow& from);
  void MergeFrom(const PHosAlertRow& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PHosAlertRow* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 dt = 1;
  bool has_dt() const;
  void clear_dt();
  static const int kDtFieldNumber = 1;
  ::google::protobuf::int64 dt() const;
  void set_dt(::google::protobuf::int64 value);

  // required string ondutyruleviolated = 2;
  bool has_ondutyruleviolated() const;
  void clear_ondutyruleviolated();
  static const int kOndutyruleviolatedFieldNumber = 2;
  const ::std::string& ondutyruleviolated() const;
  void set_ondutyruleviolated(const ::std::string& value);
  void set_ondutyruleviolated(const char* value);
  void set_ondutyruleviolated(const char* value, size_t size);
  ::std::string* mutable_ondutyruleviolated();
  ::std::string* release_ondutyruleviolated();
  void set_allocated_ondutyruleviolated(::std::string* ondutyruleviolated);

  // required string drivingruleviolated = 3;
  bool has_drivingruleviolated() const;
  void clear_drivingruleviolated();
  static const int kDrivingruleviolatedFieldNumber = 3;
  const ::std::string& drivingruleviolated() const;
  void set_drivingruleviolated(const ::std::string& value);
  void set_drivingruleviolated(const char* value);
  void set_drivingruleviolated(const char* value, size_t size);
  ::std::string* mutable_drivingruleviolated();
  ::std::string* release_drivingruleviolated();
  void set_allocated_drivingruleviolated(::std::string* drivingruleviolated);

  // required int32 alertType = 4;
  bool has_alerttype() const;
  void clear_alerttype();
  static const int kAlertTypeFieldNumber = 4;
  ::google::protobuf::int32 alerttype() const;
  void set_alerttype(::google::protobuf::int32 value);

  // required int32 drivingAvailable = 5;
  bool has_drivingavailable() const;
  void clear_drivingavailable();
  static const int kDrivingAvailableFieldNumber = 5;
  ::google::protobuf::int32 drivingavailable() const;
  void set_drivingavailable(::google::protobuf::int32 value);

  // required int32 ondutyAvailable = 6;
  bool has_ondutyavailable() const;
  void clear_ondutyavailable();
  static const int kOndutyAvailableFieldNumber = 6;
  ::google::protobuf::int32 ondutyavailable() const;
  void set_ondutyavailable(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:my_comm_proto.PHosAlertRow)
 private:
  inline void set_has_dt();
  inline void clear_has_dt();
  inline void set_has_ondutyruleviolated();
  inline void clear_has_ondutyruleviolated();
  inline void set_has_drivingruleviolated();
  inline void clear_has_drivingruleviolated();
  inline void set_has_alerttype();
  inline void clear_has_alerttype();
  inline void set_has_drivingavailable();
  inline void clear_has_drivingavailable();
  inline void set_has_ondutyavailable();
  inline void clear_has_ondutyavailable();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 dt_;
  ::google::protobuf::internal::ArenaStringPtr ondutyruleviolated_;
  ::google::protobuf::internal::ArenaStringPtr drivingruleviolated_;
  ::google::protobuf::int32 alerttype_;
  ::google::protobuf::int32 drivingavailable_;
  ::google::protobuf::int32 ondutyavailable_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  #endif
  friend void protobuf_AssignDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  friend void protobuf_ShutdownFile_my_5fcommon_5fproto_5fcomm_5flite_2eproto();

  void InitAsDefaultInstance();
  static PHosAlertRow* default_instance_;
};
// -------------------------------------------------------------------

class PRecapRow : public ::google::protobuf::MessageLite {
 public:
  PRecapRow();
  virtual ~PRecapRow();

  PRecapRow(const PRecapRow& from);

  inline PRecapRow& operator=(const PRecapRow& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const PRecapRow& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PRecapRow* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PRecapRow* other);

  // implements Message ----------------------------------------------

  inline PRecapRow* New() const { return New(NULL); }

  PRecapRow* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PRecapRow& from);
  void MergeFrom(const PRecapRow& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PRecapRow* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 date = 1;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 1;
  ::google::protobuf::int64 date() const;
  void set_date(::google::protobuf::int64 value);

  // required int32 today = 2;
  bool has_today() const;
  void clear_today();
  static const int kTodayFieldNumber = 2;
  ::google::protobuf::int32 today() const;
  void set_today(::google::protobuf::int32 value);

  // required int32 cycleTotal = 3;
  bool has_cycletotal() const;
  void clear_cycletotal();
  static const int kCycleTotalFieldNumber = 3;
  ::google::protobuf::int32 cycletotal() const;
  void set_cycletotal(::google::protobuf::int32 value);

  // required int32 cycleAvailable = 4;
  bool has_cycleavailable() const;
  void clear_cycleavailable();
  static const int kCycleAvailableFieldNumber = 4;
  ::google::protobuf::int32 cycleavailable() const;
  void set_cycleavailable(::google::protobuf::int32 value);

  // required string cycle = 5;
  bool has_cycle() const;
  void clear_cycle();
  static const int kCycleFieldNumber = 5;
  const ::std::string& cycle() const;
  void set_cycle(const ::std::string& value);
  void set_cycle(const char* value);
  void set_cycle(const char* value, size_t size);
  ::std::string* mutable_cycle();
  ::std::string* release_cycle();
  void set_allocated_cycle(::std::string* cycle);

  // required bool sent = 6;
  bool has_sent() const;
  void clear_sent();
  static const int kSentFieldNumber = 6;
  bool sent() const;
  void set_sent(bool value);

  // @@protoc_insertion_point(class_scope:my_comm_proto.PRecapRow)
 private:
  inline void set_has_date();
  inline void clear_has_date();
  inline void set_has_today();
  inline void clear_has_today();
  inline void set_has_cycletotal();
  inline void clear_has_cycletotal();
  inline void set_has_cycleavailable();
  inline void clear_has_cycleavailable();
  inline void set_has_cycle();
  inline void clear_has_cycle();
  inline void set_has_sent();
  inline void clear_has_sent();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 date_;
  ::google::protobuf::int32 today_;
  ::google::protobuf::int32 cycletotal_;
  ::google::protobuf::internal::ArenaStringPtr cycle_;
  ::google::protobuf::int32 cycleavailable_;
  bool sent_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  #endif
  friend void protobuf_AssignDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  friend void protobuf_ShutdownFile_my_5fcommon_5fproto_5fcomm_5flite_2eproto();

  void InitAsDefaultInstance();
  static PRecapRow* default_instance_;
};
// -------------------------------------------------------------------

class PRuleSelectionHistoryRow : public ::google::protobuf::MessageLite {
 public:
  PRuleSelectionHistoryRow();
  virtual ~PRuleSelectionHistoryRow();

  PRuleSelectionHistoryRow(const PRuleSelectionHistoryRow& from);

  inline PRuleSelectionHistoryRow& operator=(const PRuleSelectionHistoryRow& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const PRuleSelectionHistoryRow& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PRuleSelectionHistoryRow* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PRuleSelectionHistoryRow* other);

  // implements Message ----------------------------------------------

  inline PRuleSelectionHistoryRow* New() const { return New(NULL); }

  PRuleSelectionHistoryRow* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PRuleSelectionHistoryRow& from);
  void MergeFrom(const PRuleSelectionHistoryRow& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PRuleSelectionHistoryRow* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 RSHID = 1;
  bool has_rshid() const;
  void clear_rshid();
  static const int kRSHIDFieldNumber = 1;
  ::google::protobuf::int32 rshid() const;
  void set_rshid(::google::protobuf::int32 value);

  // required int32 Ruleid = 2;
  bool has_ruleid() const;
  void clear_ruleid();
  static const int kRuleidFieldNumber = 2;
  ::google::protobuf::int32 ruleid() const;
  void set_ruleid(::google::protobuf::int32 value);

  // required int64 selectTime = 3;
  bool has_selecttime() const;
  void clear_selecttime();
  static const int kSelectTimeFieldNumber = 3;
  ::google::protobuf::int64 selecttime() const;
  void set_selecttime(::google::protobuf::int64 value);

  // required string country = 4;
  bool has_country() const;
  void clear_country();
  static const int kCountryFieldNumber = 4;
  const ::std::string& country() const;
  void set_country(const ::std::string& value);
  void set_country(const char* value);
  void set_country(const char* value, size_t size);
  ::std::string* mutable_country();
  ::std::string* release_country();
  void set_allocated_country(::std::string* country);

  // required int32 ruleException = 5;
  bool has_ruleexception() const;
  void clear_ruleexception();
  static const int kRuleExceptionFieldNumber = 5;
  ::google::protobuf::int32 ruleexception() const;
  void set_ruleexception(::google::protobuf::int32 value);

  // required bool sent = 6;
  bool has_sent() const;
  void clear_sent();
  static const int kSentFieldNumber = 6;
  bool sent() const;
  void set_sent(bool value);

  // @@protoc_insertion_point(class_scope:my_comm_proto.PRuleSelectionHistoryRow)
 private:
  inline void set_has_rshid();
  inline void clear_has_rshid();
  inline void set_has_ruleid();
  inline void clear_has_ruleid();
  inline void set_has_selecttime();
  inline void clear_has_selecttime();
  inline void set_has_country();
  inline void clear_has_country();
  inline void set_has_ruleexception();
  inline void clear_has_ruleexception();
  inline void set_has_sent();
  inline void clear_has_sent();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 rshid_;
  ::google::protobuf::int32 ruleid_;
  ::google::protobuf::int64 selecttime_;
  ::google::protobuf::internal::ArenaStringPtr country_;
  ::google::protobuf::int32 ruleexception_;
  bool sent_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  #endif
  friend void protobuf_AssignDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  friend void protobuf_ShutdownFile_my_5fcommon_5fproto_5fcomm_5flite_2eproto();

  void InitAsDefaultInstance();
  static PRuleSelectionHistoryRow* default_instance_;
};
// -------------------------------------------------------------------

class PTimeLogRowList : public ::google::protobuf::MessageLite {
 public:
  PTimeLogRowList();
  virtual ~PTimeLogRowList();

  PTimeLogRowList(const PTimeLogRowList& from);

  inline PTimeLogRowList& operator=(const PTimeLogRowList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const PTimeLogRowList& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PTimeLogRowList* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PTimeLogRowList* other);

  // implements Message ----------------------------------------------

  inline PTimeLogRowList* New() const { return New(NULL); }

  PTimeLogRowList* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PTimeLogRowList& from);
  void MergeFrom(const PTimeLogRowList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PTimeLogRowList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .my_comm_proto.PTimeLogRow list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  const ::my_comm_proto::PTimeLogRow& list(int index) const;
  ::my_comm_proto::PTimeLogRow* mutable_list(int index);
  ::my_comm_proto::PTimeLogRow* add_list();
  ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PTimeLogRow >*
      mutable_list();
  const ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PTimeLogRow >&
      list() const;

  // @@protoc_insertion_point(class_scope:my_comm_proto.PTimeLogRowList)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PTimeLogRow > list_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  #endif
  friend void protobuf_AssignDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  friend void protobuf_ShutdownFile_my_5fcommon_5fproto_5fcomm_5flite_2eproto();

  void InitAsDefaultInstance();
  static PTimeLogRowList* default_instance_;
};
// -------------------------------------------------------------------

class PRecapRowList : public ::google::protobuf::MessageLite {
 public:
  PRecapRowList();
  virtual ~PRecapRowList();

  PRecapRowList(const PRecapRowList& from);

  inline PRecapRowList& operator=(const PRecapRowList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const PRecapRowList& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PRecapRowList* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PRecapRowList* other);

  // implements Message ----------------------------------------------

  inline PRecapRowList* New() const { return New(NULL); }

  PRecapRowList* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PRecapRowList& from);
  void MergeFrom(const PRecapRowList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PRecapRowList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .my_comm_proto.PRecapRow list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  const ::my_comm_proto::PRecapRow& list(int index) const;
  ::my_comm_proto::PRecapRow* mutable_list(int index);
  ::my_comm_proto::PRecapRow* add_list();
  ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PRecapRow >*
      mutable_list();
  const ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PRecapRow >&
      list() const;

  // @@protoc_insertion_point(class_scope:my_comm_proto.PRecapRowList)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PRecapRow > list_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  #endif
  friend void protobuf_AssignDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  friend void protobuf_ShutdownFile_my_5fcommon_5fproto_5fcomm_5flite_2eproto();

  void InitAsDefaultInstance();
  static PRecapRowList* default_instance_;
};
// -------------------------------------------------------------------

class PRuleSelectionHistoryRowList : public ::google::protobuf::MessageLite {
 public:
  PRuleSelectionHistoryRowList();
  virtual ~PRuleSelectionHistoryRowList();

  PRuleSelectionHistoryRowList(const PRuleSelectionHistoryRowList& from);

  inline PRuleSelectionHistoryRowList& operator=(const PRuleSelectionHistoryRowList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const PRuleSelectionHistoryRowList& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PRuleSelectionHistoryRowList* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PRuleSelectionHistoryRowList* other);

  // implements Message ----------------------------------------------

  inline PRuleSelectionHistoryRowList* New() const { return New(NULL); }

  PRuleSelectionHistoryRowList* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PRuleSelectionHistoryRowList& from);
  void MergeFrom(const PRuleSelectionHistoryRowList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PRuleSelectionHistoryRowList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .my_comm_proto.PRuleSelectionHistoryRow list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  const ::my_comm_proto::PRuleSelectionHistoryRow& list(int index) const;
  ::my_comm_proto::PRuleSelectionHistoryRow* mutable_list(int index);
  ::my_comm_proto::PRuleSelectionHistoryRow* add_list();
  ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PRuleSelectionHistoryRow >*
      mutable_list();
  const ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PRuleSelectionHistoryRow >&
      list() const;

  // @@protoc_insertion_point(class_scope:my_comm_proto.PRuleSelectionHistoryRowList)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PRuleSelectionHistoryRow > list_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  #endif
  friend void protobuf_AssignDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  friend void protobuf_ShutdownFile_my_5fcommon_5fproto_5fcomm_5flite_2eproto();

  void InitAsDefaultInstance();
  static PRuleSelectionHistoryRowList* default_instance_;
};
// -------------------------------------------------------------------

class PInspectionItem : public ::google::protobuf::MessageLite {
 public:
  PInspectionItem();
  virtual ~PInspectionItem();

  PInspectionItem(const PInspectionItem& from);

  inline PInspectionItem& operator=(const PInspectionItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const PInspectionItem& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PInspectionItem* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PInspectionItem* other);

  // implements Message ----------------------------------------------

  inline PInspectionItem* New() const { return New(NULL); }

  PInspectionItem* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PInspectionItem& from);
  void MergeFrom(const PInspectionItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PInspectionItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iID = 1;
  bool has_iid() const;
  void clear_iid();
  static const int kIIDFieldNumber = 1;
  ::google::protobuf::int32 iid() const;
  void set_iid(::google::protobuf::int32 value);

  // required int32 cID = 2;
  bool has_cid() const;
  void clear_cid();
  static const int kCIDFieldNumber = 2;
  ::google::protobuf::int32 cid() const;
  void set_cid(::google::protobuf::int32 value);

  // required string Defect = 3;
  bool has_defect() const;
  void clear_defect();
  static const int kDefectFieldNumber = 3;
  const ::std::string& defect() const;
  void set_defect(const ::std::string& value);
  void set_defect(const char* value);
  void set_defect(const char* value, size_t size);
  ::std::string* mutable_defect();
  ::std::string* release_defect();
  void set_allocated_defect(::std::string* defect);

  // optional string DefAbbr = 4;
  bool has_defabbr() const;
  void clear_defabbr();
  static const int kDefAbbrFieldNumber = 4;
  const ::std::string& defabbr() const;
  void set_defabbr(const ::std::string& value);
  void set_defabbr(const char* value);
  void set_defabbr(const char* value, size_t size);
  ::std::string* mutable_defabbr();
  ::std::string* release_defabbr();
  void set_allocated_defabbr(::std::string* defabbr);

  // optional int32 DefLevel = 5;
  bool has_deflevel() const;
  void clear_deflevel();
  static const int kDefLevelFieldNumber = 5;
  ::google::protobuf::int32 deflevel() const;
  void set_deflevel(::google::protobuf::int32 value);

  // optional string Comments = 6;
  bool has_comments() const;
  void clear_comments();
  static const int kCommentsFieldNumber = 6;
  const ::std::string& comments() const;
  void set_comments(const ::std::string& value);
  void set_comments(const char* value);
  void set_comments(const char* value, size_t size);
  ::std::string* mutable_comments();
  ::std::string* release_comments();
  void set_allocated_comments(::std::string* comments);

  // optional bool isDefect = 7;
  bool has_isdefect() const;
  void clear_isdefect();
  static const int kIsDefectFieldNumber = 7;
  bool isdefect() const;
  void set_isdefect(bool value);

  // repeated string media_files = 8;
  int media_files_size() const;
  void clear_media_files();
  static const int kMediaFilesFieldNumber = 8;
  const ::std::string& media_files(int index) const;
  ::std::string* mutable_media_files(int index);
  void set_media_files(int index, const ::std::string& value);
  void set_media_files(int index, const char* value);
  void set_media_files(int index, const char* value, size_t size);
  ::std::string* add_media_files();
  void add_media_files(const ::std::string& value);
  void add_media_files(const char* value);
  void add_media_files(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& media_files() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_media_files();

  // optional string attID = 9;
  bool has_attid() const;
  void clear_attid();
  static const int kAttIDFieldNumber = 9;
  const ::std::string& attid() const;
  void set_attid(const ::std::string& value);
  void set_attid(const char* value);
  void set_attid(const char* value, size_t size);
  ::std::string* mutable_attid();
  ::std::string* release_attid();
  void set_allocated_attid(::std::string* attid);

  // optional string Clrd = 10;
  bool has_clrd() const;
  void clear_clrd();
  static const int kClrdFieldNumber = 10;
  const ::std::string& clrd() const;
  void set_clrd(const ::std::string& value);
  void set_clrd(const char* value);
  void set_clrd(const char* value, size_t size);
  ::std::string* mutable_clrd();
  ::std::string* release_clrd();
  void set_allocated_clrd(::std::string* clrd);

  // optional string ClrdId = 11;
  bool has_clrdid() const;
  void clear_clrdid();
  static const int kClrdIdFieldNumber = 11;
  const ::std::string& clrdid() const;
  void set_clrdid(const ::std::string& value);
  void set_clrdid(const char* value);
  void set_clrdid(const char* value, size_t size);
  ::std::string* mutable_clrdid();
  ::std::string* release_clrdid();
  void set_allocated_clrdid(::std::string* clrdid);

  // optional string ClrdName = 12;
  bool has_clrdname() const;
  void clear_clrdname();
  static const int kClrdNameFieldNumber = 12;
  const ::std::string& clrdname() const;
  void set_clrdname(const ::std::string& value);
  void set_clrdname(const char* value);
  void set_clrdname(const char* value, size_t size);
  ::std::string* mutable_clrdname();
  ::std::string* release_clrdname();
  void set_allocated_clrdname(::std::string* clrdname);

  // optional int32 hasChildren = 13;
  bool has_haschildren() const;
  void clear_haschildren();
  static const int kHasChildrenFieldNumber = 13;
  ::google::protobuf::int32 haschildren() const;
  void set_haschildren(::google::protobuf::int32 value);

  // optional int32 parentId = 14;
  bool has_parentid() const;
  void clear_parentid();
  static const int kParentIdFieldNumber = 14;
  ::google::protobuf::int32 parentid() const;
  void set_parentid(::google::protobuf::int32 value);

  // repeated .my_comm_proto.PInspectionItem children = 15;
  int children_size() const;
  void clear_children();
  static const int kChildrenFieldNumber = 15;
  const ::my_comm_proto::PInspectionItem& children(int index) const;
  ::my_comm_proto::PInspectionItem* mutable_children(int index);
  ::my_comm_proto::PInspectionItem* add_children();
  ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PInspectionItem >*
      mutable_children();
  const ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PInspectionItem >&
      children() const;

  // @@protoc_insertion_point(class_scope:my_comm_proto.PInspectionItem)
 private:
  inline void set_has_iid();
  inline void clear_has_iid();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_defect();
  inline void clear_has_defect();
  inline void set_has_defabbr();
  inline void clear_has_defabbr();
  inline void set_has_deflevel();
  inline void clear_has_deflevel();
  inline void set_has_comments();
  inline void clear_has_comments();
  inline void set_has_isdefect();
  inline void clear_has_isdefect();
  inline void set_has_attid();
  inline void clear_has_attid();
  inline void set_has_clrd();
  inline void clear_has_clrd();
  inline void set_has_clrdid();
  inline void clear_has_clrdid();
  inline void set_has_clrdname();
  inline void clear_has_clrdname();
  inline void set_has_haschildren();
  inline void clear_has_haschildren();
  inline void set_has_parentid();
  inline void clear_has_parentid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 iid_;
  ::google::protobuf::int32 cid_;
  ::google::protobuf::internal::ArenaStringPtr defect_;
  ::google::protobuf::internal::ArenaStringPtr defabbr_;
  ::google::protobuf::internal::ArenaStringPtr comments_;
  ::google::protobuf::int32 deflevel_;
  bool isdefect_;
  ::google::protobuf::RepeatedPtrField< ::std::string> media_files_;
  ::google::protobuf::internal::ArenaStringPtr attid_;
  ::google::protobuf::internal::ArenaStringPtr clrd_;
  ::google::protobuf::internal::ArenaStringPtr clrdid_;
  ::google::protobuf::internal::ArenaStringPtr clrdname_;
  ::google::protobuf::int32 haschildren_;
  ::google::protobuf::int32 parentid_;
  ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PInspectionItem > children_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  #endif
  friend void protobuf_AssignDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  friend void protobuf_ShutdownFile_my_5fcommon_5fproto_5fcomm_5flite_2eproto();

  void InitAsDefaultInstance();
  static PInspectionItem* default_instance_;
};
// -------------------------------------------------------------------

class PInspectionItemList : public ::google::protobuf::MessageLite {
 public:
  PInspectionItemList();
  virtual ~PInspectionItemList();

  PInspectionItemList(const PInspectionItemList& from);

  inline PInspectionItemList& operator=(const PInspectionItemList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const PInspectionItemList& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PInspectionItemList* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PInspectionItemList* other);

  // implements Message ----------------------------------------------

  inline PInspectionItemList* New() const { return New(NULL); }

  PInspectionItemList* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PInspectionItemList& from);
  void MergeFrom(const PInspectionItemList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PInspectionItemList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .my_comm_proto.PInspectionItem list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  const ::my_comm_proto::PInspectionItem& list(int index) const;
  ::my_comm_proto::PInspectionItem* mutable_list(int index);
  ::my_comm_proto::PInspectionItem* add_list();
  ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PInspectionItem >*
      mutable_list();
  const ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PInspectionItem >&
      list() const;

  // @@protoc_insertion_point(class_scope:my_comm_proto.PInspectionItemList)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PInspectionItem > list_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  #endif
  friend void protobuf_AssignDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  friend void protobuf_ShutdownFile_my_5fcommon_5fproto_5fcomm_5flite_2eproto();

  void InitAsDefaultInstance();
  static PInspectionItemList* default_instance_;
};
// -------------------------------------------------------------------

class PInspectionCategoryRow : public ::google::protobuf::MessageLite {
 public:
  PInspectionCategoryRow();
  virtual ~PInspectionCategoryRow();

  PInspectionCategoryRow(const PInspectionCategoryRow& from);

  inline PInspectionCategoryRow& operator=(const PInspectionCategoryRow& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const PInspectionCategoryRow& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PInspectionCategoryRow* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PInspectionCategoryRow* other);

  // implements Message ----------------------------------------------

  inline PInspectionCategoryRow* New() const { return New(NULL); }

  PInspectionCategoryRow* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PInspectionCategoryRow& from);
  void MergeFrom(const PInspectionCategoryRow& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PInspectionCategoryRow* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 cID = 1;
  bool has_cid() const;
  void clear_cid();
  static const int kCIDFieldNumber = 1;
  ::google::protobuf::int32 cid() const;
  void set_cid(::google::protobuf::int32 value);

  // required string desc = 2;
  bool has_desc() const;
  void clear_desc();
  static const int kDescFieldNumber = 2;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // required int32 groupID = 3;
  bool has_groupid() const;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 3;
  ::google::protobuf::int32 groupid() const;
  void set_groupid(::google::protobuf::int32 value);

  // required int32 color = 4;
  bool has_color() const;
  void clear_color();
  static const int kColorFieldNumber = 4;
  ::google::protobuf::int32 color() const;
  void set_color(::google::protobuf::int32 value);

  // optional int32 BarCodeID = 5;
  bool has_barcodeid() const;
  void clear_barcodeid();
  static const int kBarCodeIDFieldNumber = 5;
  ::google::protobuf::int32 barcodeid() const;
  void set_barcodeid(::google::protobuf::int32 value);

  // optional string BCLoc = 6;
  bool has_bcloc() const;
  void clear_bcloc();
  static const int kBCLocFieldNumber = 6;
  const ::std::string& bcloc() const;
  void set_bcloc(const ::std::string& value);
  void set_bcloc(const char* value);
  void set_bcloc(const char* value, size_t size);
  ::std::string* mutable_bcloc();
  ::std::string* release_bcloc();
  void set_allocated_bcloc(::std::string* bcloc);

  // optional .my_comm_proto.PInspectionItemList items = 7;
  bool has_items() const;
  void clear_items();
  static const int kItemsFieldNumber = 7;
  const ::my_comm_proto::PInspectionItemList& items() const;
  ::my_comm_proto::PInspectionItemList* mutable_items();
  ::my_comm_proto::PInspectionItemList* release_items();
  void set_allocated_items(::my_comm_proto::PInspectionItemList* items);

  // optional int32 isChecked = 8;
  bool has_ischecked() const;
  void clear_ischecked();
  static const int kIsCheckedFieldNumber = 8;
  ::google::protobuf::int32 ischecked() const;
  void set_ischecked(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:my_comm_proto.PInspectionCategoryRow)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_desc();
  inline void clear_has_desc();
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_barcodeid();
  inline void clear_has_barcodeid();
  inline void set_has_bcloc();
  inline void clear_has_bcloc();
  inline void set_has_items();
  inline void clear_has_items();
  inline void set_has_ischecked();
  inline void clear_has_ischecked();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::int32 cid_;
  ::google::protobuf::int32 groupid_;
  ::google::protobuf::int32 color_;
  ::google::protobuf::int32 barcodeid_;
  ::google::protobuf::internal::ArenaStringPtr bcloc_;
  ::my_comm_proto::PInspectionItemList* items_;
  ::google::protobuf::int32 ischecked_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  #endif
  friend void protobuf_AssignDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  friend void protobuf_ShutdownFile_my_5fcommon_5fproto_5fcomm_5flite_2eproto();

  void InitAsDefaultInstance();
  static PInspectionCategoryRow* default_instance_;
};
// -------------------------------------------------------------------

class PInspectionRow : public ::google::protobuf::MessageLite {
 public:
  PInspectionRow();
  virtual ~PInspectionRow();

  PInspectionRow(const PInspectionRow& from);

  inline PInspectionRow& operator=(const PInspectionRow& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const PInspectionRow& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PInspectionRow* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PInspectionRow* other);

  // implements Message ----------------------------------------------

  inline PInspectionRow* New() const { return New(NULL); }

  PInspectionRow* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PInspectionRow& from);
  void MergeFrom(const PInspectionRow& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PInspectionRow* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 InsRID = 1;
  bool has_insrid() const;
  void clear_insrid();
  static const int kInsRIDFieldNumber = 1;
  ::google::protobuf::int32 insrid() const;
  void set_insrid(::google::protobuf::int32 value);

  // required int64 InsTime = 2;
  bool has_instime() const;
  void clear_instime();
  static const int kInsTimeFieldNumber = 2;
  ::google::protobuf::int64 instime() const;
  void set_instime(::google::protobuf::int64 value);

  // optional string EqID = 3;
  bool has_eqid() const;
  void clear_eqid();
  static const int kEqIDFieldNumber = 3;
  const ::std::string& eqid() const;
  void set_eqid(const ::std::string& value);
  void set_eqid(const char* value);
  void set_eqid(const char* value, size_t size);
  ::std::string* mutable_eqid();
  ::std::string* release_eqid();
  void set_allocated_eqid(::std::string* eqid);

  // optional int32 odo = 4;
  bool has_odo() const;
  void clear_odo();
  static const int kOdoFieldNumber = 4;
  ::google::protobuf::int32 odo() const;
  void set_odo(::google::protobuf::int32 value);

  // required bool Signed = 5;
  bool has_signed_() const;
  void clear_signed_();
  static const int kSignedFieldNumber = 5;
  bool signed_() const;
  void set_signed_(bool value);

  // repeated .my_comm_proto.PInspectionItem Defects = 6;
  int defects_size() const;
  void clear_defects();
  static const int kDefectsFieldNumber = 6;
  const ::my_comm_proto::PInspectionItem& defects(int index) const;
  ::my_comm_proto::PInspectionItem* mutable_defects(int index);
  ::my_comm_proto::PInspectionItem* add_defects();
  ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PInspectionItem >*
      mutable_defects();
  const ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PInspectionItem >&
      defects() const;

  // required string drId = 7;
  bool has_drid() const;
  void clear_drid();
  static const int kDrIdFieldNumber = 7;
  const ::std::string& drid() const;
  void set_drid(const ::std::string& value);
  void set_drid(const char* value);
  void set_drid(const char* value, size_t size);
  ::std::string* mutable_drid();
  ::std::string* release_drid();
  void set_allocated_drid(::std::string* drid);

  // optional string drName = 8;
  bool has_drname() const;
  void clear_drname();
  static const int kDrNameFieldNumber = 8;
  const ::std::string& drname() const;
  void set_drname(const ::std::string& value);
  void set_drname(const char* value);
  void set_drname(const char* value, size_t size);
  ::std::string* mutable_drname();
  ::std::string* release_drname();
  void set_allocated_drname(::std::string* drname);

  // required int32 InsType = 9;
  bool has_instype() const;
  void clear_instype();
  static const int kInsTypeFieldNumber = 9;
  ::google::protobuf::int32 instype() const;
  void set_instype(::google::protobuf::int32 value);

  // required string cb_cats = 10;
  bool has_cb_cats() const;
  void clear_cb_cats();
  static const int kCbCatsFieldNumber = 10;
  const ::std::string& cb_cats() const;
  void set_cb_cats(const ::std::string& value);
  void set_cb_cats(const char* value);
  void set_cb_cats(const char* value, size_t size);
  ::std::string* mutable_cb_cats();
  ::std::string* release_cb_cats();
  void set_allocated_cb_cats(::std::string* cb_cats);

  // optional string cb_a_cats = 11;
  bool has_cb_a_cats() const;
  void clear_cb_a_cats();
  static const int kCbACatsFieldNumber = 11;
  const ::std::string& cb_a_cats() const;
  void set_cb_a_cats(const ::std::string& value);
  void set_cb_a_cats(const char* value);
  void set_cb_a_cats(const char* value, size_t size);
  ::std::string* mutable_cb_a_cats();
  ::std::string* release_cb_a_cats();
  void set_allocated_cb_a_cats(::std::string* cb_a_cats);

  // required int32 BoxID = 12;
  bool has_boxid() const;
  void clear_boxid();
  static const int kBoxIDFieldNumber = 12;
  ::google::protobuf::int32 boxid() const;
  void set_boxid(::google::protobuf::int32 value);

  // optional int32 tzOf = 13;
  bool has_tzof() const;
  void clear_tzof();
  static const int kTzOfFieldNumber = 13;
  ::google::protobuf::int32 tzof() const;
  void set_tzof(::google::protobuf::int32 value);

  // optional float Lat = 14;
  bool has_lat() const;
  void clear_lat();
  static const int kLatFieldNumber = 14;
  float lat() const;
  void set_lat(float value);

  // optional float Lon = 15;
  bool has_lon() const;
  void clear_lon();
  static const int kLonFieldNumber = 15;
  float lon() const;
  void set_lon(float value);

  // optional string attID = 16;
  bool has_attid() const;
  void clear_attid();
  static const int kAttIDFieldNumber = 16;
  const ::std::string& attid() const;
  void set_attid(const ::std::string& value);
  void set_attid(const char* value);
  void set_attid(const char* value, size_t size);
  ::std::string* mutable_attid();
  ::std::string* release_attid();
  void set_allocated_attid(::std::string* attid);

  // @@protoc_insertion_point(class_scope:my_comm_proto.PInspectionRow)
 private:
  inline void set_has_insrid();
  inline void clear_has_insrid();
  inline void set_has_instime();
  inline void clear_has_instime();
  inline void set_has_eqid();
  inline void clear_has_eqid();
  inline void set_has_odo();
  inline void clear_has_odo();
  inline void set_has_signed_();
  inline void clear_has_signed_();
  inline void set_has_drid();
  inline void clear_has_drid();
  inline void set_has_drname();
  inline void clear_has_drname();
  inline void set_has_instype();
  inline void clear_has_instype();
  inline void set_has_cb_cats();
  inline void clear_has_cb_cats();
  inline void set_has_cb_a_cats();
  inline void clear_has_cb_a_cats();
  inline void set_has_boxid();
  inline void clear_has_boxid();
  inline void set_has_tzof();
  inline void clear_has_tzof();
  inline void set_has_lat();
  inline void clear_has_lat();
  inline void set_has_lon();
  inline void clear_has_lon();
  inline void set_has_attid();
  inline void clear_has_attid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 instime_;
  ::google::protobuf::int32 insrid_;
  ::google::protobuf::int32 odo_;
  ::google::protobuf::internal::ArenaStringPtr eqid_;
  ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PInspectionItem > defects_;
  ::google::protobuf::internal::ArenaStringPtr drid_;
  bool signed__;
  ::google::protobuf::int32 instype_;
  ::google::protobuf::internal::ArenaStringPtr drname_;
  ::google::protobuf::internal::ArenaStringPtr cb_cats_;
  ::google::protobuf::internal::ArenaStringPtr cb_a_cats_;
  ::google::protobuf::int32 boxid_;
  ::google::protobuf::int32 tzof_;
  float lat_;
  float lon_;
  ::google::protobuf::internal::ArenaStringPtr attid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  #endif
  friend void protobuf_AssignDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  friend void protobuf_ShutdownFile_my_5fcommon_5fproto_5fcomm_5flite_2eproto();

  void InitAsDefaultInstance();
  static PInspectionRow* default_instance_;
};
// -------------------------------------------------------------------

class PInspectionRowList : public ::google::protobuf::MessageLite {
 public:
  PInspectionRowList();
  virtual ~PInspectionRowList();

  PInspectionRowList(const PInspectionRowList& from);

  inline PInspectionRowList& operator=(const PInspectionRowList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const PInspectionRowList& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PInspectionRowList* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PInspectionRowList* other);

  // implements Message ----------------------------------------------

  inline PInspectionRowList* New() const { return New(NULL); }

  PInspectionRowList* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PInspectionRowList& from);
  void MergeFrom(const PInspectionRowList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PInspectionRowList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .my_comm_proto.PInspectionRow list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  const ::my_comm_proto::PInspectionRow& list(int index) const;
  ::my_comm_proto::PInspectionRow* mutable_list(int index);
  ::my_comm_proto::PInspectionRow* add_list();
  ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PInspectionRow >*
      mutable_list();
  const ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PInspectionRow >&
      list() const;

  // @@protoc_insertion_point(class_scope:my_comm_proto.PInspectionRowList)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PInspectionRow > list_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  #endif
  friend void protobuf_AssignDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  friend void protobuf_ShutdownFile_my_5fcommon_5fproto_5fcomm_5flite_2eproto();

  void InitAsDefaultInstance();
  static PInspectionRowList* default_instance_;
};
// -------------------------------------------------------------------

class PInspectionCategoryRowList : public ::google::protobuf::MessageLite {
 public:
  PInspectionCategoryRowList();
  virtual ~PInspectionCategoryRowList();

  PInspectionCategoryRowList(const PInspectionCategoryRowList& from);

  inline PInspectionCategoryRowList& operator=(const PInspectionCategoryRowList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const PInspectionCategoryRowList& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PInspectionCategoryRowList* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PInspectionCategoryRowList* other);

  // implements Message ----------------------------------------------

  inline PInspectionCategoryRowList* New() const { return New(NULL); }

  PInspectionCategoryRowList* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PInspectionCategoryRowList& from);
  void MergeFrom(const PInspectionCategoryRowList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PInspectionCategoryRowList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .my_comm_proto.PInspectionCategoryRow list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  const ::my_comm_proto::PInspectionCategoryRow& list(int index) const;
  ::my_comm_proto::PInspectionCategoryRow* mutable_list(int index);
  ::my_comm_proto::PInspectionCategoryRow* add_list();
  ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PInspectionCategoryRow >*
      mutable_list();
  const ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PInspectionCategoryRow >&
      list() const;

  // @@protoc_insertion_point(class_scope:my_comm_proto.PInspectionCategoryRowList)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PInspectionCategoryRow > list_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  #endif
  friend void protobuf_AssignDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  friend void protobuf_ShutdownFile_my_5fcommon_5fproto_5fcomm_5flite_2eproto();

  void InitAsDefaultInstance();
  static PInspectionCategoryRowList* default_instance_;
};
// -------------------------------------------------------------------

class PRegister : public ::google::protobuf::MessageLite {
 public:
  PRegister();
  virtual ~PRegister();

  PRegister(const PRegister& from);

  inline PRegister& operator=(const PRegister& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const PRegister& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PRegister* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PRegister* other);

  // implements Message ----------------------------------------------

  inline PRegister* New() const { return New(NULL); }

  PRegister* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PRegister& from);
  void MergeFrom(const PRegister& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PRegister* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string user = 1;
  bool has_user() const;
  void clear_user();
  static const int kUserFieldNumber = 1;
  const ::std::string& user() const;
  void set_user(const ::std::string& value);
  void set_user(const char* value);
  void set_user(const char* value, size_t size);
  ::std::string* mutable_user();
  ::std::string* release_user();
  void set_allocated_user(::std::string* user);

  // required string pass = 2;
  bool has_pass() const;
  void clear_pass();
  static const int kPassFieldNumber = 2;
  const ::std::string& pass() const;
  void set_pass(const ::std::string& value);
  void set_pass(const char* value);
  void set_pass(const char* value, size_t size);
  ::std::string* mutable_pass();
  ::std::string* release_pass();
  void set_allocated_pass(::std::string* pass);

  // required string fname = 3;
  bool has_fname() const;
  void clear_fname();
  static const int kFnameFieldNumber = 3;
  const ::std::string& fname() const;
  void set_fname(const ::std::string& value);
  void set_fname(const char* value);
  void set_fname(const char* value, size_t size);
  ::std::string* mutable_fname();
  ::std::string* release_fname();
  void set_allocated_fname(::std::string* fname);

  // required string email = 4;
  bool has_email() const;
  void clear_email();
  static const int kEmailFieldNumber = 4;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // @@protoc_insertion_point(class_scope:my_comm_proto.PRegister)
 private:
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_pass();
  inline void clear_has_pass();
  inline void set_has_fname();
  inline void clear_has_fname();
  inline void set_has_email();
  inline void clear_has_email();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_;
  ::google::protobuf::internal::ArenaStringPtr pass_;
  ::google::protobuf::internal::ArenaStringPtr fname_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  #endif
  friend void protobuf_AssignDesc_my_5fcommon_5fproto_5fcomm_5flite_2eproto();
  friend void protobuf_ShutdownFile_my_5fcommon_5fproto_5fcomm_5flite_2eproto();

  void InitAsDefaultInstance();
  static PRegister* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PAMessage

// required int32 aID = 1;
inline bool PAMessage::has_aid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PAMessage::set_has_aid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PAMessage::clear_has_aid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PAMessage::clear_aid() {
  aid_ = 0;
  clear_has_aid();
}
inline ::google::protobuf::int32 PAMessage::aid() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PAMessage.aID)
  return aid_;
}
inline void PAMessage::set_aid(::google::protobuf::int32 value) {
  set_has_aid();
  aid_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PAMessage.aID)
}

// required int32 rID = 2;
inline bool PAMessage::has_rid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PAMessage::set_has_rid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PAMessage::clear_has_rid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PAMessage::clear_rid() {
  rid_ = 0;
  clear_has_rid();
}
inline ::google::protobuf::int32 PAMessage::rid() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PAMessage.rID)
  return rid_;
}
inline void PAMessage::set_rid(::google::protobuf::int32 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PAMessage.rID)
}

// required string msg = 3;
inline bool PAMessage::has_msg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PAMessage::set_has_msg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PAMessage::clear_has_msg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PAMessage::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& PAMessage::msg() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PAMessage.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PAMessage::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PAMessage.msg)
}
inline void PAMessage::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PAMessage.msg)
}
inline void PAMessage::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PAMessage.msg)
}
inline ::std::string* PAMessage::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PAMessage.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PAMessage::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PAMessage::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PAMessage.msg)
}

// required int64 ts = 4;
inline bool PAMessage::has_ts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PAMessage::set_has_ts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PAMessage::clear_has_ts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PAMessage::clear_ts() {
  ts_ = GOOGLE_LONGLONG(0);
  clear_has_ts();
}
inline ::google::protobuf::int64 PAMessage::ts() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PAMessage.ts)
  return ts_;
}
inline void PAMessage::set_ts(::google::protobuf::int64 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PAMessage.ts)
}

// required int32 type = 5;
inline bool PAMessage::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PAMessage::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PAMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PAMessage::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 PAMessage::type() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PAMessage.type)
  return type_;
}
inline void PAMessage::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PAMessage.type)
}

// -------------------------------------------------------------------

// PWOIStatus

// required int64 ID = 1;
inline bool PWOIStatus::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PWOIStatus::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PWOIStatus::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PWOIStatus::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 PWOIStatus::id() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PWOIStatus.ID)
  return id_;
}
inline void PWOIStatus::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PWOIStatus.ID)
}

// required int32 status = 2;
inline bool PWOIStatus::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PWOIStatus::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PWOIStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PWOIStatus::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 PWOIStatus::status() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PWOIStatus.status)
  return status_;
}
inline void PWOIStatus::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PWOIStatus.status)
}

// -------------------------------------------------------------------

// PWorkOrderItem

// required int64 ID = 1;
inline bool PWorkOrderItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PWorkOrderItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PWorkOrderItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PWorkOrderItem::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 PWorkOrderItem::id() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PWorkOrderItem.ID)
  return id_;
}
inline void PWorkOrderItem::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PWorkOrderItem.ID)
}

// required string Name = 2;
inline bool PWorkOrderItem::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PWorkOrderItem::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PWorkOrderItem::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PWorkOrderItem::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& PWorkOrderItem::name() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PWorkOrderItem.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PWorkOrderItem::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PWorkOrderItem.Name)
}
inline void PWorkOrderItem::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PWorkOrderItem.Name)
}
inline void PWorkOrderItem::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PWorkOrderItem.Name)
}
inline ::std::string* PWorkOrderItem::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PWorkOrderItem.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PWorkOrderItem::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PWorkOrderItem::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PWorkOrderItem.Name)
}

// required string Caller = 3;
inline bool PWorkOrderItem::has_caller() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PWorkOrderItem::set_has_caller() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PWorkOrderItem::clear_has_caller() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PWorkOrderItem::clear_caller() {
  caller_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_caller();
}
inline const ::std::string& PWorkOrderItem::caller() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PWorkOrderItem.Caller)
  return caller_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PWorkOrderItem::set_caller(const ::std::string& value) {
  set_has_caller();
  caller_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PWorkOrderItem.Caller)
}
inline void PWorkOrderItem::set_caller(const char* value) {
  set_has_caller();
  caller_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PWorkOrderItem.Caller)
}
inline void PWorkOrderItem::set_caller(const char* value, size_t size) {
  set_has_caller();
  caller_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PWorkOrderItem.Caller)
}
inline ::std::string* PWorkOrderItem::mutable_caller() {
  set_has_caller();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PWorkOrderItem.Caller)
  return caller_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PWorkOrderItem::release_caller() {
  clear_has_caller();
  return caller_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PWorkOrderItem::set_allocated_caller(::std::string* caller) {
  if (caller != NULL) {
    set_has_caller();
  } else {
    clear_has_caller();
  }
  caller_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), caller);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PWorkOrderItem.Caller)
}

// optional string Phone = 4;
inline bool PWorkOrderItem::has_phone() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PWorkOrderItem::set_has_phone() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PWorkOrderItem::clear_has_phone() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PWorkOrderItem::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone();
}
inline const ::std::string& PWorkOrderItem::phone() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PWorkOrderItem.Phone)
  return phone_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PWorkOrderItem::set_phone(const ::std::string& value) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PWorkOrderItem.Phone)
}
inline void PWorkOrderItem::set_phone(const char* value) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PWorkOrderItem.Phone)
}
inline void PWorkOrderItem::set_phone(const char* value, size_t size) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PWorkOrderItem.Phone)
}
inline ::std::string* PWorkOrderItem::mutable_phone() {
  set_has_phone();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PWorkOrderItem.Phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PWorkOrderItem::release_phone() {
  clear_has_phone();
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PWorkOrderItem::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    set_has_phone();
  } else {
    clear_has_phone();
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PWorkOrderItem.Phone)
}

// required string Reference = 5;
inline bool PWorkOrderItem::has_reference() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PWorkOrderItem::set_has_reference() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PWorkOrderItem::clear_has_reference() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PWorkOrderItem::clear_reference() {
  reference_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reference();
}
inline const ::std::string& PWorkOrderItem::reference() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PWorkOrderItem.Reference)
  return reference_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PWorkOrderItem::set_reference(const ::std::string& value) {
  set_has_reference();
  reference_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PWorkOrderItem.Reference)
}
inline void PWorkOrderItem::set_reference(const char* value) {
  set_has_reference();
  reference_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PWorkOrderItem.Reference)
}
inline void PWorkOrderItem::set_reference(const char* value, size_t size) {
  set_has_reference();
  reference_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PWorkOrderItem.Reference)
}
inline ::std::string* PWorkOrderItem::mutable_reference() {
  set_has_reference();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PWorkOrderItem.Reference)
  return reference_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PWorkOrderItem::release_reference() {
  clear_has_reference();
  return reference_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PWorkOrderItem::set_allocated_reference(::std::string* reference) {
  if (reference != NULL) {
    set_has_reference();
  } else {
    clear_has_reference();
  }
  reference_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reference);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PWorkOrderItem.Reference)
}

// required string LocationName = 6;
inline bool PWorkOrderItem::has_locationname() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PWorkOrderItem::set_has_locationname() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PWorkOrderItem::clear_has_locationname() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PWorkOrderItem::clear_locationname() {
  locationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_locationname();
}
inline const ::std::string& PWorkOrderItem::locationname() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PWorkOrderItem.LocationName)
  return locationname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PWorkOrderItem::set_locationname(const ::std::string& value) {
  set_has_locationname();
  locationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PWorkOrderItem.LocationName)
}
inline void PWorkOrderItem::set_locationname(const char* value) {
  set_has_locationname();
  locationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PWorkOrderItem.LocationName)
}
inline void PWorkOrderItem::set_locationname(const char* value, size_t size) {
  set_has_locationname();
  locationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PWorkOrderItem.LocationName)
}
inline ::std::string* PWorkOrderItem::mutable_locationname() {
  set_has_locationname();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PWorkOrderItem.LocationName)
  return locationname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PWorkOrderItem::release_locationname() {
  clear_has_locationname();
  return locationname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PWorkOrderItem::set_allocated_locationname(::std::string* locationname) {
  if (locationname != NULL) {
    set_has_locationname();
  } else {
    clear_has_locationname();
  }
  locationname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), locationname);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PWorkOrderItem.LocationName)
}

// optional string Street = 7;
inline bool PWorkOrderItem::has_street() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PWorkOrderItem::set_has_street() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PWorkOrderItem::clear_has_street() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PWorkOrderItem::clear_street() {
  street_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_street();
}
inline const ::std::string& PWorkOrderItem::street() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PWorkOrderItem.Street)
  return street_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PWorkOrderItem::set_street(const ::std::string& value) {
  set_has_street();
  street_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PWorkOrderItem.Street)
}
inline void PWorkOrderItem::set_street(const char* value) {
  set_has_street();
  street_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PWorkOrderItem.Street)
}
inline void PWorkOrderItem::set_street(const char* value, size_t size) {
  set_has_street();
  street_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PWorkOrderItem.Street)
}
inline ::std::string* PWorkOrderItem::mutable_street() {
  set_has_street();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PWorkOrderItem.Street)
  return street_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PWorkOrderItem::release_street() {
  clear_has_street();
  return street_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PWorkOrderItem::set_allocated_street(::std::string* street) {
  if (street != NULL) {
    set_has_street();
  } else {
    clear_has_street();
  }
  street_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), street);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PWorkOrderItem.Street)
}

// optional string City = 9;
inline bool PWorkOrderItem::has_city() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PWorkOrderItem::set_has_city() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PWorkOrderItem::clear_has_city() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PWorkOrderItem::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_city();
}
inline const ::std::string& PWorkOrderItem::city() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PWorkOrderItem.City)
  return city_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PWorkOrderItem::set_city(const ::std::string& value) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PWorkOrderItem.City)
}
inline void PWorkOrderItem::set_city(const char* value) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PWorkOrderItem.City)
}
inline void PWorkOrderItem::set_city(const char* value, size_t size) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PWorkOrderItem.City)
}
inline ::std::string* PWorkOrderItem::mutable_city() {
  set_has_city();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PWorkOrderItem.City)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PWorkOrderItem::release_city() {
  clear_has_city();
  return city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PWorkOrderItem::set_allocated_city(::std::string* city) {
  if (city != NULL) {
    set_has_city();
  } else {
    clear_has_city();
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PWorkOrderItem.City)
}

// optional string Country = 10;
inline bool PWorkOrderItem::has_country() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PWorkOrderItem::set_has_country() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PWorkOrderItem::clear_has_country() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PWorkOrderItem::clear_country() {
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country();
}
inline const ::std::string& PWorkOrderItem::country() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PWorkOrderItem.Country)
  return country_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PWorkOrderItem::set_country(const ::std::string& value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PWorkOrderItem.Country)
}
inline void PWorkOrderItem::set_country(const char* value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PWorkOrderItem.Country)
}
inline void PWorkOrderItem::set_country(const char* value, size_t size) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PWorkOrderItem.Country)
}
inline ::std::string* PWorkOrderItem::mutable_country() {
  set_has_country();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PWorkOrderItem.Country)
  return country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PWorkOrderItem::release_country() {
  clear_has_country();
  return country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PWorkOrderItem::set_allocated_country(::std::string* country) {
  if (country != NULL) {
    set_has_country();
  } else {
    clear_has_country();
  }
  country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PWorkOrderItem.Country)
}

// optional string PostalCode = 11;
inline bool PWorkOrderItem::has_postalcode() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PWorkOrderItem::set_has_postalcode() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PWorkOrderItem::clear_has_postalcode() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PWorkOrderItem::clear_postalcode() {
  postalcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_postalcode();
}
inline const ::std::string& PWorkOrderItem::postalcode() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PWorkOrderItem.PostalCode)
  return postalcode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PWorkOrderItem::set_postalcode(const ::std::string& value) {
  set_has_postalcode();
  postalcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PWorkOrderItem.PostalCode)
}
inline void PWorkOrderItem::set_postalcode(const char* value) {
  set_has_postalcode();
  postalcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PWorkOrderItem.PostalCode)
}
inline void PWorkOrderItem::set_postalcode(const char* value, size_t size) {
  set_has_postalcode();
  postalcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PWorkOrderItem.PostalCode)
}
inline ::std::string* PWorkOrderItem::mutable_postalcode() {
  set_has_postalcode();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PWorkOrderItem.PostalCode)
  return postalcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PWorkOrderItem::release_postalcode() {
  clear_has_postalcode();
  return postalcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PWorkOrderItem::set_allocated_postalcode(::std::string* postalcode) {
  if (postalcode != NULL) {
    set_has_postalcode();
  } else {
    clear_has_postalcode();
  }
  postalcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), postalcode);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PWorkOrderItem.PostalCode)
}

// optional string Province = 13;
inline bool PWorkOrderItem::has_province() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PWorkOrderItem::set_has_province() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PWorkOrderItem::clear_has_province() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PWorkOrderItem::clear_province() {
  province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_province();
}
inline const ::std::string& PWorkOrderItem::province() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PWorkOrderItem.Province)
  return province_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PWorkOrderItem::set_province(const ::std::string& value) {
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PWorkOrderItem.Province)
}
inline void PWorkOrderItem::set_province(const char* value) {
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PWorkOrderItem.Province)
}
inline void PWorkOrderItem::set_province(const char* value, size_t size) {
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PWorkOrderItem.Province)
}
inline ::std::string* PWorkOrderItem::mutable_province() {
  set_has_province();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PWorkOrderItem.Province)
  return province_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PWorkOrderItem::release_province() {
  clear_has_province();
  return province_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PWorkOrderItem::set_allocated_province(::std::string* province) {
  if (province != NULL) {
    set_has_province();
  } else {
    clear_has_province();
  }
  province_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PWorkOrderItem.Province)
}

// required string Instructions = 14;
inline bool PWorkOrderItem::has_instructions() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PWorkOrderItem::set_has_instructions() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PWorkOrderItem::clear_has_instructions() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PWorkOrderItem::clear_instructions() {
  instructions_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instructions();
}
inline const ::std::string& PWorkOrderItem::instructions() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PWorkOrderItem.Instructions)
  return instructions_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PWorkOrderItem::set_instructions(const ::std::string& value) {
  set_has_instructions();
  instructions_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PWorkOrderItem.Instructions)
}
inline void PWorkOrderItem::set_instructions(const char* value) {
  set_has_instructions();
  instructions_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PWorkOrderItem.Instructions)
}
inline void PWorkOrderItem::set_instructions(const char* value, size_t size) {
  set_has_instructions();
  instructions_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PWorkOrderItem.Instructions)
}
inline ::std::string* PWorkOrderItem::mutable_instructions() {
  set_has_instructions();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PWorkOrderItem.Instructions)
  return instructions_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PWorkOrderItem::release_instructions() {
  clear_has_instructions();
  return instructions_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PWorkOrderItem::set_allocated_instructions(::std::string* instructions) {
  if (instructions != NULL) {
    set_has_instructions();
  } else {
    clear_has_instructions();
  }
  instructions_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instructions);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PWorkOrderItem.Instructions)
}

// required int64 StartTime = 15;
inline bool PWorkOrderItem::has_starttime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PWorkOrderItem::set_has_starttime() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PWorkOrderItem::clear_has_starttime() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PWorkOrderItem::clear_starttime() {
  starttime_ = GOOGLE_LONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::int64 PWorkOrderItem::starttime() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PWorkOrderItem.StartTime)
  return starttime_;
}
inline void PWorkOrderItem::set_starttime(::google::protobuf::int64 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PWorkOrderItem.StartTime)
}

// required int64 EndTime = 16;
inline bool PWorkOrderItem::has_endtime() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PWorkOrderItem::set_has_endtime() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PWorkOrderItem::clear_has_endtime() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PWorkOrderItem::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 PWorkOrderItem::endtime() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PWorkOrderItem.EndTime)
  return endtime_;
}
inline void PWorkOrderItem::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PWorkOrderItem.EndTime)
}

// required string ActInstrs = 17;
inline bool PWorkOrderItem::has_actinstrs() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PWorkOrderItem::set_has_actinstrs() {
  _has_bits_[0] |= 0x00004000u;
}
inline void PWorkOrderItem::clear_has_actinstrs() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void PWorkOrderItem::clear_actinstrs() {
  actinstrs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_actinstrs();
}
inline const ::std::string& PWorkOrderItem::actinstrs() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PWorkOrderItem.ActInstrs)
  return actinstrs_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PWorkOrderItem::set_actinstrs(const ::std::string& value) {
  set_has_actinstrs();
  actinstrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PWorkOrderItem.ActInstrs)
}
inline void PWorkOrderItem::set_actinstrs(const char* value) {
  set_has_actinstrs();
  actinstrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PWorkOrderItem.ActInstrs)
}
inline void PWorkOrderItem::set_actinstrs(const char* value, size_t size) {
  set_has_actinstrs();
  actinstrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PWorkOrderItem.ActInstrs)
}
inline ::std::string* PWorkOrderItem::mutable_actinstrs() {
  set_has_actinstrs();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PWorkOrderItem.ActInstrs)
  return actinstrs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PWorkOrderItem::release_actinstrs() {
  clear_has_actinstrs();
  return actinstrs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PWorkOrderItem::set_allocated_actinstrs(::std::string* actinstrs) {
  if (actinstrs != NULL) {
    set_has_actinstrs();
  } else {
    clear_has_actinstrs();
  }
  actinstrs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actinstrs);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PWorkOrderItem.ActInstrs)
}

// optional int64 CreatedTS = 18;
inline bool PWorkOrderItem::has_createdts() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PWorkOrderItem::set_has_createdts() {
  _has_bits_[0] |= 0x00008000u;
}
inline void PWorkOrderItem::clear_has_createdts() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void PWorkOrderItem::clear_createdts() {
  createdts_ = GOOGLE_LONGLONG(0);
  clear_has_createdts();
}
inline ::google::protobuf::int64 PWorkOrderItem::createdts() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PWorkOrderItem.CreatedTS)
  return createdts_;
}
inline void PWorkOrderItem::set_createdts(::google::protobuf::int64 value) {
  set_has_createdts();
  createdts_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PWorkOrderItem.CreatedTS)
}

// optional int64 LastUpdtdTS = 19;
inline bool PWorkOrderItem::has_lastupdtdts() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void PWorkOrderItem::set_has_lastupdtdts() {
  _has_bits_[0] |= 0x00010000u;
}
inline void PWorkOrderItem::clear_has_lastupdtdts() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void PWorkOrderItem::clear_lastupdtdts() {
  lastupdtdts_ = GOOGLE_LONGLONG(0);
  clear_has_lastupdtdts();
}
inline ::google::protobuf::int64 PWorkOrderItem::lastupdtdts() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PWorkOrderItem.LastUpdtdTS)
  return lastupdtdts_;
}
inline void PWorkOrderItem::set_lastupdtdts(::google::protobuf::int64 value) {
  set_has_lastupdtdts();
  lastupdtdts_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PWorkOrderItem.LastUpdtdTS)
}

// optional int64 AcceptedTS = 20;
inline bool PWorkOrderItem::has_acceptedts() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void PWorkOrderItem::set_has_acceptedts() {
  _has_bits_[0] |= 0x00020000u;
}
inline void PWorkOrderItem::clear_has_acceptedts() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void PWorkOrderItem::clear_acceptedts() {
  acceptedts_ = GOOGLE_LONGLONG(0);
  clear_has_acceptedts();
}
inline ::google::protobuf::int64 PWorkOrderItem::acceptedts() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PWorkOrderItem.AcceptedTS)
  return acceptedts_;
}
inline void PWorkOrderItem::set_acceptedts(::google::protobuf::int64 value) {
  set_has_acceptedts();
  acceptedts_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PWorkOrderItem.AcceptedTS)
}

// optional int64 CompletedTS = 21;
inline bool PWorkOrderItem::has_completedts() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void PWorkOrderItem::set_has_completedts() {
  _has_bits_[0] |= 0x00040000u;
}
inline void PWorkOrderItem::clear_has_completedts() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void PWorkOrderItem::clear_completedts() {
  completedts_ = GOOGLE_LONGLONG(0);
  clear_has_completedts();
}
inline ::google::protobuf::int64 PWorkOrderItem::completedts() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PWorkOrderItem.CompletedTS)
  return completedts_;
}
inline void PWorkOrderItem::set_completedts(::google::protobuf::int64 value) {
  set_has_completedts();
  completedts_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PWorkOrderItem.CompletedTS)
}

// required int32 status = 22;
inline bool PWorkOrderItem::has_status() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void PWorkOrderItem::set_has_status() {
  _has_bits_[0] |= 0x00080000u;
}
inline void PWorkOrderItem::clear_has_status() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void PWorkOrderItem::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 PWorkOrderItem::status() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PWorkOrderItem.status)
  return status_;
}
inline void PWorkOrderItem::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PWorkOrderItem.status)
}

// required int32 serviceGroup = 23;
inline bool PWorkOrderItem::has_servicegroup() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void PWorkOrderItem::set_has_servicegroup() {
  _has_bits_[0] |= 0x00100000u;
}
inline void PWorkOrderItem::clear_has_servicegroup() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void PWorkOrderItem::clear_servicegroup() {
  servicegroup_ = 0;
  clear_has_servicegroup();
}
inline ::google::protobuf::int32 PWorkOrderItem::servicegroup() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PWorkOrderItem.serviceGroup)
  return servicegroup_;
}
inline void PWorkOrderItem::set_servicegroup(::google::protobuf::int32 value) {
  set_has_servicegroup();
  servicegroup_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PWorkOrderItem.serviceGroup)
}

// required int64 resourceID = 24;
inline bool PWorkOrderItem::has_resourceid() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void PWorkOrderItem::set_has_resourceid() {
  _has_bits_[0] |= 0x00200000u;
}
inline void PWorkOrderItem::clear_has_resourceid() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void PWorkOrderItem::clear_resourceid() {
  resourceid_ = GOOGLE_LONGLONG(0);
  clear_has_resourceid();
}
inline ::google::protobuf::int64 PWorkOrderItem::resourceid() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PWorkOrderItem.resourceID)
  return resourceid_;
}
inline void PWorkOrderItem::set_resourceid(::google::protobuf::int64 value) {
  set_has_resourceid();
  resourceid_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PWorkOrderItem.resourceID)
}

// optional float Lat = 25;
inline bool PWorkOrderItem::has_lat() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void PWorkOrderItem::set_has_lat() {
  _has_bits_[0] |= 0x00400000u;
}
inline void PWorkOrderItem::clear_has_lat() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void PWorkOrderItem::clear_lat() {
  lat_ = 0;
  clear_has_lat();
}
inline float PWorkOrderItem::lat() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PWorkOrderItem.Lat)
  return lat_;
}
inline void PWorkOrderItem::set_lat(float value) {
  set_has_lat();
  lat_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PWorkOrderItem.Lat)
}

// optional float Lon = 26;
inline bool PWorkOrderItem::has_lon() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void PWorkOrderItem::set_has_lon() {
  _has_bits_[0] |= 0x00800000u;
}
inline void PWorkOrderItem::clear_has_lon() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void PWorkOrderItem::clear_lon() {
  lon_ = 0;
  clear_has_lon();
}
inline float PWorkOrderItem::lon() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PWorkOrderItem.Lon)
  return lon_;
}
inline void PWorkOrderItem::set_lon(float value) {
  set_has_lon();
  lon_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PWorkOrderItem.Lon)
}

// optional int32 editFlag = 27;
inline bool PWorkOrderItem::has_editflag() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void PWorkOrderItem::set_has_editflag() {
  _has_bits_[0] |= 0x01000000u;
}
inline void PWorkOrderItem::clear_has_editflag() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void PWorkOrderItem::clear_editflag() {
  editflag_ = 0;
  clear_has_editflag();
}
inline ::google::protobuf::int32 PWorkOrderItem::editflag() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PWorkOrderItem.editFlag)
  return editflag_;
}
inline void PWorkOrderItem::set_editflag(::google::protobuf::int32 value) {
  set_has_editflag();
  editflag_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PWorkOrderItem.editFlag)
}

// -------------------------------------------------------------------

// PWorkOrderList

// repeated .my_comm_proto.PWorkOrderItem wo_items = 1;
inline int PWorkOrderList::wo_items_size() const {
  return wo_items_.size();
}
inline void PWorkOrderList::clear_wo_items() {
  wo_items_.Clear();
}
inline const ::my_comm_proto::PWorkOrderItem& PWorkOrderList::wo_items(int index) const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PWorkOrderList.wo_items)
  return wo_items_.Get(index);
}
inline ::my_comm_proto::PWorkOrderItem* PWorkOrderList::mutable_wo_items(int index) {
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PWorkOrderList.wo_items)
  return wo_items_.Mutable(index);
}
inline ::my_comm_proto::PWorkOrderItem* PWorkOrderList::add_wo_items() {
  // @@protoc_insertion_point(field_add:my_comm_proto.PWorkOrderList.wo_items)
  return wo_items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PWorkOrderItem >*
PWorkOrderList::mutable_wo_items() {
  // @@protoc_insertion_point(field_mutable_list:my_comm_proto.PWorkOrderList.wo_items)
  return &wo_items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PWorkOrderItem >&
PWorkOrderList::wo_items() const {
  // @@protoc_insertion_point(field_list:my_comm_proto.PWorkOrderList.wo_items)
  return wo_items_;
}

// -------------------------------------------------------------------

// PWOIStatusList

// repeated .my_comm_proto.PWOIStatus wosts_items = 1;
inline int PWOIStatusList::wosts_items_size() const {
  return wosts_items_.size();
}
inline void PWOIStatusList::clear_wosts_items() {
  wosts_items_.Clear();
}
inline const ::my_comm_proto::PWOIStatus& PWOIStatusList::wosts_items(int index) const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PWOIStatusList.wosts_items)
  return wosts_items_.Get(index);
}
inline ::my_comm_proto::PWOIStatus* PWOIStatusList::mutable_wosts_items(int index) {
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PWOIStatusList.wosts_items)
  return wosts_items_.Mutable(index);
}
inline ::my_comm_proto::PWOIStatus* PWOIStatusList::add_wosts_items() {
  // @@protoc_insertion_point(field_add:my_comm_proto.PWOIStatusList.wosts_items)
  return wosts_items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PWOIStatus >*
PWOIStatusList::mutable_wosts_items() {
  // @@protoc_insertion_point(field_mutable_list:my_comm_proto.PWOIStatusList.wosts_items)
  return &wosts_items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PWOIStatus >&
PWOIStatusList::wosts_items() const {
  // @@protoc_insertion_point(field_list:my_comm_proto.PWOIStatusList.wosts_items)
  return wosts_items_;
}

// -------------------------------------------------------------------

// PBoxIdVehicleRow

// required int64 ID = 1;
inline bool PBoxIdVehicleRow::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBoxIdVehicleRow::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBoxIdVehicleRow::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBoxIdVehicleRow::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 PBoxIdVehicleRow::id() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PBoxIdVehicleRow.ID)
  return id_;
}
inline void PBoxIdVehicleRow::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PBoxIdVehicleRow.ID)
}

// required int64 mTS = 2;
inline bool PBoxIdVehicleRow::has_mts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBoxIdVehicleRow::set_has_mts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBoxIdVehicleRow::clear_has_mts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBoxIdVehicleRow::clear_mts() {
  mts_ = GOOGLE_LONGLONG(0);
  clear_has_mts();
}
inline ::google::protobuf::int64 PBoxIdVehicleRow::mts() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PBoxIdVehicleRow.mTS)
  return mts_;
}
inline void PBoxIdVehicleRow::set_mts(::google::protobuf::int64 value) {
  set_has_mts();
  mts_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PBoxIdVehicleRow.mTS)
}

// required string desc = 3;
inline bool PBoxIdVehicleRow::has_desc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBoxIdVehicleRow::set_has_desc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBoxIdVehicleRow::clear_has_desc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBoxIdVehicleRow::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_desc();
}
inline const ::std::string& PBoxIdVehicleRow::desc() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PBoxIdVehicleRow.desc)
  return desc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBoxIdVehicleRow::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PBoxIdVehicleRow.desc)
}
inline void PBoxIdVehicleRow::set_desc(const char* value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PBoxIdVehicleRow.desc)
}
inline void PBoxIdVehicleRow::set_desc(const char* value, size_t size) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PBoxIdVehicleRow.desc)
}
inline ::std::string* PBoxIdVehicleRow::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PBoxIdVehicleRow.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBoxIdVehicleRow::release_desc() {
  clear_has_desc();
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBoxIdVehicleRow::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PBoxIdVehicleRow.desc)
}

// required int32 weight = 4;
inline bool PBoxIdVehicleRow::has_weight() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBoxIdVehicleRow::set_has_weight() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBoxIdVehicleRow::clear_has_weight() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBoxIdVehicleRow::clear_weight() {
  weight_ = 0;
  clear_has_weight();
}
inline ::google::protobuf::int32 PBoxIdVehicleRow::weight() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PBoxIdVehicleRow.weight)
  return weight_;
}
inline void PBoxIdVehicleRow::set_weight(::google::protobuf::int32 value) {
  set_has_weight();
  weight_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PBoxIdVehicleRow.weight)
}

// required int32 flag = 5;
inline bool PBoxIdVehicleRow::has_flag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBoxIdVehicleRow::set_has_flag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBoxIdVehicleRow::clear_has_flag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBoxIdVehicleRow::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 PBoxIdVehicleRow::flag() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PBoxIdVehicleRow.flag)
  return flag_;
}
inline void PBoxIdVehicleRow::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PBoxIdVehicleRow.flag)
}

// required string VL = 6;
inline bool PBoxIdVehicleRow::has_vl() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBoxIdVehicleRow::set_has_vl() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBoxIdVehicleRow::clear_has_vl() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBoxIdVehicleRow::clear_vl() {
  vl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_vl();
}
inline const ::std::string& PBoxIdVehicleRow::vl() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PBoxIdVehicleRow.VL)
  return vl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBoxIdVehicleRow::set_vl(const ::std::string& value) {
  set_has_vl();
  vl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PBoxIdVehicleRow.VL)
}
inline void PBoxIdVehicleRow::set_vl(const char* value) {
  set_has_vl();
  vl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PBoxIdVehicleRow.VL)
}
inline void PBoxIdVehicleRow::set_vl(const char* value, size_t size) {
  set_has_vl();
  vl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PBoxIdVehicleRow.VL)
}
inline ::std::string* PBoxIdVehicleRow::mutable_vl() {
  set_has_vl();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PBoxIdVehicleRow.VL)
  return vl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBoxIdVehicleRow::release_vl() {
  clear_has_vl();
  return vl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBoxIdVehicleRow::set_allocated_vl(::std::string* vl) {
  if (vl != NULL) {
    set_has_vl();
  } else {
    clear_has_vl();
  }
  vl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vl);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PBoxIdVehicleRow.VL)
}

// required string VLP = 7;
inline bool PBoxIdVehicleRow::has_vlp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBoxIdVehicleRow::set_has_vlp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBoxIdVehicleRow::clear_has_vlp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBoxIdVehicleRow::clear_vlp() {
  vlp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_vlp();
}
inline const ::std::string& PBoxIdVehicleRow::vlp() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PBoxIdVehicleRow.VLP)
  return vlp_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBoxIdVehicleRow::set_vlp(const ::std::string& value) {
  set_has_vlp();
  vlp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PBoxIdVehicleRow.VLP)
}
inline void PBoxIdVehicleRow::set_vlp(const char* value) {
  set_has_vlp();
  vlp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PBoxIdVehicleRow.VLP)
}
inline void PBoxIdVehicleRow::set_vlp(const char* value, size_t size) {
  set_has_vlp();
  vlp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PBoxIdVehicleRow.VLP)
}
inline ::std::string* PBoxIdVehicleRow::mutable_vlp() {
  set_has_vlp();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PBoxIdVehicleRow.VLP)
  return vlp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBoxIdVehicleRow::release_vlp() {
  clear_has_vlp();
  return vlp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBoxIdVehicleRow::set_allocated_vlp(::std::string* vlp) {
  if (vlp != NULL) {
    set_has_vlp();
  } else {
    clear_has_vlp();
  }
  vlp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vlp);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PBoxIdVehicleRow.VLP)
}

// required int32 cid = 8;
inline bool PBoxIdVehicleRow::has_cid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBoxIdVehicleRow::set_has_cid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBoxIdVehicleRow::clear_has_cid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBoxIdVehicleRow::clear_cid() {
  cid_ = 0;
  clear_has_cid();
}
inline ::google::protobuf::int32 PBoxIdVehicleRow::cid() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PBoxIdVehicleRow.cid)
  return cid_;
}
inline void PBoxIdVehicleRow::set_cid(::google::protobuf::int32 value) {
  set_has_cid();
  cid_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PBoxIdVehicleRow.cid)
}

// required string Img = 9;
inline bool PBoxIdVehicleRow::has_img() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PBoxIdVehicleRow::set_has_img() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PBoxIdVehicleRow::clear_has_img() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PBoxIdVehicleRow::clear_img() {
  img_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_img();
}
inline const ::std::string& PBoxIdVehicleRow::img() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PBoxIdVehicleRow.Img)
  return img_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBoxIdVehicleRow::set_img(const ::std::string& value) {
  set_has_img();
  img_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PBoxIdVehicleRow.Img)
}
inline void PBoxIdVehicleRow::set_img(const char* value) {
  set_has_img();
  img_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PBoxIdVehicleRow.Img)
}
inline void PBoxIdVehicleRow::set_img(const char* value, size_t size) {
  set_has_img();
  img_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PBoxIdVehicleRow.Img)
}
inline ::std::string* PBoxIdVehicleRow::mutable_img() {
  set_has_img();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PBoxIdVehicleRow.Img)
  return img_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBoxIdVehicleRow::release_img() {
  clear_has_img();
  return img_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBoxIdVehicleRow::set_allocated_img(::std::string* img) {
  if (img != NULL) {
    set_has_img();
  } else {
    clear_has_img();
  }
  img_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), img);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PBoxIdVehicleRow.Img)
}

// optional string maker = 10;
inline bool PBoxIdVehicleRow::has_maker() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PBoxIdVehicleRow::set_has_maker() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PBoxIdVehicleRow::clear_has_maker() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PBoxIdVehicleRow::clear_maker() {
  maker_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_maker();
}
inline const ::std::string& PBoxIdVehicleRow::maker() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PBoxIdVehicleRow.maker)
  return maker_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBoxIdVehicleRow::set_maker(const ::std::string& value) {
  set_has_maker();
  maker_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PBoxIdVehicleRow.maker)
}
inline void PBoxIdVehicleRow::set_maker(const char* value) {
  set_has_maker();
  maker_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PBoxIdVehicleRow.maker)
}
inline void PBoxIdVehicleRow::set_maker(const char* value, size_t size) {
  set_has_maker();
  maker_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PBoxIdVehicleRow.maker)
}
inline ::std::string* PBoxIdVehicleRow::mutable_maker() {
  set_has_maker();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PBoxIdVehicleRow.maker)
  return maker_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBoxIdVehicleRow::release_maker() {
  clear_has_maker();
  return maker_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBoxIdVehicleRow::set_allocated_maker(::std::string* maker) {
  if (maker != NULL) {
    set_has_maker();
  } else {
    clear_has_maker();
  }
  maker_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), maker);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PBoxIdVehicleRow.maker)
}

// optional string model = 11;
inline bool PBoxIdVehicleRow::has_model() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PBoxIdVehicleRow::set_has_model() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PBoxIdVehicleRow::clear_has_model() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PBoxIdVehicleRow::clear_model() {
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_model();
}
inline const ::std::string& PBoxIdVehicleRow::model() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PBoxIdVehicleRow.model)
  return model_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBoxIdVehicleRow::set_model(const ::std::string& value) {
  set_has_model();
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PBoxIdVehicleRow.model)
}
inline void PBoxIdVehicleRow::set_model(const char* value) {
  set_has_model();
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PBoxIdVehicleRow.model)
}
inline void PBoxIdVehicleRow::set_model(const char* value, size_t size) {
  set_has_model();
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PBoxIdVehicleRow.model)
}
inline ::std::string* PBoxIdVehicleRow::mutable_model() {
  set_has_model();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PBoxIdVehicleRow.model)
  return model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBoxIdVehicleRow::release_model() {
  clear_has_model();
  return model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBoxIdVehicleRow::set_allocated_model(::std::string* model) {
  if (model != NULL) {
    set_has_model();
  } else {
    clear_has_model();
  }
  model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PBoxIdVehicleRow.model)
}

// optional string color = 12;
inline bool PBoxIdVehicleRow::has_color() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PBoxIdVehicleRow::set_has_color() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PBoxIdVehicleRow::clear_has_color() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PBoxIdVehicleRow::clear_color() {
  color_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_color();
}
inline const ::std::string& PBoxIdVehicleRow::color() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PBoxIdVehicleRow.color)
  return color_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBoxIdVehicleRow::set_color(const ::std::string& value) {
  set_has_color();
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PBoxIdVehicleRow.color)
}
inline void PBoxIdVehicleRow::set_color(const char* value) {
  set_has_color();
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PBoxIdVehicleRow.color)
}
inline void PBoxIdVehicleRow::set_color(const char* value, size_t size) {
  set_has_color();
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PBoxIdVehicleRow.color)
}
inline ::std::string* PBoxIdVehicleRow::mutable_color() {
  set_has_color();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PBoxIdVehicleRow.color)
  return color_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBoxIdVehicleRow::release_color() {
  clear_has_color();
  return color_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBoxIdVehicleRow::set_allocated_color(::std::string* color) {
  if (color != NULL) {
    set_has_color();
  } else {
    clear_has_color();
  }
  color_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), color);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PBoxIdVehicleRow.color)
}

// optional int32 year = 13;
inline bool PBoxIdVehicleRow::has_year() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PBoxIdVehicleRow::set_has_year() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PBoxIdVehicleRow::clear_has_year() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PBoxIdVehicleRow::clear_year() {
  year_ = 0;
  clear_has_year();
}
inline ::google::protobuf::int32 PBoxIdVehicleRow::year() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PBoxIdVehicleRow.year)
  return year_;
}
inline void PBoxIdVehicleRow::set_year(::google::protobuf::int32 value) {
  set_has_year();
  year_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PBoxIdVehicleRow.year)
}

// -------------------------------------------------------------------

// PBoxIdVehicleRowList

// repeated .my_comm_proto.PBoxIdVehicleRow vitem = 1;
inline int PBoxIdVehicleRowList::vitem_size() const {
  return vitem_.size();
}
inline void PBoxIdVehicleRowList::clear_vitem() {
  vitem_.Clear();
}
inline const ::my_comm_proto::PBoxIdVehicleRow& PBoxIdVehicleRowList::vitem(int index) const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PBoxIdVehicleRowList.vitem)
  return vitem_.Get(index);
}
inline ::my_comm_proto::PBoxIdVehicleRow* PBoxIdVehicleRowList::mutable_vitem(int index) {
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PBoxIdVehicleRowList.vitem)
  return vitem_.Mutable(index);
}
inline ::my_comm_proto::PBoxIdVehicleRow* PBoxIdVehicleRowList::add_vitem() {
  // @@protoc_insertion_point(field_add:my_comm_proto.PBoxIdVehicleRowList.vitem)
  return vitem_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PBoxIdVehicleRow >*
PBoxIdVehicleRowList::mutable_vitem() {
  // @@protoc_insertion_point(field_mutable_list:my_comm_proto.PBoxIdVehicleRowList.vitem)
  return &vitem_;
}
inline const ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PBoxIdVehicleRow >&
PBoxIdVehicleRowList::vitem() const {
  // @@protoc_insertion_point(field_list:my_comm_proto.PBoxIdVehicleRowList.vitem)
  return vitem_;
}

// -------------------------------------------------------------------

// PConfiguration

// required int32 inspHD = 1;
inline bool PConfiguration::has_insphd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PConfiguration::set_has_insphd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PConfiguration::clear_has_insphd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PConfiguration::clear_insphd() {
  insphd_ = 0;
  clear_has_insphd();
}
inline ::google::protobuf::int32 PConfiguration::insphd() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PConfiguration.inspHD)
  return insphd_;
}
inline void PConfiguration::set_insphd(::google::protobuf::int32 value) {
  set_has_insphd();
  insphd_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PConfiguration.inspHD)
}

// required int32 inspHA = 2;
inline bool PConfiguration::has_inspha() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PConfiguration::set_has_inspha() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PConfiguration::clear_has_inspha() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PConfiguration::clear_inspha() {
  inspha_ = 0;
  clear_has_inspha();
}
inline ::google::protobuf::int32 PConfiguration::inspha() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PConfiguration.inspHA)
  return inspha_;
}
inline void PConfiguration::set_inspha(::google::protobuf::int32 value) {
  set_has_inspha();
  inspha_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PConfiguration.inspHA)
}

// required int32 imagesLimit = 3;
inline bool PConfiguration::has_imageslimit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PConfiguration::set_has_imageslimit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PConfiguration::clear_has_imageslimit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PConfiguration::clear_imageslimit() {
  imageslimit_ = 0;
  clear_has_imageslimit();
}
inline ::google::protobuf::int32 PConfiguration::imageslimit() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PConfiguration.imagesLimit)
  return imageslimit_;
}
inline void PConfiguration::set_imageslimit(::google::protobuf::int32 value) {
  set_has_imageslimit();
  imageslimit_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PConfiguration.imagesLimit)
}

// required int32 violationthreshold = 4;
inline bool PConfiguration::has_violationthreshold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PConfiguration::set_has_violationthreshold() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PConfiguration::clear_has_violationthreshold() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PConfiguration::clear_violationthreshold() {
  violationthreshold_ = 0;
  clear_has_violationthreshold();
}
inline ::google::protobuf::int32 PConfiguration::violationthreshold() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PConfiguration.violationthreshold)
  return violationthreshold_;
}
inline void PConfiguration::set_violationthreshold(::google::protobuf::int32 value) {
  set_has_violationthreshold();
  violationthreshold_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PConfiguration.violationthreshold)
}

// required int32 login = 5;
inline bool PConfiguration::has_login() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PConfiguration::set_has_login() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PConfiguration::clear_has_login() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PConfiguration::clear_login() {
  login_ = 0;
  clear_has_login();
}
inline ::google::protobuf::int32 PConfiguration::login() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PConfiguration.login)
  return login_;
}
inline void PConfiguration::set_login(::google::protobuf::int32 value) {
  set_has_login();
  login_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PConfiguration.login)
}

// required bool _scan_flag = 6;
inline bool PConfiguration::has__scan_flag() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PConfiguration::set_has__scan_flag() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PConfiguration::clear_has__scan_flag() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PConfiguration::clear__scan_flag() {
  _scan_flag_ = false;
  clear_has__scan_flag();
}
inline bool PConfiguration::_scan_flag() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PConfiguration._scan_flag)
  return _scan_flag_;
}
inline void PConfiguration::set__scan_flag(bool value) {
  set_has__scan_flag();
  _scan_flag_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PConfiguration._scan_flag)
}

// required string SearchType = 7;
inline bool PConfiguration::has_searchtype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PConfiguration::set_has_searchtype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PConfiguration::clear_has_searchtype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PConfiguration::clear_searchtype() {
  searchtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_searchtype();
}
inline const ::std::string& PConfiguration::searchtype() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PConfiguration.SearchType)
  return searchtype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PConfiguration::set_searchtype(const ::std::string& value) {
  set_has_searchtype();
  searchtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PConfiguration.SearchType)
}
inline void PConfiguration::set_searchtype(const char* value) {
  set_has_searchtype();
  searchtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PConfiguration.SearchType)
}
inline void PConfiguration::set_searchtype(const char* value, size_t size) {
  set_has_searchtype();
  searchtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PConfiguration.SearchType)
}
inline ::std::string* PConfiguration::mutable_searchtype() {
  set_has_searchtype();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PConfiguration.SearchType)
  return searchtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PConfiguration::release_searchtype() {
  clear_has_searchtype();
  return searchtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PConfiguration::set_allocated_searchtype(::std::string* searchtype) {
  if (searchtype != NULL) {
    set_has_searchtype();
  } else {
    clear_has_searchtype();
  }
  searchtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), searchtype);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PConfiguration.SearchType)
}

// required int32 ScreenLock = 8;
inline bool PConfiguration::has_screenlock() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PConfiguration::set_has_screenlock() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PConfiguration::clear_has_screenlock() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PConfiguration::clear_screenlock() {
  screenlock_ = 0;
  clear_has_screenlock();
}
inline ::google::protobuf::int32 PConfiguration::screenlock() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PConfiguration.ScreenLock)
  return screenlock_;
}
inline void PConfiguration::set_screenlock(::google::protobuf::int32 value) {
  set_has_screenlock();
  screenlock_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PConfiguration.ScreenLock)
}

// required int32 OdoInputFlag = 9;
inline bool PConfiguration::has_odoinputflag() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PConfiguration::set_has_odoinputflag() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PConfiguration::clear_has_odoinputflag() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PConfiguration::clear_odoinputflag() {
  odoinputflag_ = 0;
  clear_has_odoinputflag();
}
inline ::google::protobuf::int32 PConfiguration::odoinputflag() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PConfiguration.OdoInputFlag)
  return odoinputflag_;
}
inline void PConfiguration::set_odoinputflag(::google::protobuf::int32 value) {
  set_has_odoinputflag();
  odoinputflag_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PConfiguration.OdoInputFlag)
}

// required int32 WeightThreshold = 10;
inline bool PConfiguration::has_weightthreshold() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PConfiguration::set_has_weightthreshold() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PConfiguration::clear_has_weightthreshold() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PConfiguration::clear_weightthreshold() {
  weightthreshold_ = 0;
  clear_has_weightthreshold();
}
inline ::google::protobuf::int32 PConfiguration::weightthreshold() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PConfiguration.WeightThreshold)
  return weightthreshold_;
}
inline void PConfiguration::set_weightthreshold(::google::protobuf::int32 value) {
  set_has_weightthreshold();
  weightthreshold_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PConfiguration.WeightThreshold)
}

// -------------------------------------------------------------------

// PEmployeeRow

// required string ID = 1;
inline bool PEmployeeRow::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PEmployeeRow::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PEmployeeRow::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PEmployeeRow::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& PEmployeeRow::id() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PEmployeeRow.ID)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmployeeRow::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PEmployeeRow.ID)
}
inline void PEmployeeRow::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PEmployeeRow.ID)
}
inline void PEmployeeRow::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PEmployeeRow.ID)
}
inline ::std::string* PEmployeeRow::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PEmployeeRow.ID)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PEmployeeRow::release_id() {
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmployeeRow::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PEmployeeRow.ID)
}

// required string DriverName = 2;
inline bool PEmployeeRow::has_drivername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PEmployeeRow::set_has_drivername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PEmployeeRow::clear_has_drivername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PEmployeeRow::clear_drivername() {
  drivername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_drivername();
}
inline const ::std::string& PEmployeeRow::drivername() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PEmployeeRow.DriverName)
  return drivername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmployeeRow::set_drivername(const ::std::string& value) {
  set_has_drivername();
  drivername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PEmployeeRow.DriverName)
}
inline void PEmployeeRow::set_drivername(const char* value) {
  set_has_drivername();
  drivername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PEmployeeRow.DriverName)
}
inline void PEmployeeRow::set_drivername(const char* value, size_t size) {
  set_has_drivername();
  drivername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PEmployeeRow.DriverName)
}
inline ::std::string* PEmployeeRow::mutable_drivername() {
  set_has_drivername();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PEmployeeRow.DriverName)
  return drivername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PEmployeeRow::release_drivername() {
  clear_has_drivername();
  return drivername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmployeeRow::set_allocated_drivername(::std::string* drivername) {
  if (drivername != NULL) {
    set_has_drivername();
  } else {
    clear_has_drivername();
  }
  drivername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), drivername);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PEmployeeRow.DriverName)
}

// optional string UserName = 3;
inline bool PEmployeeRow::has_username() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PEmployeeRow::set_has_username() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PEmployeeRow::clear_has_username() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PEmployeeRow::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& PEmployeeRow::username() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PEmployeeRow.UserName)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmployeeRow::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PEmployeeRow.UserName)
}
inline void PEmployeeRow::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PEmployeeRow.UserName)
}
inline void PEmployeeRow::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PEmployeeRow.UserName)
}
inline ::std::string* PEmployeeRow::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PEmployeeRow.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PEmployeeRow::release_username() {
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmployeeRow::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PEmployeeRow.UserName)
}

// optional string Email = 4;
inline bool PEmployeeRow::has_email() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PEmployeeRow::set_has_email() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PEmployeeRow::clear_has_email() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PEmployeeRow::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
inline const ::std::string& PEmployeeRow::email() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PEmployeeRow.Email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmployeeRow::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PEmployeeRow.Email)
}
inline void PEmployeeRow::set_email(const char* value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PEmployeeRow.Email)
}
inline void PEmployeeRow::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PEmployeeRow.Email)
}
inline ::std::string* PEmployeeRow::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PEmployeeRow.Email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PEmployeeRow::release_email() {
  clear_has_email();
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmployeeRow::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PEmployeeRow.Email)
}

// optional string Password = 5;
inline bool PEmployeeRow::has_password() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PEmployeeRow::set_has_password() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PEmployeeRow::clear_has_password() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PEmployeeRow::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& PEmployeeRow::password() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PEmployeeRow.Password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmployeeRow::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PEmployeeRow.Password)
}
inline void PEmployeeRow::set_password(const char* value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PEmployeeRow.Password)
}
inline void PEmployeeRow::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PEmployeeRow.Password)
}
inline ::std::string* PEmployeeRow::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PEmployeeRow.Password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PEmployeeRow::release_password() {
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmployeeRow::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PEmployeeRow.Password)
}

// optional string License = 6;
inline bool PEmployeeRow::has_license() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PEmployeeRow::set_has_license() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PEmployeeRow::clear_has_license() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PEmployeeRow::clear_license() {
  license_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_license();
}
inline const ::std::string& PEmployeeRow::license() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PEmployeeRow.License)
  return license_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmployeeRow::set_license(const ::std::string& value) {
  set_has_license();
  license_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PEmployeeRow.License)
}
inline void PEmployeeRow::set_license(const char* value) {
  set_has_license();
  license_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PEmployeeRow.License)
}
inline void PEmployeeRow::set_license(const char* value, size_t size) {
  set_has_license();
  license_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PEmployeeRow.License)
}
inline ::std::string* PEmployeeRow::mutable_license() {
  set_has_license();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PEmployeeRow.License)
  return license_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PEmployeeRow::release_license() {
  clear_has_license();
  return license_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmployeeRow::set_allocated_license(::std::string* license) {
  if (license != NULL) {
    set_has_license();
  } else {
    clear_has_license();
  }
  license_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), license);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PEmployeeRow.License)
}

// optional string Country = 7;
inline bool PEmployeeRow::has_country() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PEmployeeRow::set_has_country() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PEmployeeRow::clear_has_country() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PEmployeeRow::clear_country() {
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country();
}
inline const ::std::string& PEmployeeRow::country() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PEmployeeRow.Country)
  return country_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmployeeRow::set_country(const ::std::string& value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PEmployeeRow.Country)
}
inline void PEmployeeRow::set_country(const char* value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PEmployeeRow.Country)
}
inline void PEmployeeRow::set_country(const char* value, size_t size) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PEmployeeRow.Country)
}
inline ::std::string* PEmployeeRow::mutable_country() {
  set_has_country();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PEmployeeRow.Country)
  return country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PEmployeeRow::release_country() {
  clear_has_country();
  return country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmployeeRow::set_allocated_country(::std::string* country) {
  if (country != NULL) {
    set_has_country();
  } else {
    clear_has_country();
  }
  country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PEmployeeRow.Country)
}

// optional string Signature = 8;
inline bool PEmployeeRow::has_signature() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PEmployeeRow::set_has_signature() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PEmployeeRow::clear_has_signature() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PEmployeeRow::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_signature();
}
inline const ::std::string& PEmployeeRow::signature() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PEmployeeRow.Signature)
  return signature_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmployeeRow::set_signature(const ::std::string& value) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PEmployeeRow.Signature)
}
inline void PEmployeeRow::set_signature(const char* value) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PEmployeeRow.Signature)
}
inline void PEmployeeRow::set_signature(const char* value, size_t size) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PEmployeeRow.Signature)
}
inline ::std::string* PEmployeeRow::mutable_signature() {
  set_has_signature();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PEmployeeRow.Signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PEmployeeRow::release_signature() {
  clear_has_signature();
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmployeeRow::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    set_has_signature();
  } else {
    clear_has_signature();
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PEmployeeRow.Signature)
}

// optional string Domain = 9;
inline bool PEmployeeRow::has_domain() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PEmployeeRow::set_has_domain() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PEmployeeRow::clear_has_domain() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PEmployeeRow::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_domain();
}
inline const ::std::string& PEmployeeRow::domain() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PEmployeeRow.Domain)
  return domain_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmployeeRow::set_domain(const ::std::string& value) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PEmployeeRow.Domain)
}
inline void PEmployeeRow::set_domain(const char* value) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PEmployeeRow.Domain)
}
inline void PEmployeeRow::set_domain(const char* value, size_t size) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PEmployeeRow.Domain)
}
inline ::std::string* PEmployeeRow::mutable_domain() {
  set_has_domain();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PEmployeeRow.Domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PEmployeeRow::release_domain() {
  clear_has_domain();
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmployeeRow::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    set_has_domain();
  } else {
    clear_has_domain();
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PEmployeeRow.Domain)
}

// optional int32 Cycle = 10;
inline bool PEmployeeRow::has_cycle() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PEmployeeRow::set_has_cycle() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PEmployeeRow::clear_has_cycle() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PEmployeeRow::clear_cycle() {
  cycle_ = 0;
  clear_has_cycle();
}
inline ::google::protobuf::int32 PEmployeeRow::cycle() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PEmployeeRow.Cycle)
  return cycle_;
}
inline void PEmployeeRow::set_cycle(::google::protobuf::int32 value) {
  set_has_cycle();
  cycle_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PEmployeeRow.Cycle)
}

// optional int32 HOSExcept = 11;
inline bool PEmployeeRow::has_hosexcept() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PEmployeeRow::set_has_hosexcept() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PEmployeeRow::clear_has_hosexcept() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PEmployeeRow::clear_hosexcept() {
  hosexcept_ = 0;
  clear_has_hosexcept();
}
inline ::google::protobuf::int32 PEmployeeRow::hosexcept() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PEmployeeRow.HOSExcept)
  return hosexcept_;
}
inline void PEmployeeRow::set_hosexcept(::google::protobuf::int32 value) {
  set_has_hosexcept();
  hosexcept_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PEmployeeRow.HOSExcept)
}

// optional int32 ApplyDTS = 12;
inline bool PEmployeeRow::has_applydts() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PEmployeeRow::set_has_applydts() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PEmployeeRow::clear_has_applydts() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PEmployeeRow::clear_applydts() {
  applydts_ = 0;
  clear_has_applydts();
}
inline ::google::protobuf::int32 PEmployeeRow::applydts() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PEmployeeRow.ApplyDTS)
  return applydts_;
}
inline void PEmployeeRow::set_applydts(::google::protobuf::int32 value) {
  set_has_applydts();
  applydts_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PEmployeeRow.ApplyDTS)
}

// optional float TZ = 13;
inline bool PEmployeeRow::has_tz() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PEmployeeRow::set_has_tz() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PEmployeeRow::clear_has_tz() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PEmployeeRow::clear_tz() {
  tz_ = 0;
  clear_has_tz();
}
inline float PEmployeeRow::tz() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PEmployeeRow.TZ)
  return tz_;
}
inline void PEmployeeRow::set_tz(float value) {
  set_has_tz();
  tz_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PEmployeeRow.TZ)
}

// optional string HomeAddress = 14;
inline bool PEmployeeRow::has_homeaddress() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PEmployeeRow::set_has_homeaddress() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PEmployeeRow::clear_has_homeaddress() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PEmployeeRow::clear_homeaddress() {
  homeaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_homeaddress();
}
inline const ::std::string& PEmployeeRow::homeaddress() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PEmployeeRow.HomeAddress)
  return homeaddress_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmployeeRow::set_homeaddress(const ::std::string& value) {
  set_has_homeaddress();
  homeaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PEmployeeRow.HomeAddress)
}
inline void PEmployeeRow::set_homeaddress(const char* value) {
  set_has_homeaddress();
  homeaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PEmployeeRow.HomeAddress)
}
inline void PEmployeeRow::set_homeaddress(const char* value, size_t size) {
  set_has_homeaddress();
  homeaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PEmployeeRow.HomeAddress)
}
inline ::std::string* PEmployeeRow::mutable_homeaddress() {
  set_has_homeaddress();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PEmployeeRow.HomeAddress)
  return homeaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PEmployeeRow::release_homeaddress() {
  clear_has_homeaddress();
  return homeaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmployeeRow::set_allocated_homeaddress(::std::string* homeaddress) {
  if (homeaddress != NULL) {
    set_has_homeaddress();
  } else {
    clear_has_homeaddress();
  }
  homeaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), homeaddress);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PEmployeeRow.HomeAddress)
}

// optional bool IsSupervisor = 15;
inline bool PEmployeeRow::has_issupervisor() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PEmployeeRow::set_has_issupervisor() {
  _has_bits_[0] |= 0x00004000u;
}
inline void PEmployeeRow::clear_has_issupervisor() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void PEmployeeRow::clear_issupervisor() {
  issupervisor_ = false;
  clear_has_issupervisor();
}
inline bool PEmployeeRow::issupervisor() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PEmployeeRow.IsSupervisor)
  return issupervisor_;
}
inline void PEmployeeRow::set_issupervisor(bool value) {
  set_has_issupervisor();
  issupervisor_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PEmployeeRow.IsSupervisor)
}

// optional string State = 16;
inline bool PEmployeeRow::has_state() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PEmployeeRow::set_has_state() {
  _has_bits_[0] |= 0x00008000u;
}
inline void PEmployeeRow::clear_has_state() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void PEmployeeRow::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_state();
}
inline const ::std::string& PEmployeeRow::state() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PEmployeeRow.State)
  return state_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmployeeRow::set_state(const ::std::string& value) {
  set_has_state();
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PEmployeeRow.State)
}
inline void PEmployeeRow::set_state(const char* value) {
  set_has_state();
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PEmployeeRow.State)
}
inline void PEmployeeRow::set_state(const char* value, size_t size) {
  set_has_state();
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PEmployeeRow.State)
}
inline ::std::string* PEmployeeRow::mutable_state() {
  set_has_state();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PEmployeeRow.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PEmployeeRow::release_state() {
  clear_has_state();
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmployeeRow::set_allocated_state(::std::string* state) {
  if (state != NULL) {
    set_has_state();
  } else {
    clear_has_state();
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PEmployeeRow.State)
}

// optional string OrgName = 17;
inline bool PEmployeeRow::has_orgname() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void PEmployeeRow::set_has_orgname() {
  _has_bits_[0] |= 0x00010000u;
}
inline void PEmployeeRow::clear_has_orgname() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void PEmployeeRow::clear_orgname() {
  orgname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_orgname();
}
inline const ::std::string& PEmployeeRow::orgname() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PEmployeeRow.OrgName)
  return orgname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmployeeRow::set_orgname(const ::std::string& value) {
  set_has_orgname();
  orgname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PEmployeeRow.OrgName)
}
inline void PEmployeeRow::set_orgname(const char* value) {
  set_has_orgname();
  orgname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PEmployeeRow.OrgName)
}
inline void PEmployeeRow::set_orgname(const char* value, size_t size) {
  set_has_orgname();
  orgname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PEmployeeRow.OrgName)
}
inline ::std::string* PEmployeeRow::mutable_orgname() {
  set_has_orgname();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PEmployeeRow.OrgName)
  return orgname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PEmployeeRow::release_orgname() {
  clear_has_orgname();
  return orgname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmployeeRow::set_allocated_orgname(::std::string* orgname) {
  if (orgname != NULL) {
    set_has_orgname();
  } else {
    clear_has_orgname();
  }
  orgname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), orgname);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PEmployeeRow.OrgName)
}

// optional string OrgAddr = 18;
inline bool PEmployeeRow::has_orgaddr() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void PEmployeeRow::set_has_orgaddr() {
  _has_bits_[0] |= 0x00020000u;
}
inline void PEmployeeRow::clear_has_orgaddr() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void PEmployeeRow::clear_orgaddr() {
  orgaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_orgaddr();
}
inline const ::std::string& PEmployeeRow::orgaddr() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PEmployeeRow.OrgAddr)
  return orgaddr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmployeeRow::set_orgaddr(const ::std::string& value) {
  set_has_orgaddr();
  orgaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PEmployeeRow.OrgAddr)
}
inline void PEmployeeRow::set_orgaddr(const char* value) {
  set_has_orgaddr();
  orgaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PEmployeeRow.OrgAddr)
}
inline void PEmployeeRow::set_orgaddr(const char* value, size_t size) {
  set_has_orgaddr();
  orgaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PEmployeeRow.OrgAddr)
}
inline ::std::string* PEmployeeRow::mutable_orgaddr() {
  set_has_orgaddr();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PEmployeeRow.OrgAddr)
  return orgaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PEmployeeRow::release_orgaddr() {
  clear_has_orgaddr();
  return orgaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmployeeRow::set_allocated_orgaddr(::std::string* orgaddr) {
  if (orgaddr != NULL) {
    set_has_orgaddr();
  } else {
    clear_has_orgaddr();
  }
  orgaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), orgaddr);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PEmployeeRow.OrgAddr)
}

// optional bool DLS = 21;
inline bool PEmployeeRow::has_dls() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void PEmployeeRow::set_has_dls() {
  _has_bits_[0] |= 0x00040000u;
}
inline void PEmployeeRow::clear_has_dls() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void PEmployeeRow::clear_dls() {
  dls_ = false;
  clear_has_dls();
}
inline bool PEmployeeRow::dls() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PEmployeeRow.DLS)
  return dls_;
}
inline void PEmployeeRow::set_dls(bool value) {
  set_has_dls();
  dls_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PEmployeeRow.DLS)
}

// optional string photo = 22;
inline bool PEmployeeRow::has_photo() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void PEmployeeRow::set_has_photo() {
  _has_bits_[0] |= 0x00080000u;
}
inline void PEmployeeRow::clear_has_photo() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void PEmployeeRow::clear_photo() {
  photo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_photo();
}
inline const ::std::string& PEmployeeRow::photo() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PEmployeeRow.photo)
  return photo_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmployeeRow::set_photo(const ::std::string& value) {
  set_has_photo();
  photo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PEmployeeRow.photo)
}
inline void PEmployeeRow::set_photo(const char* value) {
  set_has_photo();
  photo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PEmployeeRow.photo)
}
inline void PEmployeeRow::set_photo(const char* value, size_t size) {
  set_has_photo();
  photo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PEmployeeRow.photo)
}
inline ::std::string* PEmployeeRow::mutable_photo() {
  set_has_photo();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PEmployeeRow.photo)
  return photo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PEmployeeRow::release_photo() {
  clear_has_photo();
  return photo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmployeeRow::set_allocated_photo(::std::string* photo) {
  if (photo != NULL) {
    set_has_photo();
  } else {
    clear_has_photo();
  }
  photo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), photo);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PEmployeeRow.photo)
}

// -------------------------------------------------------------------

// PTimeLogRow

// required int32 Event = 1;
inline bool PTimeLogRow::has_event() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PTimeLogRow::set_has_event() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PTimeLogRow::clear_has_event() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PTimeLogRow::clear_event() {
  event_ = 0;
  clear_has_event();
}
inline ::google::protobuf::int32 PTimeLogRow::event() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PTimeLogRow.Event)
  return event_;
}
inline void PTimeLogRow::set_event(::google::protobuf::int32 value) {
  set_has_event();
  event_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PTimeLogRow.Event)
}

// required int64 LogTime = 2;
inline bool PTimeLogRow::has_logtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PTimeLogRow::set_has_logtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PTimeLogRow::clear_has_logtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PTimeLogRow::clear_logtime() {
  logtime_ = GOOGLE_LONGLONG(0);
  clear_has_logtime();
}
inline ::google::protobuf::int64 PTimeLogRow::logtime() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PTimeLogRow.LogTime)
  return logtime_;
}
inline void PTimeLogRow::set_logtime(::google::protobuf::int64 value) {
  set_has_logtime();
  logtime_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PTimeLogRow.LogTime)
}

// required bool Signed = 3;
inline bool PTimeLogRow::has_signed_() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PTimeLogRow::set_has_signed_() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PTimeLogRow::clear_has_signed_() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PTimeLogRow::clear_signed_() {
  signed__ = false;
  clear_has_signed_();
}
inline bool PTimeLogRow::signed_() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PTimeLogRow.Signed)
  return signed__;
}
inline void PTimeLogRow::set_signed_(bool value) {
  set_has_signed_();
  signed__ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PTimeLogRow.Signed)
}

// required int32 TLID = 4;
inline bool PTimeLogRow::has_tlid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PTimeLogRow::set_has_tlid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PTimeLogRow::clear_has_tlid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PTimeLogRow::clear_tlid() {
  tlid_ = 0;
  clear_has_tlid();
}
inline ::google::protobuf::int32 PTimeLogRow::tlid() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PTimeLogRow.TLID)
  return tlid_;
}
inline void PTimeLogRow::set_tlid(::google::protobuf::int32 value) {
  set_has_tlid();
  tlid_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PTimeLogRow.TLID)
}

// required int32 Type = 5;
inline bool PTimeLogRow::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PTimeLogRow::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PTimeLogRow::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PTimeLogRow::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 PTimeLogRow::type() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PTimeLogRow.Type)
  return type_;
}
inline void PTimeLogRow::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PTimeLogRow.Type)
}

// optional int32 Odo = 6;
inline bool PTimeLogRow::has_odo() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PTimeLogRow::set_has_odo() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PTimeLogRow::clear_has_odo() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PTimeLogRow::clear_odo() {
  odo_ = 0;
  clear_has_odo();
}
inline ::google::protobuf::int32 PTimeLogRow::odo() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PTimeLogRow.Odo)
  return odo_;
}
inline void PTimeLogRow::set_odo(::google::protobuf::int32 value) {
  set_has_odo();
  odo_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PTimeLogRow.Odo)
}

// required int32 Logbookstopid = 7;
inline bool PTimeLogRow::has_logbookstopid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PTimeLogRow::set_has_logbookstopid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PTimeLogRow::clear_has_logbookstopid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PTimeLogRow::clear_logbookstopid() {
  logbookstopid_ = 0;
  clear_has_logbookstopid();
}
inline ::google::protobuf::int32 PTimeLogRow::logbookstopid() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PTimeLogRow.Logbookstopid)
  return logbookstopid_;
}
inline void PTimeLogRow::set_logbookstopid(::google::protobuf::int32 value) {
  set_has_logbookstopid();
  logbookstopid_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PTimeLogRow.Logbookstopid)
}

// optional string EqNo = 8;
inline bool PTimeLogRow::has_eqno() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PTimeLogRow::set_has_eqno() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PTimeLogRow::clear_has_eqno() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PTimeLogRow::clear_eqno() {
  eqno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_eqno();
}
inline const ::std::string& PTimeLogRow::eqno() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PTimeLogRow.EqNo)
  return eqno_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PTimeLogRow::set_eqno(const ::std::string& value) {
  set_has_eqno();
  eqno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PTimeLogRow.EqNo)
}
inline void PTimeLogRow::set_eqno(const char* value) {
  set_has_eqno();
  eqno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PTimeLogRow.EqNo)
}
inline void PTimeLogRow::set_eqno(const char* value, size_t size) {
  set_has_eqno();
  eqno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PTimeLogRow.EqNo)
}
inline ::std::string* PTimeLogRow::mutable_eqno() {
  set_has_eqno();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PTimeLogRow.EqNo)
  return eqno_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PTimeLogRow::release_eqno() {
  clear_has_eqno();
  return eqno_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PTimeLogRow::set_allocated_eqno(::std::string* eqno) {
  if (eqno != NULL) {
    set_has_eqno();
  } else {
    clear_has_eqno();
  }
  eqno_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), eqno);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PTimeLogRow.EqNo)
}

// optional float Lat = 9;
inline bool PTimeLogRow::has_lat() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PTimeLogRow::set_has_lat() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PTimeLogRow::clear_has_lat() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PTimeLogRow::clear_lat() {
  lat_ = 0;
  clear_has_lat();
}
inline float PTimeLogRow::lat() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PTimeLogRow.Lat)
  return lat_;
}
inline void PTimeLogRow::set_lat(float value) {
  set_has_lat();
  lat_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PTimeLogRow.Lat)
}

// optional float Lon = 10;
inline bool PTimeLogRow::has_lon() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PTimeLogRow::set_has_lon() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PTimeLogRow::clear_has_lon() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PTimeLogRow::clear_lon() {
  lon_ = 0;
  clear_has_lon();
}
inline float PTimeLogRow::lon() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PTimeLogRow.Lon)
  return lon_;
}
inline void PTimeLogRow::set_lon(float value) {
  set_has_lon();
  lon_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PTimeLogRow.Lon)
}

// required string Comment = 11;
inline bool PTimeLogRow::has_comment() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PTimeLogRow::set_has_comment() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PTimeLogRow::clear_has_comment() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PTimeLogRow::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_comment();
}
inline const ::std::string& PTimeLogRow::comment() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PTimeLogRow.Comment)
  return comment_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PTimeLogRow::set_comment(const ::std::string& value) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PTimeLogRow.Comment)
}
inline void PTimeLogRow::set_comment(const char* value) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PTimeLogRow.Comment)
}
inline void PTimeLogRow::set_comment(const char* value, size_t size) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PTimeLogRow.Comment)
}
inline ::std::string* PTimeLogRow::mutable_comment() {
  set_has_comment();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PTimeLogRow.Comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PTimeLogRow::release_comment() {
  clear_has_comment();
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PTimeLogRow::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    set_has_comment();
  } else {
    clear_has_comment();
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PTimeLogRow.Comment)
}

// required string DriverId = 12;
inline bool PTimeLogRow::has_driverid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PTimeLogRow::set_has_driverid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PTimeLogRow::clear_has_driverid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PTimeLogRow::clear_driverid() {
  driverid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_driverid();
}
inline const ::std::string& PTimeLogRow::driverid() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PTimeLogRow.DriverId)
  return driverid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PTimeLogRow::set_driverid(const ::std::string& value) {
  set_has_driverid();
  driverid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PTimeLogRow.DriverId)
}
inline void PTimeLogRow::set_driverid(const char* value) {
  set_has_driverid();
  driverid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PTimeLogRow.DriverId)
}
inline void PTimeLogRow::set_driverid(const char* value, size_t size) {
  set_has_driverid();
  driverid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PTimeLogRow.DriverId)
}
inline ::std::string* PTimeLogRow::mutable_driverid() {
  set_has_driverid();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PTimeLogRow.DriverId)
  return driverid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PTimeLogRow::release_driverid() {
  clear_has_driverid();
  return driverid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PTimeLogRow::set_allocated_driverid(::std::string* driverid) {
  if (driverid != NULL) {
    set_has_driverid();
  } else {
    clear_has_driverid();
  }
  driverid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), driverid);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PTimeLogRow.DriverId)
}

// optional string State = 13;
inline bool PTimeLogRow::has_state() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PTimeLogRow::set_has_state() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PTimeLogRow::clear_has_state() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PTimeLogRow::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_state();
}
inline const ::std::string& PTimeLogRow::state() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PTimeLogRow.State)
  return state_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PTimeLogRow::set_state(const ::std::string& value) {
  set_has_state();
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PTimeLogRow.State)
}
inline void PTimeLogRow::set_state(const char* value) {
  set_has_state();
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PTimeLogRow.State)
}
inline void PTimeLogRow::set_state(const char* value, size_t size) {
  set_has_state();
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PTimeLogRow.State)
}
inline ::std::string* PTimeLogRow::mutable_state() {
  set_has_state();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PTimeLogRow.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PTimeLogRow::release_state() {
  clear_has_state();
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PTimeLogRow::set_allocated_state(::std::string* state) {
  if (state != NULL) {
    set_has_state();
  } else {
    clear_has_state();
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PTimeLogRow.State)
}

// required int32 BoxID = 14;
inline bool PTimeLogRow::has_boxid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PTimeLogRow::set_has_boxid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PTimeLogRow::clear_has_boxid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PTimeLogRow::clear_boxid() {
  boxid_ = 0;
  clear_has_boxid();
}
inline ::google::protobuf::int32 PTimeLogRow::boxid() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PTimeLogRow.BoxID)
  return boxid_;
}
inline void PTimeLogRow::set_boxid(::google::protobuf::int32 value) {
  set_has_boxid();
  boxid_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PTimeLogRow.BoxID)
}

// required int64 OLT = 15;
inline bool PTimeLogRow::has_olt() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PTimeLogRow::set_has_olt() {
  _has_bits_[0] |= 0x00004000u;
}
inline void PTimeLogRow::clear_has_olt() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void PTimeLogRow::clear_olt() {
  olt_ = GOOGLE_LONGLONG(0);
  clear_has_olt();
}
inline ::google::protobuf::int64 PTimeLogRow::olt() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PTimeLogRow.OLT)
  return olt_;
}
inline void PTimeLogRow::set_olt(::google::protobuf::int64 value) {
  set_has_olt();
  olt_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PTimeLogRow.OLT)
}

// optional int32 Editor = 16;
inline bool PTimeLogRow::has_editor() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PTimeLogRow::set_has_editor() {
  _has_bits_[0] |= 0x00008000u;
}
inline void PTimeLogRow::clear_has_editor() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void PTimeLogRow::clear_editor() {
  editor_ = 0;
  clear_has_editor();
}
inline ::google::protobuf::int32 PTimeLogRow::editor() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PTimeLogRow.Editor)
  return editor_;
}
inline void PTimeLogRow::set_editor(::google::protobuf::int32 value) {
  set_has_editor();
  editor_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PTimeLogRow.Editor)
}

// optional float TZ = 17;
inline bool PTimeLogRow::has_tz() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void PTimeLogRow::set_has_tz() {
  _has_bits_[0] |= 0x00010000u;
}
inline void PTimeLogRow::clear_has_tz() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void PTimeLogRow::clear_tz() {
  tz_ = 0;
  clear_has_tz();
}
inline float PTimeLogRow::tz() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PTimeLogRow.TZ)
  return tz_;
}
inline void PTimeLogRow::set_tz(float value) {
  set_has_tz();
  tz_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PTimeLogRow.TZ)
}

// optional float DST = 18;
inline bool PTimeLogRow::has_dst() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void PTimeLogRow::set_has_dst() {
  _has_bits_[0] |= 0x00020000u;
}
inline void PTimeLogRow::clear_has_dst() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void PTimeLogRow::clear_dst() {
  dst_ = 0;
  clear_has_dst();
}
inline float PTimeLogRow::dst() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PTimeLogRow.DST)
  return dst_;
}
inline void PTimeLogRow::set_dst(float value) {
  set_has_dst();
  dst_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PTimeLogRow.DST)
}

// optional string Addr = 19;
inline bool PTimeLogRow::has_addr() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void PTimeLogRow::set_has_addr() {
  _has_bits_[0] |= 0x00040000u;
}
inline void PTimeLogRow::clear_has_addr() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void PTimeLogRow::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_addr();
}
inline const ::std::string& PTimeLogRow::addr() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PTimeLogRow.Addr)
  return addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PTimeLogRow::set_addr(const ::std::string& value) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PTimeLogRow.Addr)
}
inline void PTimeLogRow::set_addr(const char* value) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PTimeLogRow.Addr)
}
inline void PTimeLogRow::set_addr(const char* value, size_t size) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PTimeLogRow.Addr)
}
inline ::std::string* PTimeLogRow::mutable_addr() {
  set_has_addr();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PTimeLogRow.Addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PTimeLogRow::release_addr() {
  clear_has_addr();
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PTimeLogRow::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    set_has_addr();
  } else {
    clear_has_addr();
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PTimeLogRow.Addr)
}

// optional int32 arGeo = 20;
inline bool PTimeLogRow::has_argeo() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void PTimeLogRow::set_has_argeo() {
  _has_bits_[0] |= 0x00080000u;
}
inline void PTimeLogRow::clear_has_argeo() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void PTimeLogRow::clear_argeo() {
  argeo_ = 0;
  clear_has_argeo();
}
inline ::google::protobuf::int32 PTimeLogRow::argeo() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PTimeLogRow.arGeo)
  return argeo_;
}
inline void PTimeLogRow::set_argeo(::google::protobuf::int32 value) {
  set_has_argeo();
  argeo_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PTimeLogRow.arGeo)
}

// optional string CoDriver = 21;
inline bool PTimeLogRow::has_codriver() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void PTimeLogRow::set_has_codriver() {
  _has_bits_[0] |= 0x00100000u;
}
inline void PTimeLogRow::clear_has_codriver() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void PTimeLogRow::clear_codriver() {
  codriver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_codriver();
}
inline const ::std::string& PTimeLogRow::codriver() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PTimeLogRow.CoDriver)
  return codriver_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PTimeLogRow::set_codriver(const ::std::string& value) {
  set_has_codriver();
  codriver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PTimeLogRow.CoDriver)
}
inline void PTimeLogRow::set_codriver(const char* value) {
  set_has_codriver();
  codriver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PTimeLogRow.CoDriver)
}
inline void PTimeLogRow::set_codriver(const char* value, size_t size) {
  set_has_codriver();
  codriver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PTimeLogRow.CoDriver)
}
inline ::std::string* PTimeLogRow::mutable_codriver() {
  set_has_codriver();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PTimeLogRow.CoDriver)
  return codriver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PTimeLogRow::release_codriver() {
  clear_has_codriver();
  return codriver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PTimeLogRow::set_allocated_codriver(::std::string* codriver) {
  if (codriver != NULL) {
    set_has_codriver();
  } else {
    clear_has_codriver();
  }
  codriver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), codriver);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PTimeLogRow.CoDriver)
}

// optional int32 QualifyRadiusRule = 22;
inline bool PTimeLogRow::has_qualifyradiusrule() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void PTimeLogRow::set_has_qualifyradiusrule() {
  _has_bits_[0] |= 0x00200000u;
}
inline void PTimeLogRow::clear_has_qualifyradiusrule() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void PTimeLogRow::clear_qualifyradiusrule() {
  qualifyradiusrule_ = 0;
  clear_has_qualifyradiusrule();
}
inline ::google::protobuf::int32 PTimeLogRow::qualifyradiusrule() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PTimeLogRow.QualifyRadiusRule)
  return qualifyradiusrule_;
}
inline void PTimeLogRow::set_qualifyradiusrule(::google::protobuf::int32 value) {
  set_has_qualifyradiusrule();
  qualifyradiusrule_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PTimeLogRow.QualifyRadiusRule)
}

// -------------------------------------------------------------------

// PHosAlertRow

// required int64 dt = 1;
inline bool PHosAlertRow::has_dt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PHosAlertRow::set_has_dt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PHosAlertRow::clear_has_dt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PHosAlertRow::clear_dt() {
  dt_ = GOOGLE_LONGLONG(0);
  clear_has_dt();
}
inline ::google::protobuf::int64 PHosAlertRow::dt() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PHosAlertRow.dt)
  return dt_;
}
inline void PHosAlertRow::set_dt(::google::protobuf::int64 value) {
  set_has_dt();
  dt_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PHosAlertRow.dt)
}

// required string ondutyruleviolated = 2;
inline bool PHosAlertRow::has_ondutyruleviolated() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PHosAlertRow::set_has_ondutyruleviolated() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PHosAlertRow::clear_has_ondutyruleviolated() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PHosAlertRow::clear_ondutyruleviolated() {
  ondutyruleviolated_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ondutyruleviolated();
}
inline const ::std::string& PHosAlertRow::ondutyruleviolated() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PHosAlertRow.ondutyruleviolated)
  return ondutyruleviolated_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PHosAlertRow::set_ondutyruleviolated(const ::std::string& value) {
  set_has_ondutyruleviolated();
  ondutyruleviolated_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PHosAlertRow.ondutyruleviolated)
}
inline void PHosAlertRow::set_ondutyruleviolated(const char* value) {
  set_has_ondutyruleviolated();
  ondutyruleviolated_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PHosAlertRow.ondutyruleviolated)
}
inline void PHosAlertRow::set_ondutyruleviolated(const char* value, size_t size) {
  set_has_ondutyruleviolated();
  ondutyruleviolated_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PHosAlertRow.ondutyruleviolated)
}
inline ::std::string* PHosAlertRow::mutable_ondutyruleviolated() {
  set_has_ondutyruleviolated();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PHosAlertRow.ondutyruleviolated)
  return ondutyruleviolated_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PHosAlertRow::release_ondutyruleviolated() {
  clear_has_ondutyruleviolated();
  return ondutyruleviolated_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PHosAlertRow::set_allocated_ondutyruleviolated(::std::string* ondutyruleviolated) {
  if (ondutyruleviolated != NULL) {
    set_has_ondutyruleviolated();
  } else {
    clear_has_ondutyruleviolated();
  }
  ondutyruleviolated_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ondutyruleviolated);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PHosAlertRow.ondutyruleviolated)
}

// required string drivingruleviolated = 3;
inline bool PHosAlertRow::has_drivingruleviolated() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PHosAlertRow::set_has_drivingruleviolated() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PHosAlertRow::clear_has_drivingruleviolated() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PHosAlertRow::clear_drivingruleviolated() {
  drivingruleviolated_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_drivingruleviolated();
}
inline const ::std::string& PHosAlertRow::drivingruleviolated() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PHosAlertRow.drivingruleviolated)
  return drivingruleviolated_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PHosAlertRow::set_drivingruleviolated(const ::std::string& value) {
  set_has_drivingruleviolated();
  drivingruleviolated_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PHosAlertRow.drivingruleviolated)
}
inline void PHosAlertRow::set_drivingruleviolated(const char* value) {
  set_has_drivingruleviolated();
  drivingruleviolated_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PHosAlertRow.drivingruleviolated)
}
inline void PHosAlertRow::set_drivingruleviolated(const char* value, size_t size) {
  set_has_drivingruleviolated();
  drivingruleviolated_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PHosAlertRow.drivingruleviolated)
}
inline ::std::string* PHosAlertRow::mutable_drivingruleviolated() {
  set_has_drivingruleviolated();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PHosAlertRow.drivingruleviolated)
  return drivingruleviolated_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PHosAlertRow::release_drivingruleviolated() {
  clear_has_drivingruleviolated();
  return drivingruleviolated_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PHosAlertRow::set_allocated_drivingruleviolated(::std::string* drivingruleviolated) {
  if (drivingruleviolated != NULL) {
    set_has_drivingruleviolated();
  } else {
    clear_has_drivingruleviolated();
  }
  drivingruleviolated_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), drivingruleviolated);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PHosAlertRow.drivingruleviolated)
}

// required int32 alertType = 4;
inline bool PHosAlertRow::has_alerttype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PHosAlertRow::set_has_alerttype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PHosAlertRow::clear_has_alerttype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PHosAlertRow::clear_alerttype() {
  alerttype_ = 0;
  clear_has_alerttype();
}
inline ::google::protobuf::int32 PHosAlertRow::alerttype() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PHosAlertRow.alertType)
  return alerttype_;
}
inline void PHosAlertRow::set_alerttype(::google::protobuf::int32 value) {
  set_has_alerttype();
  alerttype_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PHosAlertRow.alertType)
}

// required int32 drivingAvailable = 5;
inline bool PHosAlertRow::has_drivingavailable() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PHosAlertRow::set_has_drivingavailable() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PHosAlertRow::clear_has_drivingavailable() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PHosAlertRow::clear_drivingavailable() {
  drivingavailable_ = 0;
  clear_has_drivingavailable();
}
inline ::google::protobuf::int32 PHosAlertRow::drivingavailable() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PHosAlertRow.drivingAvailable)
  return drivingavailable_;
}
inline void PHosAlertRow::set_drivingavailable(::google::protobuf::int32 value) {
  set_has_drivingavailable();
  drivingavailable_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PHosAlertRow.drivingAvailable)
}

// required int32 ondutyAvailable = 6;
inline bool PHosAlertRow::has_ondutyavailable() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PHosAlertRow::set_has_ondutyavailable() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PHosAlertRow::clear_has_ondutyavailable() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PHosAlertRow::clear_ondutyavailable() {
  ondutyavailable_ = 0;
  clear_has_ondutyavailable();
}
inline ::google::protobuf::int32 PHosAlertRow::ondutyavailable() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PHosAlertRow.ondutyAvailable)
  return ondutyavailable_;
}
inline void PHosAlertRow::set_ondutyavailable(::google::protobuf::int32 value) {
  set_has_ondutyavailable();
  ondutyavailable_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PHosAlertRow.ondutyAvailable)
}

// -------------------------------------------------------------------

// PRecapRow

// required int64 date = 1;
inline bool PRecapRow::has_date() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PRecapRow::set_has_date() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PRecapRow::clear_has_date() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PRecapRow::clear_date() {
  date_ = GOOGLE_LONGLONG(0);
  clear_has_date();
}
inline ::google::protobuf::int64 PRecapRow::date() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PRecapRow.date)
  return date_;
}
inline void PRecapRow::set_date(::google::protobuf::int64 value) {
  set_has_date();
  date_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PRecapRow.date)
}

// required int32 today = 2;
inline bool PRecapRow::has_today() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PRecapRow::set_has_today() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PRecapRow::clear_has_today() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PRecapRow::clear_today() {
  today_ = 0;
  clear_has_today();
}
inline ::google::protobuf::int32 PRecapRow::today() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PRecapRow.today)
  return today_;
}
inline void PRecapRow::set_today(::google::protobuf::int32 value) {
  set_has_today();
  today_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PRecapRow.today)
}

// required int32 cycleTotal = 3;
inline bool PRecapRow::has_cycletotal() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PRecapRow::set_has_cycletotal() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PRecapRow::clear_has_cycletotal() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PRecapRow::clear_cycletotal() {
  cycletotal_ = 0;
  clear_has_cycletotal();
}
inline ::google::protobuf::int32 PRecapRow::cycletotal() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PRecapRow.cycleTotal)
  return cycletotal_;
}
inline void PRecapRow::set_cycletotal(::google::protobuf::int32 value) {
  set_has_cycletotal();
  cycletotal_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PRecapRow.cycleTotal)
}

// required int32 cycleAvailable = 4;
inline bool PRecapRow::has_cycleavailable() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PRecapRow::set_has_cycleavailable() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PRecapRow::clear_has_cycleavailable() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PRecapRow::clear_cycleavailable() {
  cycleavailable_ = 0;
  clear_has_cycleavailable();
}
inline ::google::protobuf::int32 PRecapRow::cycleavailable() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PRecapRow.cycleAvailable)
  return cycleavailable_;
}
inline void PRecapRow::set_cycleavailable(::google::protobuf::int32 value) {
  set_has_cycleavailable();
  cycleavailable_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PRecapRow.cycleAvailable)
}

// required string cycle = 5;
inline bool PRecapRow::has_cycle() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PRecapRow::set_has_cycle() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PRecapRow::clear_has_cycle() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PRecapRow::clear_cycle() {
  cycle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cycle();
}
inline const ::std::string& PRecapRow::cycle() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PRecapRow.cycle)
  return cycle_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PRecapRow::set_cycle(const ::std::string& value) {
  set_has_cycle();
  cycle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PRecapRow.cycle)
}
inline void PRecapRow::set_cycle(const char* value) {
  set_has_cycle();
  cycle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PRecapRow.cycle)
}
inline void PRecapRow::set_cycle(const char* value, size_t size) {
  set_has_cycle();
  cycle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PRecapRow.cycle)
}
inline ::std::string* PRecapRow::mutable_cycle() {
  set_has_cycle();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PRecapRow.cycle)
  return cycle_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PRecapRow::release_cycle() {
  clear_has_cycle();
  return cycle_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PRecapRow::set_allocated_cycle(::std::string* cycle) {
  if (cycle != NULL) {
    set_has_cycle();
  } else {
    clear_has_cycle();
  }
  cycle_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cycle);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PRecapRow.cycle)
}

// required bool sent = 6;
inline bool PRecapRow::has_sent() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PRecapRow::set_has_sent() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PRecapRow::clear_has_sent() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PRecapRow::clear_sent() {
  sent_ = false;
  clear_has_sent();
}
inline bool PRecapRow::sent() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PRecapRow.sent)
  return sent_;
}
inline void PRecapRow::set_sent(bool value) {
  set_has_sent();
  sent_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PRecapRow.sent)
}

// -------------------------------------------------------------------

// PRuleSelectionHistoryRow

// required int32 RSHID = 1;
inline bool PRuleSelectionHistoryRow::has_rshid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PRuleSelectionHistoryRow::set_has_rshid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PRuleSelectionHistoryRow::clear_has_rshid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PRuleSelectionHistoryRow::clear_rshid() {
  rshid_ = 0;
  clear_has_rshid();
}
inline ::google::protobuf::int32 PRuleSelectionHistoryRow::rshid() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PRuleSelectionHistoryRow.RSHID)
  return rshid_;
}
inline void PRuleSelectionHistoryRow::set_rshid(::google::protobuf::int32 value) {
  set_has_rshid();
  rshid_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PRuleSelectionHistoryRow.RSHID)
}

// required int32 Ruleid = 2;
inline bool PRuleSelectionHistoryRow::has_ruleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PRuleSelectionHistoryRow::set_has_ruleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PRuleSelectionHistoryRow::clear_has_ruleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PRuleSelectionHistoryRow::clear_ruleid() {
  ruleid_ = 0;
  clear_has_ruleid();
}
inline ::google::protobuf::int32 PRuleSelectionHistoryRow::ruleid() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PRuleSelectionHistoryRow.Ruleid)
  return ruleid_;
}
inline void PRuleSelectionHistoryRow::set_ruleid(::google::protobuf::int32 value) {
  set_has_ruleid();
  ruleid_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PRuleSelectionHistoryRow.Ruleid)
}

// required int64 selectTime = 3;
inline bool PRuleSelectionHistoryRow::has_selecttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PRuleSelectionHistoryRow::set_has_selecttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PRuleSelectionHistoryRow::clear_has_selecttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PRuleSelectionHistoryRow::clear_selecttime() {
  selecttime_ = GOOGLE_LONGLONG(0);
  clear_has_selecttime();
}
inline ::google::protobuf::int64 PRuleSelectionHistoryRow::selecttime() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PRuleSelectionHistoryRow.selectTime)
  return selecttime_;
}
inline void PRuleSelectionHistoryRow::set_selecttime(::google::protobuf::int64 value) {
  set_has_selecttime();
  selecttime_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PRuleSelectionHistoryRow.selectTime)
}

// required string country = 4;
inline bool PRuleSelectionHistoryRow::has_country() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PRuleSelectionHistoryRow::set_has_country() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PRuleSelectionHistoryRow::clear_has_country() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PRuleSelectionHistoryRow::clear_country() {
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country();
}
inline const ::std::string& PRuleSelectionHistoryRow::country() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PRuleSelectionHistoryRow.country)
  return country_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PRuleSelectionHistoryRow::set_country(const ::std::string& value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PRuleSelectionHistoryRow.country)
}
inline void PRuleSelectionHistoryRow::set_country(const char* value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PRuleSelectionHistoryRow.country)
}
inline void PRuleSelectionHistoryRow::set_country(const char* value, size_t size) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PRuleSelectionHistoryRow.country)
}
inline ::std::string* PRuleSelectionHistoryRow::mutable_country() {
  set_has_country();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PRuleSelectionHistoryRow.country)
  return country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PRuleSelectionHistoryRow::release_country() {
  clear_has_country();
  return country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PRuleSelectionHistoryRow::set_allocated_country(::std::string* country) {
  if (country != NULL) {
    set_has_country();
  } else {
    clear_has_country();
  }
  country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PRuleSelectionHistoryRow.country)
}

// required int32 ruleException = 5;
inline bool PRuleSelectionHistoryRow::has_ruleexception() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PRuleSelectionHistoryRow::set_has_ruleexception() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PRuleSelectionHistoryRow::clear_has_ruleexception() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PRuleSelectionHistoryRow::clear_ruleexception() {
  ruleexception_ = 0;
  clear_has_ruleexception();
}
inline ::google::protobuf::int32 PRuleSelectionHistoryRow::ruleexception() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PRuleSelectionHistoryRow.ruleException)
  return ruleexception_;
}
inline void PRuleSelectionHistoryRow::set_ruleexception(::google::protobuf::int32 value) {
  set_has_ruleexception();
  ruleexception_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PRuleSelectionHistoryRow.ruleException)
}

// required bool sent = 6;
inline bool PRuleSelectionHistoryRow::has_sent() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PRuleSelectionHistoryRow::set_has_sent() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PRuleSelectionHistoryRow::clear_has_sent() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PRuleSelectionHistoryRow::clear_sent() {
  sent_ = false;
  clear_has_sent();
}
inline bool PRuleSelectionHistoryRow::sent() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PRuleSelectionHistoryRow.sent)
  return sent_;
}
inline void PRuleSelectionHistoryRow::set_sent(bool value) {
  set_has_sent();
  sent_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PRuleSelectionHistoryRow.sent)
}

// -------------------------------------------------------------------

// PTimeLogRowList

// repeated .my_comm_proto.PTimeLogRow list = 1;
inline int PTimeLogRowList::list_size() const {
  return list_.size();
}
inline void PTimeLogRowList::clear_list() {
  list_.Clear();
}
inline const ::my_comm_proto::PTimeLogRow& PTimeLogRowList::list(int index) const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PTimeLogRowList.list)
  return list_.Get(index);
}
inline ::my_comm_proto::PTimeLogRow* PTimeLogRowList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PTimeLogRowList.list)
  return list_.Mutable(index);
}
inline ::my_comm_proto::PTimeLogRow* PTimeLogRowList::add_list() {
  // @@protoc_insertion_point(field_add:my_comm_proto.PTimeLogRowList.list)
  return list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PTimeLogRow >*
PTimeLogRowList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:my_comm_proto.PTimeLogRowList.list)
  return &list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PTimeLogRow >&
PTimeLogRowList::list() const {
  // @@protoc_insertion_point(field_list:my_comm_proto.PTimeLogRowList.list)
  return list_;
}

// -------------------------------------------------------------------

// PRecapRowList

// repeated .my_comm_proto.PRecapRow list = 1;
inline int PRecapRowList::list_size() const {
  return list_.size();
}
inline void PRecapRowList::clear_list() {
  list_.Clear();
}
inline const ::my_comm_proto::PRecapRow& PRecapRowList::list(int index) const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PRecapRowList.list)
  return list_.Get(index);
}
inline ::my_comm_proto::PRecapRow* PRecapRowList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PRecapRowList.list)
  return list_.Mutable(index);
}
inline ::my_comm_proto::PRecapRow* PRecapRowList::add_list() {
  // @@protoc_insertion_point(field_add:my_comm_proto.PRecapRowList.list)
  return list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PRecapRow >*
PRecapRowList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:my_comm_proto.PRecapRowList.list)
  return &list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PRecapRow >&
PRecapRowList::list() const {
  // @@protoc_insertion_point(field_list:my_comm_proto.PRecapRowList.list)
  return list_;
}

// -------------------------------------------------------------------

// PRuleSelectionHistoryRowList

// repeated .my_comm_proto.PRuleSelectionHistoryRow list = 1;
inline int PRuleSelectionHistoryRowList::list_size() const {
  return list_.size();
}
inline void PRuleSelectionHistoryRowList::clear_list() {
  list_.Clear();
}
inline const ::my_comm_proto::PRuleSelectionHistoryRow& PRuleSelectionHistoryRowList::list(int index) const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PRuleSelectionHistoryRowList.list)
  return list_.Get(index);
}
inline ::my_comm_proto::PRuleSelectionHistoryRow* PRuleSelectionHistoryRowList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PRuleSelectionHistoryRowList.list)
  return list_.Mutable(index);
}
inline ::my_comm_proto::PRuleSelectionHistoryRow* PRuleSelectionHistoryRowList::add_list() {
  // @@protoc_insertion_point(field_add:my_comm_proto.PRuleSelectionHistoryRowList.list)
  return list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PRuleSelectionHistoryRow >*
PRuleSelectionHistoryRowList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:my_comm_proto.PRuleSelectionHistoryRowList.list)
  return &list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PRuleSelectionHistoryRow >&
PRuleSelectionHistoryRowList::list() const {
  // @@protoc_insertion_point(field_list:my_comm_proto.PRuleSelectionHistoryRowList.list)
  return list_;
}

// -------------------------------------------------------------------

// PInspectionItem

// required int32 iID = 1;
inline bool PInspectionItem::has_iid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PInspectionItem::set_has_iid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PInspectionItem::clear_has_iid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PInspectionItem::clear_iid() {
  iid_ = 0;
  clear_has_iid();
}
inline ::google::protobuf::int32 PInspectionItem::iid() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionItem.iID)
  return iid_;
}
inline void PInspectionItem::set_iid(::google::protobuf::int32 value) {
  set_has_iid();
  iid_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionItem.iID)
}

// required int32 cID = 2;
inline bool PInspectionItem::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PInspectionItem::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PInspectionItem::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PInspectionItem::clear_cid() {
  cid_ = 0;
  clear_has_cid();
}
inline ::google::protobuf::int32 PInspectionItem::cid() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionItem.cID)
  return cid_;
}
inline void PInspectionItem::set_cid(::google::protobuf::int32 value) {
  set_has_cid();
  cid_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionItem.cID)
}

// required string Defect = 3;
inline bool PInspectionItem::has_defect() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PInspectionItem::set_has_defect() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PInspectionItem::clear_has_defect() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PInspectionItem::clear_defect() {
  defect_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_defect();
}
inline const ::std::string& PInspectionItem::defect() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionItem.Defect)
  return defect_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionItem::set_defect(const ::std::string& value) {
  set_has_defect();
  defect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionItem.Defect)
}
inline void PInspectionItem::set_defect(const char* value) {
  set_has_defect();
  defect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PInspectionItem.Defect)
}
inline void PInspectionItem::set_defect(const char* value, size_t size) {
  set_has_defect();
  defect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PInspectionItem.Defect)
}
inline ::std::string* PInspectionItem::mutable_defect() {
  set_has_defect();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PInspectionItem.Defect)
  return defect_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PInspectionItem::release_defect() {
  clear_has_defect();
  return defect_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionItem::set_allocated_defect(::std::string* defect) {
  if (defect != NULL) {
    set_has_defect();
  } else {
    clear_has_defect();
  }
  defect_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), defect);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PInspectionItem.Defect)
}

// optional string DefAbbr = 4;
inline bool PInspectionItem::has_defabbr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PInspectionItem::set_has_defabbr() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PInspectionItem::clear_has_defabbr() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PInspectionItem::clear_defabbr() {
  defabbr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_defabbr();
}
inline const ::std::string& PInspectionItem::defabbr() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionItem.DefAbbr)
  return defabbr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionItem::set_defabbr(const ::std::string& value) {
  set_has_defabbr();
  defabbr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionItem.DefAbbr)
}
inline void PInspectionItem::set_defabbr(const char* value) {
  set_has_defabbr();
  defabbr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PInspectionItem.DefAbbr)
}
inline void PInspectionItem::set_defabbr(const char* value, size_t size) {
  set_has_defabbr();
  defabbr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PInspectionItem.DefAbbr)
}
inline ::std::string* PInspectionItem::mutable_defabbr() {
  set_has_defabbr();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PInspectionItem.DefAbbr)
  return defabbr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PInspectionItem::release_defabbr() {
  clear_has_defabbr();
  return defabbr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionItem::set_allocated_defabbr(::std::string* defabbr) {
  if (defabbr != NULL) {
    set_has_defabbr();
  } else {
    clear_has_defabbr();
  }
  defabbr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), defabbr);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PInspectionItem.DefAbbr)
}

// optional int32 DefLevel = 5;
inline bool PInspectionItem::has_deflevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PInspectionItem::set_has_deflevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PInspectionItem::clear_has_deflevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PInspectionItem::clear_deflevel() {
  deflevel_ = 0;
  clear_has_deflevel();
}
inline ::google::protobuf::int32 PInspectionItem::deflevel() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionItem.DefLevel)
  return deflevel_;
}
inline void PInspectionItem::set_deflevel(::google::protobuf::int32 value) {
  set_has_deflevel();
  deflevel_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionItem.DefLevel)
}

// optional string Comments = 6;
inline bool PInspectionItem::has_comments() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PInspectionItem::set_has_comments() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PInspectionItem::clear_has_comments() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PInspectionItem::clear_comments() {
  comments_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_comments();
}
inline const ::std::string& PInspectionItem::comments() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionItem.Comments)
  return comments_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionItem::set_comments(const ::std::string& value) {
  set_has_comments();
  comments_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionItem.Comments)
}
inline void PInspectionItem::set_comments(const char* value) {
  set_has_comments();
  comments_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PInspectionItem.Comments)
}
inline void PInspectionItem::set_comments(const char* value, size_t size) {
  set_has_comments();
  comments_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PInspectionItem.Comments)
}
inline ::std::string* PInspectionItem::mutable_comments() {
  set_has_comments();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PInspectionItem.Comments)
  return comments_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PInspectionItem::release_comments() {
  clear_has_comments();
  return comments_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionItem::set_allocated_comments(::std::string* comments) {
  if (comments != NULL) {
    set_has_comments();
  } else {
    clear_has_comments();
  }
  comments_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comments);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PInspectionItem.Comments)
}

// optional bool isDefect = 7;
inline bool PInspectionItem::has_isdefect() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PInspectionItem::set_has_isdefect() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PInspectionItem::clear_has_isdefect() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PInspectionItem::clear_isdefect() {
  isdefect_ = false;
  clear_has_isdefect();
}
inline bool PInspectionItem::isdefect() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionItem.isDefect)
  return isdefect_;
}
inline void PInspectionItem::set_isdefect(bool value) {
  set_has_isdefect();
  isdefect_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionItem.isDefect)
}

// repeated string media_files = 8;
inline int PInspectionItem::media_files_size() const {
  return media_files_.size();
}
inline void PInspectionItem::clear_media_files() {
  media_files_.Clear();
}
inline const ::std::string& PInspectionItem::media_files(int index) const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionItem.media_files)
  return media_files_.Get(index);
}
inline ::std::string* PInspectionItem::mutable_media_files(int index) {
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PInspectionItem.media_files)
  return media_files_.Mutable(index);
}
inline void PInspectionItem::set_media_files(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionItem.media_files)
  media_files_.Mutable(index)->assign(value);
}
inline void PInspectionItem::set_media_files(int index, const char* value) {
  media_files_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PInspectionItem.media_files)
}
inline void PInspectionItem::set_media_files(int index, const char* value, size_t size) {
  media_files_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PInspectionItem.media_files)
}
inline ::std::string* PInspectionItem::add_media_files() {
  return media_files_.Add();
}
inline void PInspectionItem::add_media_files(const ::std::string& value) {
  media_files_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:my_comm_proto.PInspectionItem.media_files)
}
inline void PInspectionItem::add_media_files(const char* value) {
  media_files_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:my_comm_proto.PInspectionItem.media_files)
}
inline void PInspectionItem::add_media_files(const char* value, size_t size) {
  media_files_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:my_comm_proto.PInspectionItem.media_files)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PInspectionItem::media_files() const {
  // @@protoc_insertion_point(field_list:my_comm_proto.PInspectionItem.media_files)
  return media_files_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PInspectionItem::mutable_media_files() {
  // @@protoc_insertion_point(field_mutable_list:my_comm_proto.PInspectionItem.media_files)
  return &media_files_;
}

// optional string attID = 9;
inline bool PInspectionItem::has_attid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PInspectionItem::set_has_attid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PInspectionItem::clear_has_attid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PInspectionItem::clear_attid() {
  attid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attid();
}
inline const ::std::string& PInspectionItem::attid() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionItem.attID)
  return attid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionItem::set_attid(const ::std::string& value) {
  set_has_attid();
  attid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionItem.attID)
}
inline void PInspectionItem::set_attid(const char* value) {
  set_has_attid();
  attid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PInspectionItem.attID)
}
inline void PInspectionItem::set_attid(const char* value, size_t size) {
  set_has_attid();
  attid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PInspectionItem.attID)
}
inline ::std::string* PInspectionItem::mutable_attid() {
  set_has_attid();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PInspectionItem.attID)
  return attid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PInspectionItem::release_attid() {
  clear_has_attid();
  return attid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionItem::set_allocated_attid(::std::string* attid) {
  if (attid != NULL) {
    set_has_attid();
  } else {
    clear_has_attid();
  }
  attid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attid);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PInspectionItem.attID)
}

// optional string Clrd = 10;
inline bool PInspectionItem::has_clrd() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PInspectionItem::set_has_clrd() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PInspectionItem::clear_has_clrd() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PInspectionItem::clear_clrd() {
  clrd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clrd();
}
inline const ::std::string& PInspectionItem::clrd() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionItem.Clrd)
  return clrd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionItem::set_clrd(const ::std::string& value) {
  set_has_clrd();
  clrd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionItem.Clrd)
}
inline void PInspectionItem::set_clrd(const char* value) {
  set_has_clrd();
  clrd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PInspectionItem.Clrd)
}
inline void PInspectionItem::set_clrd(const char* value, size_t size) {
  set_has_clrd();
  clrd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PInspectionItem.Clrd)
}
inline ::std::string* PInspectionItem::mutable_clrd() {
  set_has_clrd();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PInspectionItem.Clrd)
  return clrd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PInspectionItem::release_clrd() {
  clear_has_clrd();
  return clrd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionItem::set_allocated_clrd(::std::string* clrd) {
  if (clrd != NULL) {
    set_has_clrd();
  } else {
    clear_has_clrd();
  }
  clrd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clrd);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PInspectionItem.Clrd)
}

// optional string ClrdId = 11;
inline bool PInspectionItem::has_clrdid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PInspectionItem::set_has_clrdid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PInspectionItem::clear_has_clrdid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PInspectionItem::clear_clrdid() {
  clrdid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clrdid();
}
inline const ::std::string& PInspectionItem::clrdid() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionItem.ClrdId)
  return clrdid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionItem::set_clrdid(const ::std::string& value) {
  set_has_clrdid();
  clrdid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionItem.ClrdId)
}
inline void PInspectionItem::set_clrdid(const char* value) {
  set_has_clrdid();
  clrdid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PInspectionItem.ClrdId)
}
inline void PInspectionItem::set_clrdid(const char* value, size_t size) {
  set_has_clrdid();
  clrdid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PInspectionItem.ClrdId)
}
inline ::std::string* PInspectionItem::mutable_clrdid() {
  set_has_clrdid();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PInspectionItem.ClrdId)
  return clrdid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PInspectionItem::release_clrdid() {
  clear_has_clrdid();
  return clrdid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionItem::set_allocated_clrdid(::std::string* clrdid) {
  if (clrdid != NULL) {
    set_has_clrdid();
  } else {
    clear_has_clrdid();
  }
  clrdid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clrdid);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PInspectionItem.ClrdId)
}

// optional string ClrdName = 12;
inline bool PInspectionItem::has_clrdname() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PInspectionItem::set_has_clrdname() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PInspectionItem::clear_has_clrdname() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PInspectionItem::clear_clrdname() {
  clrdname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clrdname();
}
inline const ::std::string& PInspectionItem::clrdname() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionItem.ClrdName)
  return clrdname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionItem::set_clrdname(const ::std::string& value) {
  set_has_clrdname();
  clrdname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionItem.ClrdName)
}
inline void PInspectionItem::set_clrdname(const char* value) {
  set_has_clrdname();
  clrdname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PInspectionItem.ClrdName)
}
inline void PInspectionItem::set_clrdname(const char* value, size_t size) {
  set_has_clrdname();
  clrdname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PInspectionItem.ClrdName)
}
inline ::std::string* PInspectionItem::mutable_clrdname() {
  set_has_clrdname();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PInspectionItem.ClrdName)
  return clrdname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PInspectionItem::release_clrdname() {
  clear_has_clrdname();
  return clrdname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionItem::set_allocated_clrdname(::std::string* clrdname) {
  if (clrdname != NULL) {
    set_has_clrdname();
  } else {
    clear_has_clrdname();
  }
  clrdname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clrdname);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PInspectionItem.ClrdName)
}

// optional int32 hasChildren = 13;
inline bool PInspectionItem::has_haschildren() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PInspectionItem::set_has_haschildren() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PInspectionItem::clear_has_haschildren() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PInspectionItem::clear_haschildren() {
  haschildren_ = 0;
  clear_has_haschildren();
}
inline ::google::protobuf::int32 PInspectionItem::haschildren() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionItem.hasChildren)
  return haschildren_;
}
inline void PInspectionItem::set_haschildren(::google::protobuf::int32 value) {
  set_has_haschildren();
  haschildren_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionItem.hasChildren)
}

// optional int32 parentId = 14;
inline bool PInspectionItem::has_parentid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PInspectionItem::set_has_parentid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PInspectionItem::clear_has_parentid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PInspectionItem::clear_parentid() {
  parentid_ = 0;
  clear_has_parentid();
}
inline ::google::protobuf::int32 PInspectionItem::parentid() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionItem.parentId)
  return parentid_;
}
inline void PInspectionItem::set_parentid(::google::protobuf::int32 value) {
  set_has_parentid();
  parentid_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionItem.parentId)
}

// repeated .my_comm_proto.PInspectionItem children = 15;
inline int PInspectionItem::children_size() const {
  return children_.size();
}
inline void PInspectionItem::clear_children() {
  children_.Clear();
}
inline const ::my_comm_proto::PInspectionItem& PInspectionItem::children(int index) const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionItem.children)
  return children_.Get(index);
}
inline ::my_comm_proto::PInspectionItem* PInspectionItem::mutable_children(int index) {
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PInspectionItem.children)
  return children_.Mutable(index);
}
inline ::my_comm_proto::PInspectionItem* PInspectionItem::add_children() {
  // @@protoc_insertion_point(field_add:my_comm_proto.PInspectionItem.children)
  return children_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PInspectionItem >*
PInspectionItem::mutable_children() {
  // @@protoc_insertion_point(field_mutable_list:my_comm_proto.PInspectionItem.children)
  return &children_;
}
inline const ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PInspectionItem >&
PInspectionItem::children() const {
  // @@protoc_insertion_point(field_list:my_comm_proto.PInspectionItem.children)
  return children_;
}

// -------------------------------------------------------------------

// PInspectionItemList

// repeated .my_comm_proto.PInspectionItem list = 1;
inline int PInspectionItemList::list_size() const {
  return list_.size();
}
inline void PInspectionItemList::clear_list() {
  list_.Clear();
}
inline const ::my_comm_proto::PInspectionItem& PInspectionItemList::list(int index) const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionItemList.list)
  return list_.Get(index);
}
inline ::my_comm_proto::PInspectionItem* PInspectionItemList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PInspectionItemList.list)
  return list_.Mutable(index);
}
inline ::my_comm_proto::PInspectionItem* PInspectionItemList::add_list() {
  // @@protoc_insertion_point(field_add:my_comm_proto.PInspectionItemList.list)
  return list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PInspectionItem >*
PInspectionItemList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:my_comm_proto.PInspectionItemList.list)
  return &list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PInspectionItem >&
PInspectionItemList::list() const {
  // @@protoc_insertion_point(field_list:my_comm_proto.PInspectionItemList.list)
  return list_;
}

// -------------------------------------------------------------------

// PInspectionCategoryRow

// required int32 cID = 1;
inline bool PInspectionCategoryRow::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PInspectionCategoryRow::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PInspectionCategoryRow::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PInspectionCategoryRow::clear_cid() {
  cid_ = 0;
  clear_has_cid();
}
inline ::google::protobuf::int32 PInspectionCategoryRow::cid() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionCategoryRow.cID)
  return cid_;
}
inline void PInspectionCategoryRow::set_cid(::google::protobuf::int32 value) {
  set_has_cid();
  cid_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionCategoryRow.cID)
}

// required string desc = 2;
inline bool PInspectionCategoryRow::has_desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PInspectionCategoryRow::set_has_desc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PInspectionCategoryRow::clear_has_desc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PInspectionCategoryRow::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_desc();
}
inline const ::std::string& PInspectionCategoryRow::desc() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionCategoryRow.desc)
  return desc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionCategoryRow::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionCategoryRow.desc)
}
inline void PInspectionCategoryRow::set_desc(const char* value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PInspectionCategoryRow.desc)
}
inline void PInspectionCategoryRow::set_desc(const char* value, size_t size) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PInspectionCategoryRow.desc)
}
inline ::std::string* PInspectionCategoryRow::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PInspectionCategoryRow.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PInspectionCategoryRow::release_desc() {
  clear_has_desc();
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionCategoryRow::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PInspectionCategoryRow.desc)
}

// required int32 groupID = 3;
inline bool PInspectionCategoryRow::has_groupid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PInspectionCategoryRow::set_has_groupid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PInspectionCategoryRow::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PInspectionCategoryRow::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google::protobuf::int32 PInspectionCategoryRow::groupid() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionCategoryRow.groupID)
  return groupid_;
}
inline void PInspectionCategoryRow::set_groupid(::google::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionCategoryRow.groupID)
}

// required int32 color = 4;
inline bool PInspectionCategoryRow::has_color() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PInspectionCategoryRow::set_has_color() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PInspectionCategoryRow::clear_has_color() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PInspectionCategoryRow::clear_color() {
  color_ = 0;
  clear_has_color();
}
inline ::google::protobuf::int32 PInspectionCategoryRow::color() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionCategoryRow.color)
  return color_;
}
inline void PInspectionCategoryRow::set_color(::google::protobuf::int32 value) {
  set_has_color();
  color_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionCategoryRow.color)
}

// optional int32 BarCodeID = 5;
inline bool PInspectionCategoryRow::has_barcodeid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PInspectionCategoryRow::set_has_barcodeid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PInspectionCategoryRow::clear_has_barcodeid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PInspectionCategoryRow::clear_barcodeid() {
  barcodeid_ = 0;
  clear_has_barcodeid();
}
inline ::google::protobuf::int32 PInspectionCategoryRow::barcodeid() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionCategoryRow.BarCodeID)
  return barcodeid_;
}
inline void PInspectionCategoryRow::set_barcodeid(::google::protobuf::int32 value) {
  set_has_barcodeid();
  barcodeid_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionCategoryRow.BarCodeID)
}

// optional string BCLoc = 6;
inline bool PInspectionCategoryRow::has_bcloc() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PInspectionCategoryRow::set_has_bcloc() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PInspectionCategoryRow::clear_has_bcloc() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PInspectionCategoryRow::clear_bcloc() {
  bcloc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bcloc();
}
inline const ::std::string& PInspectionCategoryRow::bcloc() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionCategoryRow.BCLoc)
  return bcloc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionCategoryRow::set_bcloc(const ::std::string& value) {
  set_has_bcloc();
  bcloc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionCategoryRow.BCLoc)
}
inline void PInspectionCategoryRow::set_bcloc(const char* value) {
  set_has_bcloc();
  bcloc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PInspectionCategoryRow.BCLoc)
}
inline void PInspectionCategoryRow::set_bcloc(const char* value, size_t size) {
  set_has_bcloc();
  bcloc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PInspectionCategoryRow.BCLoc)
}
inline ::std::string* PInspectionCategoryRow::mutable_bcloc() {
  set_has_bcloc();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PInspectionCategoryRow.BCLoc)
  return bcloc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PInspectionCategoryRow::release_bcloc() {
  clear_has_bcloc();
  return bcloc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionCategoryRow::set_allocated_bcloc(::std::string* bcloc) {
  if (bcloc != NULL) {
    set_has_bcloc();
  } else {
    clear_has_bcloc();
  }
  bcloc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bcloc);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PInspectionCategoryRow.BCLoc)
}

// optional .my_comm_proto.PInspectionItemList items = 7;
inline bool PInspectionCategoryRow::has_items() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PInspectionCategoryRow::set_has_items() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PInspectionCategoryRow::clear_has_items() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PInspectionCategoryRow::clear_items() {
  if (items_ != NULL) items_->::my_comm_proto::PInspectionItemList::Clear();
  clear_has_items();
}
inline const ::my_comm_proto::PInspectionItemList& PInspectionCategoryRow::items() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionCategoryRow.items)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return items_ != NULL ? *items_ : *default_instance().items_;
#else
  return items_ != NULL ? *items_ : *default_instance_->items_;
#endif
}
inline ::my_comm_proto::PInspectionItemList* PInspectionCategoryRow::mutable_items() {
  set_has_items();
  if (items_ == NULL) {
    items_ = new ::my_comm_proto::PInspectionItemList;
  }
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PInspectionCategoryRow.items)
  return items_;
}
inline ::my_comm_proto::PInspectionItemList* PInspectionCategoryRow::release_items() {
  clear_has_items();
  ::my_comm_proto::PInspectionItemList* temp = items_;
  items_ = NULL;
  return temp;
}
inline void PInspectionCategoryRow::set_allocated_items(::my_comm_proto::PInspectionItemList* items) {
  delete items_;
  items_ = items;
  if (items) {
    set_has_items();
  } else {
    clear_has_items();
  }
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PInspectionCategoryRow.items)
}

// optional int32 isChecked = 8;
inline bool PInspectionCategoryRow::has_ischecked() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PInspectionCategoryRow::set_has_ischecked() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PInspectionCategoryRow::clear_has_ischecked() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PInspectionCategoryRow::clear_ischecked() {
  ischecked_ = 0;
  clear_has_ischecked();
}
inline ::google::protobuf::int32 PInspectionCategoryRow::ischecked() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionCategoryRow.isChecked)
  return ischecked_;
}
inline void PInspectionCategoryRow::set_ischecked(::google::protobuf::int32 value) {
  set_has_ischecked();
  ischecked_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionCategoryRow.isChecked)
}

// -------------------------------------------------------------------

// PInspectionRow

// required int32 InsRID = 1;
inline bool PInspectionRow::has_insrid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PInspectionRow::set_has_insrid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PInspectionRow::clear_has_insrid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PInspectionRow::clear_insrid() {
  insrid_ = 0;
  clear_has_insrid();
}
inline ::google::protobuf::int32 PInspectionRow::insrid() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionRow.InsRID)
  return insrid_;
}
inline void PInspectionRow::set_insrid(::google::protobuf::int32 value) {
  set_has_insrid();
  insrid_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionRow.InsRID)
}

// required int64 InsTime = 2;
inline bool PInspectionRow::has_instime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PInspectionRow::set_has_instime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PInspectionRow::clear_has_instime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PInspectionRow::clear_instime() {
  instime_ = GOOGLE_LONGLONG(0);
  clear_has_instime();
}
inline ::google::protobuf::int64 PInspectionRow::instime() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionRow.InsTime)
  return instime_;
}
inline void PInspectionRow::set_instime(::google::protobuf::int64 value) {
  set_has_instime();
  instime_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionRow.InsTime)
}

// optional string EqID = 3;
inline bool PInspectionRow::has_eqid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PInspectionRow::set_has_eqid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PInspectionRow::clear_has_eqid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PInspectionRow::clear_eqid() {
  eqid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_eqid();
}
inline const ::std::string& PInspectionRow::eqid() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionRow.EqID)
  return eqid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionRow::set_eqid(const ::std::string& value) {
  set_has_eqid();
  eqid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionRow.EqID)
}
inline void PInspectionRow::set_eqid(const char* value) {
  set_has_eqid();
  eqid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PInspectionRow.EqID)
}
inline void PInspectionRow::set_eqid(const char* value, size_t size) {
  set_has_eqid();
  eqid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PInspectionRow.EqID)
}
inline ::std::string* PInspectionRow::mutable_eqid() {
  set_has_eqid();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PInspectionRow.EqID)
  return eqid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PInspectionRow::release_eqid() {
  clear_has_eqid();
  return eqid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionRow::set_allocated_eqid(::std::string* eqid) {
  if (eqid != NULL) {
    set_has_eqid();
  } else {
    clear_has_eqid();
  }
  eqid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), eqid);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PInspectionRow.EqID)
}

// optional int32 odo = 4;
inline bool PInspectionRow::has_odo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PInspectionRow::set_has_odo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PInspectionRow::clear_has_odo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PInspectionRow::clear_odo() {
  odo_ = 0;
  clear_has_odo();
}
inline ::google::protobuf::int32 PInspectionRow::odo() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionRow.odo)
  return odo_;
}
inline void PInspectionRow::set_odo(::google::protobuf::int32 value) {
  set_has_odo();
  odo_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionRow.odo)
}

// required bool Signed = 5;
inline bool PInspectionRow::has_signed_() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PInspectionRow::set_has_signed_() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PInspectionRow::clear_has_signed_() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PInspectionRow::clear_signed_() {
  signed__ = false;
  clear_has_signed_();
}
inline bool PInspectionRow::signed_() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionRow.Signed)
  return signed__;
}
inline void PInspectionRow::set_signed_(bool value) {
  set_has_signed_();
  signed__ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionRow.Signed)
}

// repeated .my_comm_proto.PInspectionItem Defects = 6;
inline int PInspectionRow::defects_size() const {
  return defects_.size();
}
inline void PInspectionRow::clear_defects() {
  defects_.Clear();
}
inline const ::my_comm_proto::PInspectionItem& PInspectionRow::defects(int index) const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionRow.Defects)
  return defects_.Get(index);
}
inline ::my_comm_proto::PInspectionItem* PInspectionRow::mutable_defects(int index) {
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PInspectionRow.Defects)
  return defects_.Mutable(index);
}
inline ::my_comm_proto::PInspectionItem* PInspectionRow::add_defects() {
  // @@protoc_insertion_point(field_add:my_comm_proto.PInspectionRow.Defects)
  return defects_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PInspectionItem >*
PInspectionRow::mutable_defects() {
  // @@protoc_insertion_point(field_mutable_list:my_comm_proto.PInspectionRow.Defects)
  return &defects_;
}
inline const ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PInspectionItem >&
PInspectionRow::defects() const {
  // @@protoc_insertion_point(field_list:my_comm_proto.PInspectionRow.Defects)
  return defects_;
}

// required string drId = 7;
inline bool PInspectionRow::has_drid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PInspectionRow::set_has_drid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PInspectionRow::clear_has_drid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PInspectionRow::clear_drid() {
  drid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_drid();
}
inline const ::std::string& PInspectionRow::drid() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionRow.drId)
  return drid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionRow::set_drid(const ::std::string& value) {
  set_has_drid();
  drid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionRow.drId)
}
inline void PInspectionRow::set_drid(const char* value) {
  set_has_drid();
  drid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PInspectionRow.drId)
}
inline void PInspectionRow::set_drid(const char* value, size_t size) {
  set_has_drid();
  drid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PInspectionRow.drId)
}
inline ::std::string* PInspectionRow::mutable_drid() {
  set_has_drid();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PInspectionRow.drId)
  return drid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PInspectionRow::release_drid() {
  clear_has_drid();
  return drid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionRow::set_allocated_drid(::std::string* drid) {
  if (drid != NULL) {
    set_has_drid();
  } else {
    clear_has_drid();
  }
  drid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), drid);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PInspectionRow.drId)
}

// optional string drName = 8;
inline bool PInspectionRow::has_drname() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PInspectionRow::set_has_drname() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PInspectionRow::clear_has_drname() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PInspectionRow::clear_drname() {
  drname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_drname();
}
inline const ::std::string& PInspectionRow::drname() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionRow.drName)
  return drname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionRow::set_drname(const ::std::string& value) {
  set_has_drname();
  drname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionRow.drName)
}
inline void PInspectionRow::set_drname(const char* value) {
  set_has_drname();
  drname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PInspectionRow.drName)
}
inline void PInspectionRow::set_drname(const char* value, size_t size) {
  set_has_drname();
  drname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PInspectionRow.drName)
}
inline ::std::string* PInspectionRow::mutable_drname() {
  set_has_drname();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PInspectionRow.drName)
  return drname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PInspectionRow::release_drname() {
  clear_has_drname();
  return drname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionRow::set_allocated_drname(::std::string* drname) {
  if (drname != NULL) {
    set_has_drname();
  } else {
    clear_has_drname();
  }
  drname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), drname);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PInspectionRow.drName)
}

// required int32 InsType = 9;
inline bool PInspectionRow::has_instype() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PInspectionRow::set_has_instype() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PInspectionRow::clear_has_instype() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PInspectionRow::clear_instype() {
  instype_ = 0;
  clear_has_instype();
}
inline ::google::protobuf::int32 PInspectionRow::instype() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionRow.InsType)
  return instype_;
}
inline void PInspectionRow::set_instype(::google::protobuf::int32 value) {
  set_has_instype();
  instype_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionRow.InsType)
}

// required string cb_cats = 10;
inline bool PInspectionRow::has_cb_cats() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PInspectionRow::set_has_cb_cats() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PInspectionRow::clear_has_cb_cats() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PInspectionRow::clear_cb_cats() {
  cb_cats_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cb_cats();
}
inline const ::std::string& PInspectionRow::cb_cats() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionRow.cb_cats)
  return cb_cats_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionRow::set_cb_cats(const ::std::string& value) {
  set_has_cb_cats();
  cb_cats_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionRow.cb_cats)
}
inline void PInspectionRow::set_cb_cats(const char* value) {
  set_has_cb_cats();
  cb_cats_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PInspectionRow.cb_cats)
}
inline void PInspectionRow::set_cb_cats(const char* value, size_t size) {
  set_has_cb_cats();
  cb_cats_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PInspectionRow.cb_cats)
}
inline ::std::string* PInspectionRow::mutable_cb_cats() {
  set_has_cb_cats();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PInspectionRow.cb_cats)
  return cb_cats_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PInspectionRow::release_cb_cats() {
  clear_has_cb_cats();
  return cb_cats_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionRow::set_allocated_cb_cats(::std::string* cb_cats) {
  if (cb_cats != NULL) {
    set_has_cb_cats();
  } else {
    clear_has_cb_cats();
  }
  cb_cats_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cb_cats);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PInspectionRow.cb_cats)
}

// optional string cb_a_cats = 11;
inline bool PInspectionRow::has_cb_a_cats() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PInspectionRow::set_has_cb_a_cats() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PInspectionRow::clear_has_cb_a_cats() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PInspectionRow::clear_cb_a_cats() {
  cb_a_cats_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cb_a_cats();
}
inline const ::std::string& PInspectionRow::cb_a_cats() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionRow.cb_a_cats)
  return cb_a_cats_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionRow::set_cb_a_cats(const ::std::string& value) {
  set_has_cb_a_cats();
  cb_a_cats_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionRow.cb_a_cats)
}
inline void PInspectionRow::set_cb_a_cats(const char* value) {
  set_has_cb_a_cats();
  cb_a_cats_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PInspectionRow.cb_a_cats)
}
inline void PInspectionRow::set_cb_a_cats(const char* value, size_t size) {
  set_has_cb_a_cats();
  cb_a_cats_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PInspectionRow.cb_a_cats)
}
inline ::std::string* PInspectionRow::mutable_cb_a_cats() {
  set_has_cb_a_cats();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PInspectionRow.cb_a_cats)
  return cb_a_cats_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PInspectionRow::release_cb_a_cats() {
  clear_has_cb_a_cats();
  return cb_a_cats_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionRow::set_allocated_cb_a_cats(::std::string* cb_a_cats) {
  if (cb_a_cats != NULL) {
    set_has_cb_a_cats();
  } else {
    clear_has_cb_a_cats();
  }
  cb_a_cats_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cb_a_cats);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PInspectionRow.cb_a_cats)
}

// required int32 BoxID = 12;
inline bool PInspectionRow::has_boxid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PInspectionRow::set_has_boxid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PInspectionRow::clear_has_boxid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PInspectionRow::clear_boxid() {
  boxid_ = 0;
  clear_has_boxid();
}
inline ::google::protobuf::int32 PInspectionRow::boxid() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionRow.BoxID)
  return boxid_;
}
inline void PInspectionRow::set_boxid(::google::protobuf::int32 value) {
  set_has_boxid();
  boxid_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionRow.BoxID)
}

// optional int32 tzOf = 13;
inline bool PInspectionRow::has_tzof() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PInspectionRow::set_has_tzof() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PInspectionRow::clear_has_tzof() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PInspectionRow::clear_tzof() {
  tzof_ = 0;
  clear_has_tzof();
}
inline ::google::protobuf::int32 PInspectionRow::tzof() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionRow.tzOf)
  return tzof_;
}
inline void PInspectionRow::set_tzof(::google::protobuf::int32 value) {
  set_has_tzof();
  tzof_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionRow.tzOf)
}

// optional float Lat = 14;
inline bool PInspectionRow::has_lat() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PInspectionRow::set_has_lat() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PInspectionRow::clear_has_lat() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PInspectionRow::clear_lat() {
  lat_ = 0;
  clear_has_lat();
}
inline float PInspectionRow::lat() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionRow.Lat)
  return lat_;
}
inline void PInspectionRow::set_lat(float value) {
  set_has_lat();
  lat_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionRow.Lat)
}

// optional float Lon = 15;
inline bool PInspectionRow::has_lon() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PInspectionRow::set_has_lon() {
  _has_bits_[0] |= 0x00004000u;
}
inline void PInspectionRow::clear_has_lon() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void PInspectionRow::clear_lon() {
  lon_ = 0;
  clear_has_lon();
}
inline float PInspectionRow::lon() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionRow.Lon)
  return lon_;
}
inline void PInspectionRow::set_lon(float value) {
  set_has_lon();
  lon_ = value;
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionRow.Lon)
}

// optional string attID = 16;
inline bool PInspectionRow::has_attid() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PInspectionRow::set_has_attid() {
  _has_bits_[0] |= 0x00008000u;
}
inline void PInspectionRow::clear_has_attid() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void PInspectionRow::clear_attid() {
  attid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attid();
}
inline const ::std::string& PInspectionRow::attid() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionRow.attID)
  return attid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionRow::set_attid(const ::std::string& value) {
  set_has_attid();
  attid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PInspectionRow.attID)
}
inline void PInspectionRow::set_attid(const char* value) {
  set_has_attid();
  attid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PInspectionRow.attID)
}
inline void PInspectionRow::set_attid(const char* value, size_t size) {
  set_has_attid();
  attid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PInspectionRow.attID)
}
inline ::std::string* PInspectionRow::mutable_attid() {
  set_has_attid();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PInspectionRow.attID)
  return attid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PInspectionRow::release_attid() {
  clear_has_attid();
  return attid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PInspectionRow::set_allocated_attid(::std::string* attid) {
  if (attid != NULL) {
    set_has_attid();
  } else {
    clear_has_attid();
  }
  attid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attid);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PInspectionRow.attID)
}

// -------------------------------------------------------------------

// PInspectionRowList

// repeated .my_comm_proto.PInspectionRow list = 1;
inline int PInspectionRowList::list_size() const {
  return list_.size();
}
inline void PInspectionRowList::clear_list() {
  list_.Clear();
}
inline const ::my_comm_proto::PInspectionRow& PInspectionRowList::list(int index) const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionRowList.list)
  return list_.Get(index);
}
inline ::my_comm_proto::PInspectionRow* PInspectionRowList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PInspectionRowList.list)
  return list_.Mutable(index);
}
inline ::my_comm_proto::PInspectionRow* PInspectionRowList::add_list() {
  // @@protoc_insertion_point(field_add:my_comm_proto.PInspectionRowList.list)
  return list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PInspectionRow >*
PInspectionRowList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:my_comm_proto.PInspectionRowList.list)
  return &list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PInspectionRow >&
PInspectionRowList::list() const {
  // @@protoc_insertion_point(field_list:my_comm_proto.PInspectionRowList.list)
  return list_;
}

// -------------------------------------------------------------------

// PInspectionCategoryRowList

// repeated .my_comm_proto.PInspectionCategoryRow list = 1;
inline int PInspectionCategoryRowList::list_size() const {
  return list_.size();
}
inline void PInspectionCategoryRowList::clear_list() {
  list_.Clear();
}
inline const ::my_comm_proto::PInspectionCategoryRow& PInspectionCategoryRowList::list(int index) const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PInspectionCategoryRowList.list)
  return list_.Get(index);
}
inline ::my_comm_proto::PInspectionCategoryRow* PInspectionCategoryRowList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PInspectionCategoryRowList.list)
  return list_.Mutable(index);
}
inline ::my_comm_proto::PInspectionCategoryRow* PInspectionCategoryRowList::add_list() {
  // @@protoc_insertion_point(field_add:my_comm_proto.PInspectionCategoryRowList.list)
  return list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PInspectionCategoryRow >*
PInspectionCategoryRowList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:my_comm_proto.PInspectionCategoryRowList.list)
  return &list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::my_comm_proto::PInspectionCategoryRow >&
PInspectionCategoryRowList::list() const {
  // @@protoc_insertion_point(field_list:my_comm_proto.PInspectionCategoryRowList.list)
  return list_;
}

// -------------------------------------------------------------------

// PRegister

// required string user = 1;
inline bool PRegister::has_user() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PRegister::set_has_user() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PRegister::clear_has_user() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PRegister::clear_user() {
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user();
}
inline const ::std::string& PRegister::user() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PRegister.user)
  return user_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PRegister::set_user(const ::std::string& value) {
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PRegister.user)
}
inline void PRegister::set_user(const char* value) {
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PRegister.user)
}
inline void PRegister::set_user(const char* value, size_t size) {
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PRegister.user)
}
inline ::std::string* PRegister::mutable_user() {
  set_has_user();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PRegister.user)
  return user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PRegister::release_user() {
  clear_has_user();
  return user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PRegister::set_allocated_user(::std::string* user) {
  if (user != NULL) {
    set_has_user();
  } else {
    clear_has_user();
  }
  user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PRegister.user)
}

// required string pass = 2;
inline bool PRegister::has_pass() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PRegister::set_has_pass() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PRegister::clear_has_pass() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PRegister::clear_pass() {
  pass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pass();
}
inline const ::std::string& PRegister::pass() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PRegister.pass)
  return pass_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PRegister::set_pass(const ::std::string& value) {
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PRegister.pass)
}
inline void PRegister::set_pass(const char* value) {
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PRegister.pass)
}
inline void PRegister::set_pass(const char* value, size_t size) {
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PRegister.pass)
}
inline ::std::string* PRegister::mutable_pass() {
  set_has_pass();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PRegister.pass)
  return pass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PRegister::release_pass() {
  clear_has_pass();
  return pass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PRegister::set_allocated_pass(::std::string* pass) {
  if (pass != NULL) {
    set_has_pass();
  } else {
    clear_has_pass();
  }
  pass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pass);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PRegister.pass)
}

// required string fname = 3;
inline bool PRegister::has_fname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PRegister::set_has_fname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PRegister::clear_has_fname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PRegister::clear_fname() {
  fname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fname();
}
inline const ::std::string& PRegister::fname() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PRegister.fname)
  return fname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PRegister::set_fname(const ::std::string& value) {
  set_has_fname();
  fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PRegister.fname)
}
inline void PRegister::set_fname(const char* value) {
  set_has_fname();
  fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PRegister.fname)
}
inline void PRegister::set_fname(const char* value, size_t size) {
  set_has_fname();
  fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PRegister.fname)
}
inline ::std::string* PRegister::mutable_fname() {
  set_has_fname();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PRegister.fname)
  return fname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PRegister::release_fname() {
  clear_has_fname();
  return fname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PRegister::set_allocated_fname(::std::string* fname) {
  if (fname != NULL) {
    set_has_fname();
  } else {
    clear_has_fname();
  }
  fname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fname);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PRegister.fname)
}

// required string email = 4;
inline bool PRegister::has_email() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PRegister::set_has_email() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PRegister::clear_has_email() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PRegister::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
inline const ::std::string& PRegister::email() const {
  // @@protoc_insertion_point(field_get:my_comm_proto.PRegister.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PRegister::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_comm_proto.PRegister.email)
}
inline void PRegister::set_email(const char* value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_comm_proto.PRegister.email)
}
inline void PRegister::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_comm_proto.PRegister.email)
}
inline ::std::string* PRegister::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:my_comm_proto.PRegister.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PRegister::release_email() {
  clear_has_email();
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PRegister::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:my_comm_proto.PRegister.email)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace my_comm_proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_my_5fcommon_5fproto_5fcomm_5flite_2eproto__INCLUDED
