// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/flcnav_odb.proto

package net.flcnav.binary;

public final class FlcnavOdb {
  private FlcnavOdb() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class FlcNavStructure extends
      com.google.protobuf.GeneratedMessage {
    // Use FlcNavStructure.newBuilder() to construct.
    private FlcNavStructure() {
      initFields();
    }
    private FlcNavStructure(boolean noInit) {}
    
    private static final FlcNavStructure defaultInstance;
    public static FlcNavStructure getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public FlcNavStructure getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavStructure_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavStructure_fieldAccessorTable;
    }
    
    // required uint32 version = 1;
    public static final int VERSION_FIELD_NUMBER = 1;
    private boolean hasVersion;
    private int version_ = 0;
    public boolean hasVersion() { return hasVersion; }
    public int getVersion() { return version_; }
    
    // required int64 dateCreated = 18;
    public static final int DATECREATED_FIELD_NUMBER = 18;
    private boolean hasDateCreated;
    private long dateCreated_ = 0L;
    public boolean hasDateCreated() { return hasDateCreated; }
    public long getDateCreated() { return dateCreated_; }
    
    // repeated .FlcNavAddressIndex addressIndex = 7;
    public static final int ADDRESSINDEX_FIELD_NUMBER = 7;
    private java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex> addressIndex_ =
      java.util.Collections.emptyList();
    public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex> getAddressIndexList() {
      return addressIndex_;
    }
    public int getAddressIndexCount() { return addressIndex_.size(); }
    public net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex getAddressIndex(int index) {
      return addressIndex_.get(index);
    }
    
    // repeated .FlcNavTransportIndex transportIndex = 4;
    public static final int TRANSPORTINDEX_FIELD_NUMBER = 4;
    private java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex> transportIndex_ =
      java.util.Collections.emptyList();
    public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex> getTransportIndexList() {
      return transportIndex_;
    }
    public int getTransportIndexCount() { return transportIndex_.size(); }
    public net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex getTransportIndex(int index) {
      return transportIndex_.get(index);
    }
    
    // repeated .FlcNavPoiIndex poiIndex = 8;
    public static final int POIINDEX_FIELD_NUMBER = 8;
    private java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex> poiIndex_ =
      java.util.Collections.emptyList();
    public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex> getPoiIndexList() {
      return poiIndex_;
    }
    public int getPoiIndexCount() { return poiIndex_.size(); }
    public net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex getPoiIndex(int index) {
      return poiIndex_.get(index);
    }
    
    // repeated .FlcNavMapIndex mapIndex = 6;
    public static final int MAPINDEX_FIELD_NUMBER = 6;
    private java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex> mapIndex_ =
      java.util.Collections.emptyList();
    public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex> getMapIndexList() {
      return mapIndex_;
    }
    public int getMapIndexCount() { return mapIndex_.size(); }
    public net.flcnav.binary.FlcnavOdb.FlcNavMapIndex getMapIndex(int index) {
      return mapIndex_.get(index);
    }
    
    // repeated .FlcNavRoutingIndex routingIndex = 9;
    public static final int ROUTINGINDEX_FIELD_NUMBER = 9;
    private java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex> routingIndex_ =
      java.util.Collections.emptyList();
    public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex> getRoutingIndexList() {
      return routingIndex_;
    }
    public int getRoutingIndexCount() { return routingIndex_.size(); }
    public net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex getRoutingIndex(int index) {
      return routingIndex_.get(index);
    }
    
    // required uint32 versionConfirm = 32;
    public static final int VERSIONCONFIRM_FIELD_NUMBER = 32;
    private boolean hasVersionConfirm;
    private int versionConfirm_ = 0;
    public boolean hasVersionConfirm() { return hasVersionConfirm; }
    public int getVersionConfirm() { return versionConfirm_; }
    
    private void initFields() {
    }
    @Override
	public final boolean isInitialized() {
      if (!hasVersion) return false;
      if (!hasDateCreated) return false;
      if (!hasVersionConfirm) return false;
      for (net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex element : getAddressIndexList()) {
        if (!element.isInitialized()) return false;
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex element : getTransportIndexList()) {
        if (!element.isInitialized()) return false;
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex element : getPoiIndexList()) {
        if (!element.isInitialized()) return false;
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavMapIndex element : getMapIndexList()) {
        if (!element.isInitialized()) return false;
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex element : getRoutingIndexList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasVersion()) {
        output.writeUInt32(1, getVersion());
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex element : getTransportIndexList()) {
        output.writeMessage(4, element);
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavMapIndex element : getMapIndexList()) {
        output.writeMessage(6, element);
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex element : getAddressIndexList()) {
        output.writeMessage(7, element);
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex element : getPoiIndexList()) {
        output.writeMessage(8, element);
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex element : getRoutingIndexList()) {
        output.writeMessage(9, element);
      }
      if (hasDateCreated()) {
        output.writeInt64(18, getDateCreated());
      }
      if (hasVersionConfirm()) {
        output.writeUInt32(32, getVersionConfirm());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getVersion());
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex element : getTransportIndexList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavMapIndex element : getMapIndexList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, element);
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex element : getAddressIndexList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, element);
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex element : getPoiIndexList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, element);
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex element : getRoutingIndexList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, element);
      }
      if (hasDateCreated()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(18, getDateCreated());
      }
      if (hasVersionConfirm()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(32, getVersionConfirm());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.FlcNavStructure parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavStructure parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavStructure parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavStructure parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavStructure parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavStructure parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavStructure parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavStructure parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavStructure parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavStructure parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.FlcNavStructure prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.FlcNavStructure result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.FlcNavStructure.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.FlcNavStructure();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.FlcNavStructure internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.FlcNavStructure();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavStructure.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavStructure getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavStructure.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavStructure build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.FlcNavStructure buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavStructure buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.addressIndex_ != java.util.Collections.EMPTY_LIST) {
          result.addressIndex_ =
            java.util.Collections.unmodifiableList(result.addressIndex_);
        }
        if (result.transportIndex_ != java.util.Collections.EMPTY_LIST) {
          result.transportIndex_ =
            java.util.Collections.unmodifiableList(result.transportIndex_);
        }
        if (result.poiIndex_ != java.util.Collections.EMPTY_LIST) {
          result.poiIndex_ =
            java.util.Collections.unmodifiableList(result.poiIndex_);
        }
        if (result.mapIndex_ != java.util.Collections.EMPTY_LIST) {
          result.mapIndex_ =
            java.util.Collections.unmodifiableList(result.mapIndex_);
        }
        if (result.routingIndex_ != java.util.Collections.EMPTY_LIST) {
          result.routingIndex_ =
            java.util.Collections.unmodifiableList(result.routingIndex_);
        }
        net.flcnav.binary.FlcnavOdb.FlcNavStructure returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.FlcNavStructure) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.FlcNavStructure)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.FlcNavStructure other) {
        if (other == net.flcnav.binary.FlcnavOdb.FlcNavStructure.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasDateCreated()) {
          setDateCreated(other.getDateCreated());
        }
        if (!other.addressIndex_.isEmpty()) {
          if (result.addressIndex_.isEmpty()) {
            result.addressIndex_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex>();
          }
          result.addressIndex_.addAll(other.addressIndex_);
        }
        if (!other.transportIndex_.isEmpty()) {
          if (result.transportIndex_.isEmpty()) {
            result.transportIndex_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex>();
          }
          result.transportIndex_.addAll(other.transportIndex_);
        }
        if (!other.poiIndex_.isEmpty()) {
          if (result.poiIndex_.isEmpty()) {
            result.poiIndex_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex>();
          }
          result.poiIndex_.addAll(other.poiIndex_);
        }
        if (!other.mapIndex_.isEmpty()) {
          if (result.mapIndex_.isEmpty()) {
            result.mapIndex_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex>();
          }
          result.mapIndex_.addAll(other.mapIndex_);
        }
        if (!other.routingIndex_.isEmpty()) {
          if (result.routingIndex_.isEmpty()) {
            result.routingIndex_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex>();
          }
          result.routingIndex_.addAll(other.routingIndex_);
        }
        if (other.hasVersionConfirm()) {
          setVersionConfirm(other.getVersionConfirm());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setVersion(input.readUInt32());
              break;
            }
            case 34: {
              net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex.Builder subBuilder = net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addTransportIndex(subBuilder.buildPartial());
              break;
            }
            case 50: {
              net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.Builder subBuilder = net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addMapIndex(subBuilder.buildPartial());
              break;
            }
            case 58: {
              net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.Builder subBuilder = net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAddressIndex(subBuilder.buildPartial());
              break;
            }
            case 66: {
              net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex.Builder subBuilder = net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addPoiIndex(subBuilder.buildPartial());
              break;
            }
            case 74: {
              net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.Builder subBuilder = net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRoutingIndex(subBuilder.buildPartial());
              break;
            }
            case 144: {
              setDateCreated(input.readInt64());
              break;
            }
            case 256: {
              setVersionConfirm(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // required uint32 version = 1;
      public boolean hasVersion() {
        return result.hasVersion();
      }
      public int getVersion() {
        return result.getVersion();
      }
      public Builder setVersion(int value) {
        result.hasVersion = true;
        result.version_ = value;
        return this;
      }
      public Builder clearVersion() {
        result.hasVersion = false;
        result.version_ = 0;
        return this;
      }
      
      // required int64 dateCreated = 18;
      public boolean hasDateCreated() {
        return result.hasDateCreated();
      }
      public long getDateCreated() {
        return result.getDateCreated();
      }
      public Builder setDateCreated(long value) {
        result.hasDateCreated = true;
        result.dateCreated_ = value;
        return this;
      }
      public Builder clearDateCreated() {
        result.hasDateCreated = false;
        result.dateCreated_ = 0L;
        return this;
      }
      
      // repeated .FlcNavAddressIndex addressIndex = 7;
      public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex> getAddressIndexList() {
        return java.util.Collections.unmodifiableList(result.addressIndex_);
      }
      public int getAddressIndexCount() {
        return result.getAddressIndexCount();
      }
      public net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex getAddressIndex(int index) {
        return result.getAddressIndex(index);
      }
      public Builder setAddressIndex(int index, net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.addressIndex_.set(index, value);
        return this;
      }
      public Builder setAddressIndex(int index, net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.Builder builderForValue) {
        result.addressIndex_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAddressIndex(net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.addressIndex_.isEmpty()) {
          result.addressIndex_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex>();
        }
        result.addressIndex_.add(value);
        return this;
      }
      public Builder addAddressIndex(net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.Builder builderForValue) {
        if (result.addressIndex_.isEmpty()) {
          result.addressIndex_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex>();
        }
        result.addressIndex_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAddressIndex(
          java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex> values) {
        if (result.addressIndex_.isEmpty()) {
          result.addressIndex_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex>();
        }
        super.addAll(values, result.addressIndex_);
        return this;
      }
      public Builder clearAddressIndex() {
        result.addressIndex_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .FlcNavTransportIndex transportIndex = 4;
      public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex> getTransportIndexList() {
        return java.util.Collections.unmodifiableList(result.transportIndex_);
      }
      public int getTransportIndexCount() {
        return result.getTransportIndexCount();
      }
      public net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex getTransportIndex(int index) {
        return result.getTransportIndex(index);
      }
      public Builder setTransportIndex(int index, net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.transportIndex_.set(index, value);
        return this;
      }
      public Builder setTransportIndex(int index, net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex.Builder builderForValue) {
        result.transportIndex_.set(index, builderForValue.build());
        return this;
      }
      public Builder addTransportIndex(net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.transportIndex_.isEmpty()) {
          result.transportIndex_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex>();
        }
        result.transportIndex_.add(value);
        return this;
      }
      public Builder addTransportIndex(net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex.Builder builderForValue) {
        if (result.transportIndex_.isEmpty()) {
          result.transportIndex_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex>();
        }
        result.transportIndex_.add(builderForValue.build());
        return this;
      }
      public Builder addAllTransportIndex(
          java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex> values) {
        if (result.transportIndex_.isEmpty()) {
          result.transportIndex_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex>();
        }
        super.addAll(values, result.transportIndex_);
        return this;
      }
      public Builder clearTransportIndex() {
        result.transportIndex_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .FlcNavPoiIndex poiIndex = 8;
      public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex> getPoiIndexList() {
        return java.util.Collections.unmodifiableList(result.poiIndex_);
      }
      public int getPoiIndexCount() {
        return result.getPoiIndexCount();
      }
      public net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex getPoiIndex(int index) {
        return result.getPoiIndex(index);
      }
      public Builder setPoiIndex(int index, net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.poiIndex_.set(index, value);
        return this;
      }
      public Builder setPoiIndex(int index, net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex.Builder builderForValue) {
        result.poiIndex_.set(index, builderForValue.build());
        return this;
      }
      public Builder addPoiIndex(net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.poiIndex_.isEmpty()) {
          result.poiIndex_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex>();
        }
        result.poiIndex_.add(value);
        return this;
      }
      public Builder addPoiIndex(net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex.Builder builderForValue) {
        if (result.poiIndex_.isEmpty()) {
          result.poiIndex_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex>();
        }
        result.poiIndex_.add(builderForValue.build());
        return this;
      }
      public Builder addAllPoiIndex(
          java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex> values) {
        if (result.poiIndex_.isEmpty()) {
          result.poiIndex_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex>();
        }
        super.addAll(values, result.poiIndex_);
        return this;
      }
      public Builder clearPoiIndex() {
        result.poiIndex_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .FlcNavMapIndex mapIndex = 6;
      public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex> getMapIndexList() {
        return java.util.Collections.unmodifiableList(result.mapIndex_);
      }
      public int getMapIndexCount() {
        return result.getMapIndexCount();
      }
      public net.flcnav.binary.FlcnavOdb.FlcNavMapIndex getMapIndex(int index) {
        return result.getMapIndex(index);
      }
      public Builder setMapIndex(int index, net.flcnav.binary.FlcnavOdb.FlcNavMapIndex value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.mapIndex_.set(index, value);
        return this;
      }
      public Builder setMapIndex(int index, net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.Builder builderForValue) {
        result.mapIndex_.set(index, builderForValue.build());
        return this;
      }
      public Builder addMapIndex(net.flcnav.binary.FlcnavOdb.FlcNavMapIndex value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.mapIndex_.isEmpty()) {
          result.mapIndex_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex>();
        }
        result.mapIndex_.add(value);
        return this;
      }
      public Builder addMapIndex(net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.Builder builderForValue) {
        if (result.mapIndex_.isEmpty()) {
          result.mapIndex_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex>();
        }
        result.mapIndex_.add(builderForValue.build());
        return this;
      }
      public Builder addAllMapIndex(
          java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.FlcNavMapIndex> values) {
        if (result.mapIndex_.isEmpty()) {
          result.mapIndex_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex>();
        }
        super.addAll(values, result.mapIndex_);
        return this;
      }
      public Builder clearMapIndex() {
        result.mapIndex_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .FlcNavRoutingIndex routingIndex = 9;
      public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex> getRoutingIndexList() {
        return java.util.Collections.unmodifiableList(result.routingIndex_);
      }
      public int getRoutingIndexCount() {
        return result.getRoutingIndexCount();
      }
      public net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex getRoutingIndex(int index) {
        return result.getRoutingIndex(index);
      }
      public Builder setRoutingIndex(int index, net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.routingIndex_.set(index, value);
        return this;
      }
      public Builder setRoutingIndex(int index, net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.Builder builderForValue) {
        result.routingIndex_.set(index, builderForValue.build());
        return this;
      }
      public Builder addRoutingIndex(net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.routingIndex_.isEmpty()) {
          result.routingIndex_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex>();
        }
        result.routingIndex_.add(value);
        return this;
      }
      public Builder addRoutingIndex(net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.Builder builderForValue) {
        if (result.routingIndex_.isEmpty()) {
          result.routingIndex_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex>();
        }
        result.routingIndex_.add(builderForValue.build());
        return this;
      }
      public Builder addAllRoutingIndex(
          java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex> values) {
        if (result.routingIndex_.isEmpty()) {
          result.routingIndex_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex>();
        }
        super.addAll(values, result.routingIndex_);
        return this;
      }
      public Builder clearRoutingIndex() {
        result.routingIndex_ = java.util.Collections.emptyList();
        return this;
      }
      
      // required uint32 versionConfirm = 32;
      public boolean hasVersionConfirm() {
        return result.hasVersionConfirm();
      }
      public int getVersionConfirm() {
        return result.getVersionConfirm();
      }
      public Builder setVersionConfirm(int value) {
        result.hasVersionConfirm = true;
        result.versionConfirm_ = value;
        return this;
      }
      public Builder clearVersionConfirm() {
        result.hasVersionConfirm = false;
        result.versionConfirm_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:FlcNavStructure)
    }
    
    static {
      defaultInstance = new FlcNavStructure(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FlcNavStructure)
  }
  
  public static final class FlcNavTileBox extends
      com.google.protobuf.GeneratedMessage {
    // Use FlcNavTileBox.newBuilder() to construct.
    private FlcNavTileBox() {
      initFields();
    }
    private FlcNavTileBox(boolean noInit) {}
    
    private static final FlcNavTileBox defaultInstance;
    public static FlcNavTileBox getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public FlcNavTileBox getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavTileBox_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavTileBox_fieldAccessorTable;
    }
    
    // required uint32 left = 1;
    public static final int LEFT_FIELD_NUMBER = 1;
    private boolean hasLeft;
    private int left_ = 0;
    public boolean hasLeft() { return hasLeft; }
    public int getLeft() { return left_; }
    
    // required uint32 right = 2;
    public static final int RIGHT_FIELD_NUMBER = 2;
    private boolean hasRight;
    private int right_ = 0;
    public boolean hasRight() { return hasRight; }
    public int getRight() { return right_; }
    
    // required uint32 top = 3;
    public static final int TOP_FIELD_NUMBER = 3;
    private boolean hasTop;
    private int top_ = 0;
    public boolean hasTop() { return hasTop; }
    public int getTop() { return top_; }
    
    // required uint32 bottom = 4;
    public static final int BOTTOM_FIELD_NUMBER = 4;
    private boolean hasBottom;
    private int bottom_ = 0;
    public boolean hasBottom() { return hasBottom; }
    public int getBottom() { return bottom_; }
    
    private void initFields() {
    }
    @Override
	public final boolean isInitialized() {
      if (!hasLeft) return false;
      if (!hasRight) return false;
      if (!hasTop) return false;
      if (!hasBottom) return false;
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasLeft()) {
        output.writeUInt32(1, getLeft());
      }
      if (hasRight()) {
        output.writeUInt32(2, getRight());
      }
      if (hasTop()) {
        output.writeUInt32(3, getTop());
      }
      if (hasBottom()) {
        output.writeUInt32(4, getBottom());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasLeft()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getLeft());
      }
      if (hasRight()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getRight());
      }
      if (hasTop()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getTop());
      }
      if (hasBottom()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, getBottom());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.FlcNavTileBox parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavTileBox parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavTileBox parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavTileBox parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavTileBox parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavTileBox parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavTileBox parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavTileBox parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavTileBox parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavTileBox parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.FlcNavTileBox prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.FlcNavTileBox result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.FlcNavTileBox.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.FlcNavTileBox();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.FlcNavTileBox internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.FlcNavTileBox();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavTileBox.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavTileBox getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavTileBox.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavTileBox build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.FlcNavTileBox buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavTileBox buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        net.flcnav.binary.FlcnavOdb.FlcNavTileBox returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.FlcNavTileBox) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.FlcNavTileBox)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.FlcNavTileBox other) {
        if (other == net.flcnav.binary.FlcnavOdb.FlcNavTileBox.getDefaultInstance()) return this;
        if (other.hasLeft()) {
          setLeft(other.getLeft());
        }
        if (other.hasRight()) {
          setRight(other.getRight());
        }
        if (other.hasTop()) {
          setTop(other.getTop());
        }
        if (other.hasBottom()) {
          setBottom(other.getBottom());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setLeft(input.readUInt32());
              break;
            }
            case 16: {
              setRight(input.readUInt32());
              break;
            }
            case 24: {
              setTop(input.readUInt32());
              break;
            }
            case 32: {
              setBottom(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // required uint32 left = 1;
      public boolean hasLeft() {
        return result.hasLeft();
      }
      public int getLeft() {
        return result.getLeft();
      }
      public Builder setLeft(int value) {
        result.hasLeft = true;
        result.left_ = value;
        return this;
      }
      public Builder clearLeft() {
        result.hasLeft = false;
        result.left_ = 0;
        return this;
      }
      
      // required uint32 right = 2;
      public boolean hasRight() {
        return result.hasRight();
      }
      public int getRight() {
        return result.getRight();
      }
      public Builder setRight(int value) {
        result.hasRight = true;
        result.right_ = value;
        return this;
      }
      public Builder clearRight() {
        result.hasRight = false;
        result.right_ = 0;
        return this;
      }
      
      // required uint32 top = 3;
      public boolean hasTop() {
        return result.hasTop();
      }
      public int getTop() {
        return result.getTop();
      }
      public Builder setTop(int value) {
        result.hasTop = true;
        result.top_ = value;
        return this;
      }
      public Builder clearTop() {
        result.hasTop = false;
        result.top_ = 0;
        return this;
      }
      
      // required uint32 bottom = 4;
      public boolean hasBottom() {
        return result.hasBottom();
      }
      public int getBottom() {
        return result.getBottom();
      }
      public Builder setBottom(int value) {
        result.hasBottom = true;
        result.bottom_ = value;
        return this;
      }
      public Builder clearBottom() {
        result.hasBottom = false;
        result.bottom_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:FlcNavTileBox)
    }
    
    static {
      defaultInstance = new FlcNavTileBox(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FlcNavTileBox)
  }
  
  public static final class StringTable extends
      com.google.protobuf.GeneratedMessage {
    // Use StringTable.newBuilder() to construct.
    private StringTable() {
      initFields();
    }
    private StringTable(boolean noInit) {}
    
    private static final StringTable defaultInstance;
    public static StringTable getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public StringTable getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_StringTable_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_StringTable_fieldAccessorTable;
    }
    
    // repeated string s = 1;
    public static final int S_FIELD_NUMBER = 1;
    private java.util.List<java.lang.String> s_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getSList() {
      return s_;
    }
    public int getSCount() { return s_.size(); }
    public java.lang.String getS(int index) {
      return s_.get(index);
    }
    
    private void initFields() {
    }
    @Override
	public final boolean isInitialized() {
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (java.lang.String element : getSList()) {
        output.writeString(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (java.lang.String element : getSList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getSList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.StringTable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.StringTable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.StringTable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.StringTable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.StringTable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.StringTable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.StringTable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.StringTable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.StringTable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.StringTable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.StringTable prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.StringTable result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.StringTable.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.StringTable();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.StringTable internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.StringTable();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.StringTable.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.StringTable getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.StringTable.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.StringTable build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.StringTable buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.StringTable buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.s_ != java.util.Collections.EMPTY_LIST) {
          result.s_ =
            java.util.Collections.unmodifiableList(result.s_);
        }
        net.flcnav.binary.FlcnavOdb.StringTable returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.StringTable) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.StringTable)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.StringTable other) {
        if (other == net.flcnav.binary.FlcnavOdb.StringTable.getDefaultInstance()) return this;
        if (!other.s_.isEmpty()) {
          if (result.s_.isEmpty()) {
            result.s_ = new java.util.ArrayList<java.lang.String>();
          }
          result.s_.addAll(other.s_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              addS(input.readString());
              break;
            }
          }
        }
      }
      
      
      // repeated string s = 1;
      public java.util.List<java.lang.String> getSList() {
        return java.util.Collections.unmodifiableList(result.s_);
      }
      public int getSCount() {
        return result.getSCount();
      }
      public java.lang.String getS(int index) {
        return result.getS(index);
      }
      public Builder setS(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.s_.set(index, value);
        return this;
      }
      public Builder addS(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.s_.isEmpty()) {
          result.s_ = new java.util.ArrayList<java.lang.String>();
        }
        result.s_.add(value);
        return this;
      }
      public Builder addAllS(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.s_.isEmpty()) {
          result.s_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.s_);
        return this;
      }
      public Builder clearS() {
        result.s_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:StringTable)
    }
    
    static {
      defaultInstance = new StringTable(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:StringTable)
  }
  
  public static final class IndexedStringTable extends
      com.google.protobuf.GeneratedMessage {
    // Use IndexedStringTable.newBuilder() to construct.
    private IndexedStringTable() {
      initFields();
    }
    private IndexedStringTable(boolean noInit) {}
    
    private static final IndexedStringTable defaultInstance;
    public static IndexedStringTable getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public IndexedStringTable getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_IndexedStringTable_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_IndexedStringTable_fieldAccessorTable;
    }
    
    // optional string prefix = 1;
    public static final int PREFIX_FIELD_NUMBER = 1;
    private boolean hasPrefix;
    private java.lang.String prefix_ = "";
    public boolean hasPrefix() { return hasPrefix; }
    public java.lang.String getPrefix() { return prefix_; }
    
    // repeated string key = 3;
    public static final int KEY_FIELD_NUMBER = 3;
    private java.util.List<java.lang.String> key_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getKeyList() {
      return key_;
    }
    public int getKeyCount() { return key_.size(); }
    public java.lang.String getKey(int index) {
      return key_.get(index);
    }
    
    // repeated fixed32 val = 4;
    public static final int VAL_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> val_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getValList() {
      return val_;
    }
    public int getValCount() { return val_.size(); }
    public int getVal(int index) {
      return val_.get(index);
    }
    
    // repeated .IndexedStringTable subtables = 5;
    public static final int SUBTABLES_FIELD_NUMBER = 5;
    private java.util.List<net.flcnav.binary.FlcnavOdb.IndexedStringTable> subtables_ =
      java.util.Collections.emptyList();
    public java.util.List<net.flcnav.binary.FlcnavOdb.IndexedStringTable> getSubtablesList() {
      return subtables_;
    }
    public int getSubtablesCount() { return subtables_.size(); }
    public net.flcnav.binary.FlcnavOdb.IndexedStringTable getSubtables(int index) {
      return subtables_.get(index);
    }
    
    private void initFields() {
    }
    @Override
	public final boolean isInitialized() {
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasPrefix()) {
        output.writeString(1, getPrefix());
      }
      for (java.lang.String element : getKeyList()) {
        output.writeString(3, element);
      }
      for (int element : getValList()) {
        output.writeFixed32(4, element);
      }
      for (net.flcnav.binary.FlcnavOdb.IndexedStringTable element : getSubtablesList()) {
        output.writeMessage(5, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasPrefix()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getPrefix());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getKeyList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getKeyList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getValList().size();
        size += dataSize;
        size += 1 * getValList().size();
      }
      for (net.flcnav.binary.FlcnavOdb.IndexedStringTable element : getSubtablesList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.IndexedStringTable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.IndexedStringTable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.IndexedStringTable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.IndexedStringTable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.IndexedStringTable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.IndexedStringTable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.IndexedStringTable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.IndexedStringTable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.IndexedStringTable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.IndexedStringTable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.IndexedStringTable prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.IndexedStringTable result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.IndexedStringTable.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.IndexedStringTable();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.IndexedStringTable internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.IndexedStringTable();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.IndexedStringTable.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.IndexedStringTable getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.IndexedStringTable.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.IndexedStringTable build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.IndexedStringTable buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.IndexedStringTable buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.key_ != java.util.Collections.EMPTY_LIST) {
          result.key_ =
            java.util.Collections.unmodifiableList(result.key_);
        }
        if (result.val_ != java.util.Collections.EMPTY_LIST) {
          result.val_ =
            java.util.Collections.unmodifiableList(result.val_);
        }
        if (result.subtables_ != java.util.Collections.EMPTY_LIST) {
          result.subtables_ =
            java.util.Collections.unmodifiableList(result.subtables_);
        }
        net.flcnav.binary.FlcnavOdb.IndexedStringTable returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.IndexedStringTable) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.IndexedStringTable)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.IndexedStringTable other) {
        if (other == net.flcnav.binary.FlcnavOdb.IndexedStringTable.getDefaultInstance()) return this;
        if (other.hasPrefix()) {
          setPrefix(other.getPrefix());
        }
        if (!other.key_.isEmpty()) {
          if (result.key_.isEmpty()) {
            result.key_ = new java.util.ArrayList<java.lang.String>();
          }
          result.key_.addAll(other.key_);
        }
        if (!other.val_.isEmpty()) {
          if (result.val_.isEmpty()) {
            result.val_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.val_.addAll(other.val_);
        }
        if (!other.subtables_.isEmpty()) {
          if (result.subtables_.isEmpty()) {
            result.subtables_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.IndexedStringTable>();
          }
          result.subtables_.addAll(other.subtables_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setPrefix(input.readString());
              break;
            }
            case 26: {
              addKey(input.readString());
              break;
            }
            case 37: {
              addVal(input.readFixed32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addVal(input.readFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 42: {
              net.flcnav.binary.FlcnavOdb.IndexedStringTable.Builder subBuilder = net.flcnav.binary.FlcnavOdb.IndexedStringTable.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addSubtables(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional string prefix = 1;
      public boolean hasPrefix() {
        return result.hasPrefix();
      }
      public java.lang.String getPrefix() {
        return result.getPrefix();
      }
      public Builder setPrefix(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPrefix = true;
        result.prefix_ = value;
        return this;
      }
      public Builder clearPrefix() {
        result.hasPrefix = false;
        result.prefix_ = getDefaultInstance().getPrefix();
        return this;
      }
      
      // repeated string key = 3;
      public java.util.List<java.lang.String> getKeyList() {
        return java.util.Collections.unmodifiableList(result.key_);
      }
      public int getKeyCount() {
        return result.getKeyCount();
      }
      public java.lang.String getKey(int index) {
        return result.getKey(index);
      }
      public Builder setKey(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.key_.set(index, value);
        return this;
      }
      public Builder addKey(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.key_.isEmpty()) {
          result.key_ = new java.util.ArrayList<java.lang.String>();
        }
        result.key_.add(value);
        return this;
      }
      public Builder addAllKey(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.key_.isEmpty()) {
          result.key_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.key_);
        return this;
      }
      public Builder clearKey() {
        result.key_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated fixed32 val = 4;
      public java.util.List<java.lang.Integer> getValList() {
        return java.util.Collections.unmodifiableList(result.val_);
      }
      public int getValCount() {
        return result.getValCount();
      }
      public int getVal(int index) {
        return result.getVal(index);
      }
      public Builder setVal(int index, int value) {
        result.val_.set(index, value);
        return this;
      }
      public Builder addVal(int value) {
        if (result.val_.isEmpty()) {
          result.val_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.val_.add(value);
        return this;
      }
      public Builder addAllVal(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.val_.isEmpty()) {
          result.val_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.val_);
        return this;
      }
      public Builder clearVal() {
        result.val_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .IndexedStringTable subtables = 5;
      public java.util.List<net.flcnav.binary.FlcnavOdb.IndexedStringTable> getSubtablesList() {
        return java.util.Collections.unmodifiableList(result.subtables_);
      }
      public int getSubtablesCount() {
        return result.getSubtablesCount();
      }
      public net.flcnav.binary.FlcnavOdb.IndexedStringTable getSubtables(int index) {
        return result.getSubtables(index);
      }
      public Builder setSubtables(int index, net.flcnav.binary.FlcnavOdb.IndexedStringTable value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.subtables_.set(index, value);
        return this;
      }
      public Builder setSubtables(int index, net.flcnav.binary.FlcnavOdb.IndexedStringTable.Builder builderForValue) {
        result.subtables_.set(index, builderForValue.build());
        return this;
      }
      public Builder addSubtables(net.flcnav.binary.FlcnavOdb.IndexedStringTable value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.subtables_.isEmpty()) {
          result.subtables_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.IndexedStringTable>();
        }
        result.subtables_.add(value);
        return this;
      }
      public Builder addSubtables(net.flcnav.binary.FlcnavOdb.IndexedStringTable.Builder builderForValue) {
        if (result.subtables_.isEmpty()) {
          result.subtables_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.IndexedStringTable>();
        }
        result.subtables_.add(builderForValue.build());
        return this;
      }
      public Builder addAllSubtables(
          java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.IndexedStringTable> values) {
        if (result.subtables_.isEmpty()) {
          result.subtables_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.IndexedStringTable>();
        }
        super.addAll(values, result.subtables_);
        return this;
      }
      public Builder clearSubtables() {
        result.subtables_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:IndexedStringTable)
    }
    
    static {
      defaultInstance = new IndexedStringTable(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:IndexedStringTable)
  }
  
  public static final class FlcNavMapIndex extends
      com.google.protobuf.GeneratedMessage {
    // Use FlcNavMapIndex.newBuilder() to construct.
    private FlcNavMapIndex() {
      initFields();
    }
    private FlcNavMapIndex(boolean noInit) {}
    
    private static final FlcNavMapIndex defaultInstance;
    public static FlcNavMapIndex getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public FlcNavMapIndex getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavMapIndex_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavMapIndex_fieldAccessorTable;
    }
    
    public static final class MapEncodingRule extends
        com.google.protobuf.GeneratedMessage {
      // Use MapEncodingRule.newBuilder() to construct.
      private MapEncodingRule() {
        initFields();
      }
      private MapEncodingRule(boolean noInit) {}
      
      private static final MapEncodingRule defaultInstance;
      public static MapEncodingRule getDefaultInstance() {
        return defaultInstance;
      }
      
      @Override
	public MapEncodingRule getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavMapIndex_MapEncodingRule_descriptor;
      }
      
      @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavMapIndex_MapEncodingRule_fieldAccessorTable;
      }
      
      // required string tag = 3;
      public static final int TAG_FIELD_NUMBER = 3;
      private boolean hasTag;
      private java.lang.String tag_ = "";
      public boolean hasTag() { return hasTag; }
      public java.lang.String getTag() { return tag_; }
      
      // optional string value = 5;
      public static final int VALUE_FIELD_NUMBER = 5;
      private boolean hasValue;
      private java.lang.String value_ = "";
      public boolean hasValue() { return hasValue; }
      public java.lang.String getValue() { return value_; }
      
      // optional uint32 id = 7;
      public static final int ID_FIELD_NUMBER = 7;
      private boolean hasId;
      private int id_ = 0;
      public boolean hasId() { return hasId; }
      public int getId() { return id_; }
      
      // optional uint32 minZoom = 9;
      public static final int MINZOOM_FIELD_NUMBER = 9;
      private boolean hasMinZoom;
      private int minZoom_ = 0;
      public boolean hasMinZoom() { return hasMinZoom; }
      public int getMinZoom() { return minZoom_; }
      
      // optional uint32 type = 10;
      public static final int TYPE_FIELD_NUMBER = 10;
      private boolean hasType;
      private int type_ = 0;
      public boolean hasType() { return hasType; }
      public int getType() { return type_; }
      
      private void initFields() {
      }
      @Override
	public final boolean isInitialized() {
        if (!hasTag) return false;
        return true;
      }
      
      @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasTag()) {
          output.writeString(3, getTag());
        }
        if (hasValue()) {
          output.writeString(5, getValue());
        }
        if (hasId()) {
          output.writeUInt32(7, getId());
        }
        if (hasMinZoom()) {
          output.writeUInt32(9, getMinZoom());
        }
        if (hasType()) {
          output.writeUInt32(10, getType());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      @Override
	public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasTag()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(3, getTag());
        }
        if (hasValue()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(5, getValue());
        }
        if (hasId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(7, getId());
        }
        if (hasMinZoom()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(9, getMinZoom());
        }
        if (hasType()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(10, getType());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      @Override
	public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      @Override
	public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule result;
        
        // Construct using net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule();
          return builder;
        }
        
        @Override
		protected net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule internalGetResult() {
          return result;
        }
        
        @Override
		public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule();
          return this;
        }
        
        @Override
		public Builder clone() {
          return create().mergeFrom(result);
        }
        
        @Override
		public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule.getDescriptor();
        }
        
        @Override
		public net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule getDefaultInstanceForType() {
          return net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule.getDefaultInstance();
        }
        
        @Override
		public boolean isInitialized() {
          return result.isInitialized();
        }
        @Override
		public net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        @Override
		public net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule returnMe = result;
          result = null;
          return returnMe;
        }
        
        @Override
		public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule) {
            return mergeFrom((net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule other) {
          if (other == net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule.getDefaultInstance()) return this;
          if (other.hasTag()) {
            setTag(other.getTag());
          }
          if (other.hasValue()) {
            setValue(other.getValue());
          }
          if (other.hasId()) {
            setId(other.getId());
          }
          if (other.hasMinZoom()) {
            setMinZoom(other.getMinZoom());
          }
          if (other.hasType()) {
            setType(other.getType());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        @Override
		public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 26: {
                setTag(input.readString());
                break;
              }
              case 42: {
                setValue(input.readString());
                break;
              }
              case 56: {
                setId(input.readUInt32());
                break;
              }
              case 72: {
                setMinZoom(input.readUInt32());
                break;
              }
              case 80: {
                setType(input.readUInt32());
                break;
              }
            }
          }
        }
        
        
        // required string tag = 3;
        public boolean hasTag() {
          return result.hasTag();
        }
        public java.lang.String getTag() {
          return result.getTag();
        }
        public Builder setTag(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasTag = true;
          result.tag_ = value;
          return this;
        }
        public Builder clearTag() {
          result.hasTag = false;
          result.tag_ = getDefaultInstance().getTag();
          return this;
        }
        
        // optional string value = 5;
        public boolean hasValue() {
          return result.hasValue();
        }
        public java.lang.String getValue() {
          return result.getValue();
        }
        public Builder setValue(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasValue = true;
          result.value_ = value;
          return this;
        }
        public Builder clearValue() {
          result.hasValue = false;
          result.value_ = getDefaultInstance().getValue();
          return this;
        }
        
        // optional uint32 id = 7;
        public boolean hasId() {
          return result.hasId();
        }
        public int getId() {
          return result.getId();
        }
        public Builder setId(int value) {
          result.hasId = true;
          result.id_ = value;
          return this;
        }
        public Builder clearId() {
          result.hasId = false;
          result.id_ = 0;
          return this;
        }
        
        // optional uint32 minZoom = 9;
        public boolean hasMinZoom() {
          return result.hasMinZoom();
        }
        public int getMinZoom() {
          return result.getMinZoom();
        }
        public Builder setMinZoom(int value) {
          result.hasMinZoom = true;
          result.minZoom_ = value;
          return this;
        }
        public Builder clearMinZoom() {
          result.hasMinZoom = false;
          result.minZoom_ = 0;
          return this;
        }
        
        // optional uint32 type = 10;
        public boolean hasType() {
          return result.hasType();
        }
        public int getType() {
          return result.getType();
        }
        public Builder setType(int value) {
          result.hasType = true;
          result.type_ = value;
          return this;
        }
        public Builder clearType() {
          result.hasType = false;
          result.type_ = 0;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:FlcNavMapIndex.MapEncodingRule)
      }
      
      static {
        defaultInstance = new MapEncodingRule(true);
        net.flcnav.binary.FlcnavOdb.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:FlcNavMapIndex.MapEncodingRule)
    }
    
    public static final class MapRootLevel extends
        com.google.protobuf.GeneratedMessage {
      // Use MapRootLevel.newBuilder() to construct.
      private MapRootLevel() {
        initFields();
      }
      private MapRootLevel(boolean noInit) {}
      
      private static final MapRootLevel defaultInstance;
      public static MapRootLevel getDefaultInstance() {
        return defaultInstance;
      }
      
      @Override
	public MapRootLevel getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavMapIndex_MapRootLevel_descriptor;
      }
      
      @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavMapIndex_MapRootLevel_fieldAccessorTable;
      }
      
      // required int32 maxZoom = 1;
      public static final int MAXZOOM_FIELD_NUMBER = 1;
      private boolean hasMaxZoom;
      private int maxZoom_ = 0;
      public boolean hasMaxZoom() { return hasMaxZoom; }
      public int getMaxZoom() { return maxZoom_; }
      
      // required int32 minZoom = 2;
      public static final int MINZOOM_FIELD_NUMBER = 2;
      private boolean hasMinZoom;
      private int minZoom_ = 0;
      public boolean hasMinZoom() { return hasMinZoom; }
      public int getMinZoom() { return minZoom_; }
      
      // required int32 left = 3;
      public static final int LEFT_FIELD_NUMBER = 3;
      private boolean hasLeft;
      private int left_ = 0;
      public boolean hasLeft() { return hasLeft; }
      public int getLeft() { return left_; }
      
      // required int32 right = 4;
      public static final int RIGHT_FIELD_NUMBER = 4;
      private boolean hasRight;
      private int right_ = 0;
      public boolean hasRight() { return hasRight; }
      public int getRight() { return right_; }
      
      // required int32 top = 5;
      public static final int TOP_FIELD_NUMBER = 5;
      private boolean hasTop;
      private int top_ = 0;
      public boolean hasTop() { return hasTop; }
      public int getTop() { return top_; }
      
      // required int32 bottom = 6;
      public static final int BOTTOM_FIELD_NUMBER = 6;
      private boolean hasBottom;
      private int bottom_ = 0;
      public boolean hasBottom() { return hasBottom; }
      public int getBottom() { return bottom_; }
      
      // repeated .FlcNavMapIndex.MapDataBox boxes = 7;
      public static final int BOXES_FIELD_NUMBER = 7;
      private java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox> boxes_ =
        java.util.Collections.emptyList();
      public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox> getBoxesList() {
        return boxes_;
      }
      public int getBoxesCount() { return boxes_.size(); }
      public net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox getBoxes(int index) {
        return boxes_.get(index);
      }
      
      // repeated .MapDataBlock blocks = 15;
      public static final int BLOCKS_FIELD_NUMBER = 15;
      private java.util.List<net.flcnav.binary.FlcnavOdb.MapDataBlock> blocks_ =
        java.util.Collections.emptyList();
      public java.util.List<net.flcnav.binary.FlcnavOdb.MapDataBlock> getBlocksList() {
        return blocks_;
      }
      public int getBlocksCount() { return blocks_.size(); }
      public net.flcnav.binary.FlcnavOdb.MapDataBlock getBlocks(int index) {
        return blocks_.get(index);
      }
      
      private void initFields() {
      }
      @Override
	public final boolean isInitialized() {
        if (!hasMaxZoom) return false;
        if (!hasMinZoom) return false;
        if (!hasLeft) return false;
        if (!hasRight) return false;
        if (!hasTop) return false;
        if (!hasBottom) return false;
        for (net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox element : getBoxesList()) {
          if (!element.isInitialized()) return false;
        }
        for (net.flcnav.binary.FlcnavOdb.MapDataBlock element : getBlocksList()) {
          if (!element.isInitialized()) return false;
        }
        return true;
      }
      
      @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasMaxZoom()) {
          output.writeInt32(1, getMaxZoom());
        }
        if (hasMinZoom()) {
          output.writeInt32(2, getMinZoom());
        }
        if (hasLeft()) {
          output.writeInt32(3, getLeft());
        }
        if (hasRight()) {
          output.writeInt32(4, getRight());
        }
        if (hasTop()) {
          output.writeInt32(5, getTop());
        }
        if (hasBottom()) {
          output.writeInt32(6, getBottom());
        }
        for (net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox element : getBoxesList()) {
          output.writeMessage(7, element);
        }
        for (net.flcnav.binary.FlcnavOdb.MapDataBlock element : getBlocksList()) {
          output.writeMessage(15, element);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      @Override
	public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasMaxZoom()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, getMaxZoom());
        }
        if (hasMinZoom()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, getMinZoom());
        }
        if (hasLeft()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, getLeft());
        }
        if (hasRight()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, getRight());
        }
        if (hasTop()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, getTop());
        }
        if (hasBottom()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(6, getBottom());
        }
        for (net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox element : getBoxesList()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, element);
        }
        for (net.flcnav.binary.FlcnavOdb.MapDataBlock element : getBlocksList()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(15, element);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      @Override
	public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      @Override
	public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel result;
        
        // Construct using net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel();
          return builder;
        }
        
        @Override
		protected net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel internalGetResult() {
          return result;
        }
        
        @Override
		public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel();
          return this;
        }
        
        @Override
		public Builder clone() {
          return create().mergeFrom(result);
        }
        
        @Override
		public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel.getDescriptor();
        }
        
        @Override
		public net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel getDefaultInstanceForType() {
          return net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel.getDefaultInstance();
        }
        
        @Override
		public boolean isInitialized() {
          return result.isInitialized();
        }
        @Override
		public net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        @Override
		public net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          if (result.boxes_ != java.util.Collections.EMPTY_LIST) {
            result.boxes_ =
              java.util.Collections.unmodifiableList(result.boxes_);
          }
          if (result.blocks_ != java.util.Collections.EMPTY_LIST) {
            result.blocks_ =
              java.util.Collections.unmodifiableList(result.blocks_);
          }
          net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel returnMe = result;
          result = null;
          return returnMe;
        }
        
        @Override
		public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel) {
            return mergeFrom((net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel other) {
          if (other == net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel.getDefaultInstance()) return this;
          if (other.hasMaxZoom()) {
            setMaxZoom(other.getMaxZoom());
          }
          if (other.hasMinZoom()) {
            setMinZoom(other.getMinZoom());
          }
          if (other.hasLeft()) {
            setLeft(other.getLeft());
          }
          if (other.hasRight()) {
            setRight(other.getRight());
          }
          if (other.hasTop()) {
            setTop(other.getTop());
          }
          if (other.hasBottom()) {
            setBottom(other.getBottom());
          }
          if (!other.boxes_.isEmpty()) {
            if (result.boxes_.isEmpty()) {
              result.boxes_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox>();
            }
            result.boxes_.addAll(other.boxes_);
          }
          if (!other.blocks_.isEmpty()) {
            if (result.blocks_.isEmpty()) {
              result.blocks_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.MapDataBlock>();
            }
            result.blocks_.addAll(other.blocks_);
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        @Override
		public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 8: {
                setMaxZoom(input.readInt32());
                break;
              }
              case 16: {
                setMinZoom(input.readInt32());
                break;
              }
              case 24: {
                setLeft(input.readInt32());
                break;
              }
              case 32: {
                setRight(input.readInt32());
                break;
              }
              case 40: {
                setTop(input.readInt32());
                break;
              }
              case 48: {
                setBottom(input.readInt32());
                break;
              }
              case 58: {
                net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox.Builder subBuilder = net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addBoxes(subBuilder.buildPartial());
                break;
              }
              case 122: {
                net.flcnav.binary.FlcnavOdb.MapDataBlock.Builder subBuilder = net.flcnav.binary.FlcnavOdb.MapDataBlock.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addBlocks(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        
        // required int32 maxZoom = 1;
        public boolean hasMaxZoom() {
          return result.hasMaxZoom();
        }
        public int getMaxZoom() {
          return result.getMaxZoom();
        }
        public Builder setMaxZoom(int value) {
          result.hasMaxZoom = true;
          result.maxZoom_ = value;
          return this;
        }
        public Builder clearMaxZoom() {
          result.hasMaxZoom = false;
          result.maxZoom_ = 0;
          return this;
        }
        
        // required int32 minZoom = 2;
        public boolean hasMinZoom() {
          return result.hasMinZoom();
        }
        public int getMinZoom() {
          return result.getMinZoom();
        }
        public Builder setMinZoom(int value) {
          result.hasMinZoom = true;
          result.minZoom_ = value;
          return this;
        }
        public Builder clearMinZoom() {
          result.hasMinZoom = false;
          result.minZoom_ = 0;
          return this;
        }
        
        // required int32 left = 3;
        public boolean hasLeft() {
          return result.hasLeft();
        }
        public int getLeft() {
          return result.getLeft();
        }
        public Builder setLeft(int value) {
          result.hasLeft = true;
          result.left_ = value;
          return this;
        }
        public Builder clearLeft() {
          result.hasLeft = false;
          result.left_ = 0;
          return this;
        }
        
        // required int32 right = 4;
        public boolean hasRight() {
          return result.hasRight();
        }
        public int getRight() {
          return result.getRight();
        }
        public Builder setRight(int value) {
          result.hasRight = true;
          result.right_ = value;
          return this;
        }
        public Builder clearRight() {
          result.hasRight = false;
          result.right_ = 0;
          return this;
        }
        
        // required int32 top = 5;
        public boolean hasTop() {
          return result.hasTop();
        }
        public int getTop() {
          return result.getTop();
        }
        public Builder setTop(int value) {
          result.hasTop = true;
          result.top_ = value;
          return this;
        }
        public Builder clearTop() {
          result.hasTop = false;
          result.top_ = 0;
          return this;
        }
        
        // required int32 bottom = 6;
        public boolean hasBottom() {
          return result.hasBottom();
        }
        public int getBottom() {
          return result.getBottom();
        }
        public Builder setBottom(int value) {
          result.hasBottom = true;
          result.bottom_ = value;
          return this;
        }
        public Builder clearBottom() {
          result.hasBottom = false;
          result.bottom_ = 0;
          return this;
        }
        
        // repeated .FlcNavMapIndex.MapDataBox boxes = 7;
        public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox> getBoxesList() {
          return java.util.Collections.unmodifiableList(result.boxes_);
        }
        public int getBoxesCount() {
          return result.getBoxesCount();
        }
        public net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox getBoxes(int index) {
          return result.getBoxes(index);
        }
        public Builder setBoxes(int index, net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.boxes_.set(index, value);
          return this;
        }
        public Builder setBoxes(int index, net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox.Builder builderForValue) {
          result.boxes_.set(index, builderForValue.build());
          return this;
        }
        public Builder addBoxes(net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox value) {
          if (value == null) {
            throw new NullPointerException();
          }
          if (result.boxes_.isEmpty()) {
            result.boxes_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox>();
          }
          result.boxes_.add(value);
          return this;
        }
        public Builder addBoxes(net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox.Builder builderForValue) {
          if (result.boxes_.isEmpty()) {
            result.boxes_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox>();
          }
          result.boxes_.add(builderForValue.build());
          return this;
        }
        public Builder addAllBoxes(
            java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox> values) {
          if (result.boxes_.isEmpty()) {
            result.boxes_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox>();
          }
          super.addAll(values, result.boxes_);
          return this;
        }
        public Builder clearBoxes() {
          result.boxes_ = java.util.Collections.emptyList();
          return this;
        }
        
        // repeated .MapDataBlock blocks = 15;
        public java.util.List<net.flcnav.binary.FlcnavOdb.MapDataBlock> getBlocksList() {
          return java.util.Collections.unmodifiableList(result.blocks_);
        }
        public int getBlocksCount() {
          return result.getBlocksCount();
        }
        public net.flcnav.binary.FlcnavOdb.MapDataBlock getBlocks(int index) {
          return result.getBlocks(index);
        }
        public Builder setBlocks(int index, net.flcnav.binary.FlcnavOdb.MapDataBlock value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.blocks_.set(index, value);
          return this;
        }
        public Builder setBlocks(int index, net.flcnav.binary.FlcnavOdb.MapDataBlock.Builder builderForValue) {
          result.blocks_.set(index, builderForValue.build());
          return this;
        }
        public Builder addBlocks(net.flcnav.binary.FlcnavOdb.MapDataBlock value) {
          if (value == null) {
            throw new NullPointerException();
          }
          if (result.blocks_.isEmpty()) {
            result.blocks_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.MapDataBlock>();
          }
          result.blocks_.add(value);
          return this;
        }
        public Builder addBlocks(net.flcnav.binary.FlcnavOdb.MapDataBlock.Builder builderForValue) {
          if (result.blocks_.isEmpty()) {
            result.blocks_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.MapDataBlock>();
          }
          result.blocks_.add(builderForValue.build());
          return this;
        }
        public Builder addAllBlocks(
            java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.MapDataBlock> values) {
          if (result.blocks_.isEmpty()) {
            result.blocks_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.MapDataBlock>();
          }
          super.addAll(values, result.blocks_);
          return this;
        }
        public Builder clearBlocks() {
          result.blocks_ = java.util.Collections.emptyList();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:FlcNavMapIndex.MapRootLevel)
      }
      
      static {
        defaultInstance = new MapRootLevel(true);
        net.flcnav.binary.FlcnavOdb.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:FlcNavMapIndex.MapRootLevel)
    }
    
    public static final class MapDataBox extends
        com.google.protobuf.GeneratedMessage {
      // Use MapDataBox.newBuilder() to construct.
      private MapDataBox() {
        initFields();
      }
      private MapDataBox(boolean noInit) {}
      
      private static final MapDataBox defaultInstance;
      public static MapDataBox getDefaultInstance() {
        return defaultInstance;
      }
      
      @Override
	public MapDataBox getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavMapIndex_MapDataBox_descriptor;
      }
      
      @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavMapIndex_MapDataBox_fieldAccessorTable;
      }
      
      // required sint32 left = 1;
      public static final int LEFT_FIELD_NUMBER = 1;
      private boolean hasLeft;
      private int left_ = 0;
      public boolean hasLeft() { return hasLeft; }
      public int getLeft() { return left_; }
      
      // required sint32 right = 2;
      public static final int RIGHT_FIELD_NUMBER = 2;
      private boolean hasRight;
      private int right_ = 0;
      public boolean hasRight() { return hasRight; }
      public int getRight() { return right_; }
      
      // required sint32 top = 3;
      public static final int TOP_FIELD_NUMBER = 3;
      private boolean hasTop;
      private int top_ = 0;
      public boolean hasTop() { return hasTop; }
      public int getTop() { return top_; }
      
      // required sint32 bottom = 4;
      public static final int BOTTOM_FIELD_NUMBER = 4;
      private boolean hasBottom;
      private int bottom_ = 0;
      public boolean hasBottom() { return hasBottom; }
      public int getBottom() { return bottom_; }
      
      // optional fixed32 shiftToMapData = 5;
      public static final int SHIFTTOMAPDATA_FIELD_NUMBER = 5;
      private boolean hasShiftToMapData;
      private int shiftToMapData_ = 0;
      public boolean hasShiftToMapData() { return hasShiftToMapData; }
      public int getShiftToMapData() { return shiftToMapData_; }
      
      // optional bool ocean = 6;
      public static final int OCEAN_FIELD_NUMBER = 6;
      private boolean hasOcean;
      private boolean ocean_ = false;
      public boolean hasOcean() { return hasOcean; }
      public boolean getOcean() { return ocean_; }
      
      // repeated .FlcNavMapIndex.MapDataBox boxes = 7;
      public static final int BOXES_FIELD_NUMBER = 7;
      private java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox> boxes_ =
        java.util.Collections.emptyList();
      public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox> getBoxesList() {
        return boxes_;
      }
      public int getBoxesCount() { return boxes_.size(); }
      public net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox getBoxes(int index) {
        return boxes_.get(index);
      }
      
      private void initFields() {
      }
      @Override
	public final boolean isInitialized() {
        if (!hasLeft) return false;
        if (!hasRight) return false;
        if (!hasTop) return false;
        if (!hasBottom) return false;
        for (net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox element : getBoxesList()) {
          if (!element.isInitialized()) return false;
        }
        return true;
      }
      
      @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasLeft()) {
          output.writeSInt32(1, getLeft());
        }
        if (hasRight()) {
          output.writeSInt32(2, getRight());
        }
        if (hasTop()) {
          output.writeSInt32(3, getTop());
        }
        if (hasBottom()) {
          output.writeSInt32(4, getBottom());
        }
        if (hasShiftToMapData()) {
          output.writeFixed32(5, getShiftToMapData());
        }
        if (hasOcean()) {
          output.writeBool(6, getOcean());
        }
        for (net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox element : getBoxesList()) {
          output.writeMessage(7, element);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      @Override
	public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasLeft()) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(1, getLeft());
        }
        if (hasRight()) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(2, getRight());
        }
        if (hasTop()) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(3, getTop());
        }
        if (hasBottom()) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(4, getBottom());
        }
        if (hasShiftToMapData()) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed32Size(5, getShiftToMapData());
        }
        if (hasOcean()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(6, getOcean());
        }
        for (net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox element : getBoxesList()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, element);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      @Override
	public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      @Override
	public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox result;
        
        // Construct using net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox();
          return builder;
        }
        
        @Override
		protected net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox internalGetResult() {
          return result;
        }
        
        @Override
		public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox();
          return this;
        }
        
        @Override
		public Builder clone() {
          return create().mergeFrom(result);
        }
        
        @Override
		public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox.getDescriptor();
        }
        
        @Override
		public net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox getDefaultInstanceForType() {
          return net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox.getDefaultInstance();
        }
        
        @Override
		public boolean isInitialized() {
          return result.isInitialized();
        }
        @Override
		public net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        @Override
		public net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          if (result.boxes_ != java.util.Collections.EMPTY_LIST) {
            result.boxes_ =
              java.util.Collections.unmodifiableList(result.boxes_);
          }
          net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox returnMe = result;
          result = null;
          return returnMe;
        }
        
        @Override
		public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox) {
            return mergeFrom((net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox other) {
          if (other == net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox.getDefaultInstance()) return this;
          if (other.hasLeft()) {
            setLeft(other.getLeft());
          }
          if (other.hasRight()) {
            setRight(other.getRight());
          }
          if (other.hasTop()) {
            setTop(other.getTop());
          }
          if (other.hasBottom()) {
            setBottom(other.getBottom());
          }
          if (other.hasShiftToMapData()) {
            setShiftToMapData(other.getShiftToMapData());
          }
          if (other.hasOcean()) {
            setOcean(other.getOcean());
          }
          if (!other.boxes_.isEmpty()) {
            if (result.boxes_.isEmpty()) {
              result.boxes_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox>();
            }
            result.boxes_.addAll(other.boxes_);
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        @Override
		public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 8: {
                setLeft(input.readSInt32());
                break;
              }
              case 16: {
                setRight(input.readSInt32());
                break;
              }
              case 24: {
                setTop(input.readSInt32());
                break;
              }
              case 32: {
                setBottom(input.readSInt32());
                break;
              }
              case 45: {
                setShiftToMapData(input.readFixed32());
                break;
              }
              case 48: {
                setOcean(input.readBool());
                break;
              }
              case 58: {
                net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox.Builder subBuilder = net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addBoxes(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        
        // required sint32 left = 1;
        public boolean hasLeft() {
          return result.hasLeft();
        }
        public int getLeft() {
          return result.getLeft();
        }
        public Builder setLeft(int value) {
          result.hasLeft = true;
          result.left_ = value;
          return this;
        }
        public Builder clearLeft() {
          result.hasLeft = false;
          result.left_ = 0;
          return this;
        }
        
        // required sint32 right = 2;
        public boolean hasRight() {
          return result.hasRight();
        }
        public int getRight() {
          return result.getRight();
        }
        public Builder setRight(int value) {
          result.hasRight = true;
          result.right_ = value;
          return this;
        }
        public Builder clearRight() {
          result.hasRight = false;
          result.right_ = 0;
          return this;
        }
        
        // required sint32 top = 3;
        public boolean hasTop() {
          return result.hasTop();
        }
        public int getTop() {
          return result.getTop();
        }
        public Builder setTop(int value) {
          result.hasTop = true;
          result.top_ = value;
          return this;
        }
        public Builder clearTop() {
          result.hasTop = false;
          result.top_ = 0;
          return this;
        }
        
        // required sint32 bottom = 4;
        public boolean hasBottom() {
          return result.hasBottom();
        }
        public int getBottom() {
          return result.getBottom();
        }
        public Builder setBottom(int value) {
          result.hasBottom = true;
          result.bottom_ = value;
          return this;
        }
        public Builder clearBottom() {
          result.hasBottom = false;
          result.bottom_ = 0;
          return this;
        }
        
        // optional fixed32 shiftToMapData = 5;
        public boolean hasShiftToMapData() {
          return result.hasShiftToMapData();
        }
        public int getShiftToMapData() {
          return result.getShiftToMapData();
        }
        public Builder setShiftToMapData(int value) {
          result.hasShiftToMapData = true;
          result.shiftToMapData_ = value;
          return this;
        }
        public Builder clearShiftToMapData() {
          result.hasShiftToMapData = false;
          result.shiftToMapData_ = 0;
          return this;
        }
        
        // optional bool ocean = 6;
        public boolean hasOcean() {
          return result.hasOcean();
        }
        public boolean getOcean() {
          return result.getOcean();
        }
        public Builder setOcean(boolean value) {
          result.hasOcean = true;
          result.ocean_ = value;
          return this;
        }
        public Builder clearOcean() {
          result.hasOcean = false;
          result.ocean_ = false;
          return this;
        }
        
        // repeated .FlcNavMapIndex.MapDataBox boxes = 7;
        public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox> getBoxesList() {
          return java.util.Collections.unmodifiableList(result.boxes_);
        }
        public int getBoxesCount() {
          return result.getBoxesCount();
        }
        public net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox getBoxes(int index) {
          return result.getBoxes(index);
        }
        public Builder setBoxes(int index, net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.boxes_.set(index, value);
          return this;
        }
        public Builder setBoxes(int index, net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox.Builder builderForValue) {
          result.boxes_.set(index, builderForValue.build());
          return this;
        }
        public Builder addBoxes(net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox value) {
          if (value == null) {
            throw new NullPointerException();
          }
          if (result.boxes_.isEmpty()) {
            result.boxes_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox>();
          }
          result.boxes_.add(value);
          return this;
        }
        public Builder addBoxes(net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox.Builder builderForValue) {
          if (result.boxes_.isEmpty()) {
            result.boxes_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox>();
          }
          result.boxes_.add(builderForValue.build());
          return this;
        }
        public Builder addAllBoxes(
            java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox> values) {
          if (result.boxes_.isEmpty()) {
            result.boxes_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox>();
          }
          super.addAll(values, result.boxes_);
          return this;
        }
        public Builder clearBoxes() {
          result.boxes_ = java.util.Collections.emptyList();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:FlcNavMapIndex.MapDataBox)
      }
      
      static {
        defaultInstance = new MapDataBox(true);
        net.flcnav.binary.FlcnavOdb.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:FlcNavMapIndex.MapDataBox)
    }
    
    // required string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // repeated .FlcNavMapIndex.MapEncodingRule rules = 4;
    public static final int RULES_FIELD_NUMBER = 4;
    private java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule> rules_ =
      java.util.Collections.emptyList();
    public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule> getRulesList() {
      return rules_;
    }
    public int getRulesCount() { return rules_.size(); }
    public net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule getRules(int index) {
      return rules_.get(index);
    }
    
    // repeated .FlcNavMapIndex.MapRootLevel levels = 5;
    public static final int LEVELS_FIELD_NUMBER = 5;
    private java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel> levels_ =
      java.util.Collections.emptyList();
    public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel> getLevelsList() {
      return levels_;
    }
    public int getLevelsCount() { return levels_.size(); }
    public net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel getLevels(int index) {
      return levels_.get(index);
    }
    
    private void initFields() {
    }
    @Override
	public final boolean isInitialized() {
      if (!hasName) return false;
      for (net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule element : getRulesList()) {
        if (!element.isInitialized()) return false;
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel element : getLevelsList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(2, getName());
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule element : getRulesList()) {
        output.writeMessage(4, element);
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel element : getLevelsList()) {
        output.writeMessage(5, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getName());
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule element : getRulesList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel element : getLevelsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavMapIndex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.FlcNavMapIndex prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.FlcNavMapIndex result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.FlcNavMapIndex();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.FlcNavMapIndex internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.FlcNavMapIndex();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavMapIndex getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavMapIndex build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.FlcNavMapIndex buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavMapIndex buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.rules_ != java.util.Collections.EMPTY_LIST) {
          result.rules_ =
            java.util.Collections.unmodifiableList(result.rules_);
        }
        if (result.levels_ != java.util.Collections.EMPTY_LIST) {
          result.levels_ =
            java.util.Collections.unmodifiableList(result.levels_);
        }
        net.flcnav.binary.FlcnavOdb.FlcNavMapIndex returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.FlcNavMapIndex) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.FlcNavMapIndex)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.FlcNavMapIndex other) {
        if (other == net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (!other.rules_.isEmpty()) {
          if (result.rules_.isEmpty()) {
            result.rules_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule>();
          }
          result.rules_.addAll(other.rules_);
        }
        if (!other.levels_.isEmpty()) {
          if (result.levels_.isEmpty()) {
            result.levels_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel>();
          }
          result.levels_.addAll(other.levels_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 18: {
              setName(input.readString());
              break;
            }
            case 34: {
              net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule.Builder subBuilder = net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRules(subBuilder.buildPartial());
              break;
            }
            case 42: {
              net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel.Builder subBuilder = net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addLevels(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string name = 2;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // repeated .FlcNavMapIndex.MapEncodingRule rules = 4;
      public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule> getRulesList() {
        return java.util.Collections.unmodifiableList(result.rules_);
      }
      public int getRulesCount() {
        return result.getRulesCount();
      }
      public net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule getRules(int index) {
        return result.getRules(index);
      }
      public Builder setRules(int index, net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.rules_.set(index, value);
        return this;
      }
      public Builder setRules(int index, net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule.Builder builderForValue) {
        result.rules_.set(index, builderForValue.build());
        return this;
      }
      public Builder addRules(net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.rules_.isEmpty()) {
          result.rules_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule>();
        }
        result.rules_.add(value);
        return this;
      }
      public Builder addRules(net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule.Builder builderForValue) {
        if (result.rules_.isEmpty()) {
          result.rules_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule>();
        }
        result.rules_.add(builderForValue.build());
        return this;
      }
      public Builder addAllRules(
          java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule> values) {
        if (result.rules_.isEmpty()) {
          result.rules_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule>();
        }
        super.addAll(values, result.rules_);
        return this;
      }
      public Builder clearRules() {
        result.rules_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .FlcNavMapIndex.MapRootLevel levels = 5;
      public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel> getLevelsList() {
        return java.util.Collections.unmodifiableList(result.levels_);
      }
      public int getLevelsCount() {
        return result.getLevelsCount();
      }
      public net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel getLevels(int index) {
        return result.getLevels(index);
      }
      public Builder setLevels(int index, net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.levels_.set(index, value);
        return this;
      }
      public Builder setLevels(int index, net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel.Builder builderForValue) {
        result.levels_.set(index, builderForValue.build());
        return this;
      }
      public Builder addLevels(net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.levels_.isEmpty()) {
          result.levels_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel>();
        }
        result.levels_.add(value);
        return this;
      }
      public Builder addLevels(net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel.Builder builderForValue) {
        if (result.levels_.isEmpty()) {
          result.levels_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel>();
        }
        result.levels_.add(builderForValue.build());
        return this;
      }
      public Builder addAllLevels(
          java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel> values) {
        if (result.levels_.isEmpty()) {
          result.levels_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel>();
        }
        super.addAll(values, result.levels_);
        return this;
      }
      public Builder clearLevels() {
        result.levels_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:FlcNavMapIndex)
    }
    
    static {
      defaultInstance = new FlcNavMapIndex(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FlcNavMapIndex)
  }
  
  public static final class MapDataBlock extends
      com.google.protobuf.GeneratedMessage {
    // Use MapDataBlock.newBuilder() to construct.
    private MapDataBlock() {
      initFields();
    }
    private MapDataBlock(boolean noInit) {}
    
    private static final MapDataBlock defaultInstance;
    public static MapDataBlock getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public MapDataBlock getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_MapDataBlock_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_MapDataBlock_fieldAccessorTable;
    }
    
    // optional uint64 baseId = 10;
    public static final int BASEID_FIELD_NUMBER = 10;
    private boolean hasBaseId;
    private long baseId_ = 0L;
    public boolean hasBaseId() { return hasBaseId; }
    public long getBaseId() { return baseId_; }
    
    // repeated .MapData dataObjects = 12;
    public static final int DATAOBJECTS_FIELD_NUMBER = 12;
    private java.util.List<net.flcnav.binary.FlcnavOdb.MapData> dataObjects_ =
      java.util.Collections.emptyList();
    public java.util.List<net.flcnav.binary.FlcnavOdb.MapData> getDataObjectsList() {
      return dataObjects_;
    }
    public int getDataObjectsCount() { return dataObjects_.size(); }
    public net.flcnav.binary.FlcnavOdb.MapData getDataObjects(int index) {
      return dataObjects_.get(index);
    }
    
    // optional .StringTable stringTable = 15;
    public static final int STRINGTABLE_FIELD_NUMBER = 15;
    private boolean hasStringTable;
    private net.flcnav.binary.FlcnavOdb.StringTable stringTable_;
    public boolean hasStringTable() { return hasStringTable; }
    public net.flcnav.binary.FlcnavOdb.StringTable getStringTable() { return stringTable_; }
    
    private void initFields() {
      stringTable_ = net.flcnav.binary.FlcnavOdb.StringTable.getDefaultInstance();
    }
    @Override
	public final boolean isInitialized() {
      for (net.flcnav.binary.FlcnavOdb.MapData element : getDataObjectsList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasBaseId()) {
        output.writeUInt64(10, getBaseId());
      }
      for (net.flcnav.binary.FlcnavOdb.MapData element : getDataObjectsList()) {
        output.writeMessage(12, element);
      }
      if (hasStringTable()) {
        output.writeMessage(15, getStringTable());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasBaseId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(10, getBaseId());
      }
      for (net.flcnav.binary.FlcnavOdb.MapData element : getDataObjectsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, element);
      }
      if (hasStringTable()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getStringTable());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.MapDataBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.MapDataBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.MapDataBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.MapDataBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.MapDataBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.MapDataBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.MapDataBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.MapDataBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.MapDataBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.MapDataBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.MapDataBlock prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.MapDataBlock result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.MapDataBlock.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.MapDataBlock();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.MapDataBlock internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.MapDataBlock();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.MapDataBlock.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.MapDataBlock getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.MapDataBlock.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.MapDataBlock build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.MapDataBlock buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.MapDataBlock buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.dataObjects_ != java.util.Collections.EMPTY_LIST) {
          result.dataObjects_ =
            java.util.Collections.unmodifiableList(result.dataObjects_);
        }
        net.flcnav.binary.FlcnavOdb.MapDataBlock returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.MapDataBlock) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.MapDataBlock)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.MapDataBlock other) {
        if (other == net.flcnav.binary.FlcnavOdb.MapDataBlock.getDefaultInstance()) return this;
        if (other.hasBaseId()) {
          setBaseId(other.getBaseId());
        }
        if (!other.dataObjects_.isEmpty()) {
          if (result.dataObjects_.isEmpty()) {
            result.dataObjects_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.MapData>();
          }
          result.dataObjects_.addAll(other.dataObjects_);
        }
        if (other.hasStringTable()) {
          mergeStringTable(other.getStringTable());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 80: {
              setBaseId(input.readUInt64());
              break;
            }
            case 98: {
              net.flcnav.binary.FlcnavOdb.MapData.Builder subBuilder = net.flcnav.binary.FlcnavOdb.MapData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addDataObjects(subBuilder.buildPartial());
              break;
            }
            case 122: {
              net.flcnav.binary.FlcnavOdb.StringTable.Builder subBuilder = net.flcnav.binary.FlcnavOdb.StringTable.newBuilder();
              if (hasStringTable()) {
                subBuilder.mergeFrom(getStringTable());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setStringTable(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional uint64 baseId = 10;
      public boolean hasBaseId() {
        return result.hasBaseId();
      }
      public long getBaseId() {
        return result.getBaseId();
      }
      public Builder setBaseId(long value) {
        result.hasBaseId = true;
        result.baseId_ = value;
        return this;
      }
      public Builder clearBaseId() {
        result.hasBaseId = false;
        result.baseId_ = 0L;
        return this;
      }
      
      // repeated .MapData dataObjects = 12;
      public java.util.List<net.flcnav.binary.FlcnavOdb.MapData> getDataObjectsList() {
        return java.util.Collections.unmodifiableList(result.dataObjects_);
      }
      public int getDataObjectsCount() {
        return result.getDataObjectsCount();
      }
      public net.flcnav.binary.FlcnavOdb.MapData getDataObjects(int index) {
        return result.getDataObjects(index);
      }
      public Builder setDataObjects(int index, net.flcnav.binary.FlcnavOdb.MapData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.dataObjects_.set(index, value);
        return this;
      }
      public Builder setDataObjects(int index, net.flcnav.binary.FlcnavOdb.MapData.Builder builderForValue) {
        result.dataObjects_.set(index, builderForValue.build());
        return this;
      }
      public Builder addDataObjects(net.flcnav.binary.FlcnavOdb.MapData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.dataObjects_.isEmpty()) {
          result.dataObjects_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.MapData>();
        }
        result.dataObjects_.add(value);
        return this;
      }
      public Builder addDataObjects(net.flcnav.binary.FlcnavOdb.MapData.Builder builderForValue) {
        if (result.dataObjects_.isEmpty()) {
          result.dataObjects_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.MapData>();
        }
        result.dataObjects_.add(builderForValue.build());
        return this;
      }
      public Builder addAllDataObjects(
          java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.MapData> values) {
        if (result.dataObjects_.isEmpty()) {
          result.dataObjects_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.MapData>();
        }
        super.addAll(values, result.dataObjects_);
        return this;
      }
      public Builder clearDataObjects() {
        result.dataObjects_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .StringTable stringTable = 15;
      public boolean hasStringTable() {
        return result.hasStringTable();
      }
      public net.flcnav.binary.FlcnavOdb.StringTable getStringTable() {
        return result.getStringTable();
      }
      public Builder setStringTable(net.flcnav.binary.FlcnavOdb.StringTable value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasStringTable = true;
        result.stringTable_ = value;
        return this;
      }
      public Builder setStringTable(net.flcnav.binary.FlcnavOdb.StringTable.Builder builderForValue) {
        result.hasStringTable = true;
        result.stringTable_ = builderForValue.build();
        return this;
      }
      public Builder mergeStringTable(net.flcnav.binary.FlcnavOdb.StringTable value) {
        if (result.hasStringTable() &&
            result.stringTable_ != net.flcnav.binary.FlcnavOdb.StringTable.getDefaultInstance()) {
          result.stringTable_ =
            net.flcnav.binary.FlcnavOdb.StringTable.newBuilder(result.stringTable_).mergeFrom(value).buildPartial();
        } else {
          result.stringTable_ = value;
        }
        result.hasStringTable = true;
        return this;
      }
      public Builder clearStringTable() {
        result.hasStringTable = false;
        result.stringTable_ = net.flcnav.binary.FlcnavOdb.StringTable.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MapDataBlock)
    }
    
    static {
      defaultInstance = new MapDataBlock(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MapDataBlock)
  }
  
  public static final class MapData extends
      com.google.protobuf.GeneratedMessage {
    // Use MapData.newBuilder() to construct.
    private MapData() {
      initFields();
    }
    private MapData(boolean noInit) {}
    
    private static final MapData defaultInstance;
    public static MapData getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public MapData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_MapData_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_MapData_fieldAccessorTable;
    }
    
    // optional bytes coordinates = 1;
    public static final int COORDINATES_FIELD_NUMBER = 1;
    private boolean hasCoordinates;
    private com.google.protobuf.ByteString coordinates_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasCoordinates() { return hasCoordinates; }
    public com.google.protobuf.ByteString getCoordinates() { return coordinates_; }
    
    // optional bytes areaCoordinates = 2;
    public static final int AREACOORDINATES_FIELD_NUMBER = 2;
    private boolean hasAreaCoordinates;
    private com.google.protobuf.ByteString areaCoordinates_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasAreaCoordinates() { return hasAreaCoordinates; }
    public com.google.protobuf.ByteString getAreaCoordinates() { return areaCoordinates_; }
    
    // repeated bytes polygonInnerCoordinates = 4;
    public static final int POLYGONINNERCOORDINATES_FIELD_NUMBER = 4;
    private java.util.List<com.google.protobuf.ByteString> polygonInnerCoordinates_ =
      java.util.Collections.emptyList();
    public java.util.List<com.google.protobuf.ByteString> getPolygonInnerCoordinatesList() {
      return polygonInnerCoordinates_;
    }
    public int getPolygonInnerCoordinatesCount() { return polygonInnerCoordinates_.size(); }
    public com.google.protobuf.ByteString getPolygonInnerCoordinates(int index) {
      return polygonInnerCoordinates_.get(index);
    }
    
    // optional bytes additionalTypes = 6;
    public static final int ADDITIONALTYPES_FIELD_NUMBER = 6;
    private boolean hasAdditionalTypes;
    private com.google.protobuf.ByteString additionalTypes_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasAdditionalTypes() { return hasAdditionalTypes; }
    public com.google.protobuf.ByteString getAdditionalTypes() { return additionalTypes_; }
    
    // required bytes types = 7;
    public static final int TYPES_FIELD_NUMBER = 7;
    private boolean hasTypes;
    private com.google.protobuf.ByteString types_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasTypes() { return hasTypes; }
    public com.google.protobuf.ByteString getTypes() { return types_; }
    
    // optional bytes stringNames = 10;
    public static final int STRINGNAMES_FIELD_NUMBER = 10;
    private boolean hasStringNames;
    private com.google.protobuf.ByteString stringNames_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasStringNames() { return hasStringNames; }
    public com.google.protobuf.ByteString getStringNames() { return stringNames_; }
    
    // required sint64 id = 12;
    public static final int ID_FIELD_NUMBER = 12;
    private boolean hasId;
    private long id_ = 0L;
    public boolean hasId() { return hasId; }
    public long getId() { return id_; }
    
    // optional bytes rasterBytes = 15;
    public static final int RASTERBYTES_FIELD_NUMBER = 15;
    private boolean hasRasterBytes;
    private com.google.protobuf.ByteString rasterBytes_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasRasterBytes() { return hasRasterBytes; }
    public com.google.protobuf.ByteString getRasterBytes() { return rasterBytes_; }
    
    private void initFields() {
    }
    @Override
	public final boolean isInitialized() {
      if (!hasTypes) return false;
      if (!hasId) return false;
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasCoordinates()) {
        output.writeBytes(1, getCoordinates());
      }
      if (hasAreaCoordinates()) {
        output.writeBytes(2, getAreaCoordinates());
      }
      for (com.google.protobuf.ByteString element : getPolygonInnerCoordinatesList()) {
        output.writeBytes(4, element);
      }
      if (hasAdditionalTypes()) {
        output.writeBytes(6, getAdditionalTypes());
      }
      if (hasTypes()) {
        output.writeBytes(7, getTypes());
      }
      if (hasStringNames()) {
        output.writeBytes(10, getStringNames());
      }
      if (hasId()) {
        output.writeSInt64(12, getId());
      }
      if (hasRasterBytes()) {
        output.writeBytes(15, getRasterBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasCoordinates()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getCoordinates());
      }
      if (hasAreaCoordinates()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getAreaCoordinates());
      }
      {
        int dataSize = 0;
        for (com.google.protobuf.ByteString element : getPolygonInnerCoordinatesList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getPolygonInnerCoordinatesList().size();
      }
      if (hasAdditionalTypes()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getAdditionalTypes());
      }
      if (hasTypes()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getTypes());
      }
      if (hasStringNames()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getStringNames());
      }
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(12, getId());
      }
      if (hasRasterBytes()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, getRasterBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.MapData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.MapData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.MapData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.MapData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.MapData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.MapData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.MapData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.MapData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.MapData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.MapData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.MapData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.MapData result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.MapData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.MapData();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.MapData internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.MapData();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.MapData.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.MapData getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.MapData.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.MapData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.MapData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.MapData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.polygonInnerCoordinates_ != java.util.Collections.EMPTY_LIST) {
          result.polygonInnerCoordinates_ =
            java.util.Collections.unmodifiableList(result.polygonInnerCoordinates_);
        }
        net.flcnav.binary.FlcnavOdb.MapData returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.MapData) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.MapData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.MapData other) {
        if (other == net.flcnav.binary.FlcnavOdb.MapData.getDefaultInstance()) return this;
        if (other.hasCoordinates()) {
          setCoordinates(other.getCoordinates());
        }
        if (other.hasAreaCoordinates()) {
          setAreaCoordinates(other.getAreaCoordinates());
        }
        if (!other.polygonInnerCoordinates_.isEmpty()) {
          if (result.polygonInnerCoordinates_.isEmpty()) {
            result.polygonInnerCoordinates_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
          }
          result.polygonInnerCoordinates_.addAll(other.polygonInnerCoordinates_);
        }
        if (other.hasAdditionalTypes()) {
          setAdditionalTypes(other.getAdditionalTypes());
        }
        if (other.hasTypes()) {
          setTypes(other.getTypes());
        }
        if (other.hasStringNames()) {
          setStringNames(other.getStringNames());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasRasterBytes()) {
          setRasterBytes(other.getRasterBytes());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setCoordinates(input.readBytes());
              break;
            }
            case 18: {
              setAreaCoordinates(input.readBytes());
              break;
            }
            case 34: {
              addPolygonInnerCoordinates(input.readBytes());
              break;
            }
            case 50: {
              setAdditionalTypes(input.readBytes());
              break;
            }
            case 58: {
              setTypes(input.readBytes());
              break;
            }
            case 82: {
              setStringNames(input.readBytes());
              break;
            }
            case 96: {
              setId(input.readSInt64());
              break;
            }
            case 122: {
              setRasterBytes(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // optional bytes coordinates = 1;
      public boolean hasCoordinates() {
        return result.hasCoordinates();
      }
      public com.google.protobuf.ByteString getCoordinates() {
        return result.getCoordinates();
      }
      public Builder setCoordinates(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasCoordinates = true;
        result.coordinates_ = value;
        return this;
      }
      public Builder clearCoordinates() {
        result.hasCoordinates = false;
        result.coordinates_ = getDefaultInstance().getCoordinates();
        return this;
      }
      
      // optional bytes areaCoordinates = 2;
      public boolean hasAreaCoordinates() {
        return result.hasAreaCoordinates();
      }
      public com.google.protobuf.ByteString getAreaCoordinates() {
        return result.getAreaCoordinates();
      }
      public Builder setAreaCoordinates(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAreaCoordinates = true;
        result.areaCoordinates_ = value;
        return this;
      }
      public Builder clearAreaCoordinates() {
        result.hasAreaCoordinates = false;
        result.areaCoordinates_ = getDefaultInstance().getAreaCoordinates();
        return this;
      }
      
      // repeated bytes polygonInnerCoordinates = 4;
      public java.util.List<com.google.protobuf.ByteString> getPolygonInnerCoordinatesList() {
        return java.util.Collections.unmodifiableList(result.polygonInnerCoordinates_);
      }
      public int getPolygonInnerCoordinatesCount() {
        return result.getPolygonInnerCoordinatesCount();
      }
      public com.google.protobuf.ByteString getPolygonInnerCoordinates(int index) {
        return result.getPolygonInnerCoordinates(index);
      }
      public Builder setPolygonInnerCoordinates(int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.polygonInnerCoordinates_.set(index, value);
        return this;
      }
      public Builder addPolygonInnerCoordinates(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.polygonInnerCoordinates_.isEmpty()) {
          result.polygonInnerCoordinates_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
        }
        result.polygonInnerCoordinates_.add(value);
        return this;
      }
      public Builder addAllPolygonInnerCoordinates(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        if (result.polygonInnerCoordinates_.isEmpty()) {
          result.polygonInnerCoordinates_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
        }
        super.addAll(values, result.polygonInnerCoordinates_);
        return this;
      }
      public Builder clearPolygonInnerCoordinates() {
        result.polygonInnerCoordinates_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional bytes additionalTypes = 6;
      public boolean hasAdditionalTypes() {
        return result.hasAdditionalTypes();
      }
      public com.google.protobuf.ByteString getAdditionalTypes() {
        return result.getAdditionalTypes();
      }
      public Builder setAdditionalTypes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAdditionalTypes = true;
        result.additionalTypes_ = value;
        return this;
      }
      public Builder clearAdditionalTypes() {
        result.hasAdditionalTypes = false;
        result.additionalTypes_ = getDefaultInstance().getAdditionalTypes();
        return this;
      }
      
      // required bytes types = 7;
      public boolean hasTypes() {
        return result.hasTypes();
      }
      public com.google.protobuf.ByteString getTypes() {
        return result.getTypes();
      }
      public Builder setTypes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTypes = true;
        result.types_ = value;
        return this;
      }
      public Builder clearTypes() {
        result.hasTypes = false;
        result.types_ = getDefaultInstance().getTypes();
        return this;
      }
      
      // optional bytes stringNames = 10;
      public boolean hasStringNames() {
        return result.hasStringNames();
      }
      public com.google.protobuf.ByteString getStringNames() {
        return result.getStringNames();
      }
      public Builder setStringNames(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasStringNames = true;
        result.stringNames_ = value;
        return this;
      }
      public Builder clearStringNames() {
        result.hasStringNames = false;
        result.stringNames_ = getDefaultInstance().getStringNames();
        return this;
      }
      
      // required sint64 id = 12;
      public boolean hasId() {
        return result.hasId();
      }
      public long getId() {
        return result.getId();
      }
      public Builder setId(long value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0L;
        return this;
      }
      
      // optional bytes rasterBytes = 15;
      public boolean hasRasterBytes() {
        return result.hasRasterBytes();
      }
      public com.google.protobuf.ByteString getRasterBytes() {
        return result.getRasterBytes();
      }
      public Builder setRasterBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasRasterBytes = true;
        result.rasterBytes_ = value;
        return this;
      }
      public Builder clearRasterBytes() {
        result.hasRasterBytes = false;
        result.rasterBytes_ = getDefaultInstance().getRasterBytes();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MapData)
    }
    
    static {
      defaultInstance = new MapData(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MapData)
  }
  
  public static final class FlcNavAddressIndex extends
      com.google.protobuf.GeneratedMessage {
    // Use FlcNavAddressIndex.newBuilder() to construct.
    private FlcNavAddressIndex() {
      initFields();
    }
    private FlcNavAddressIndex(boolean noInit) {}
    
    private static final FlcNavAddressIndex defaultInstance;
    public static FlcNavAddressIndex getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public FlcNavAddressIndex getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavAddressIndex_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavAddressIndex_fieldAccessorTable;
    }
    
    public static final class CitiesIndex extends
        com.google.protobuf.GeneratedMessage {
      // Use CitiesIndex.newBuilder() to construct.
      private CitiesIndex() {
        initFields();
      }
      private CitiesIndex(boolean noInit) {}
      
      private static final CitiesIndex defaultInstance;
      public static CitiesIndex getDefaultInstance() {
        return defaultInstance;
      }
      
      @Override
	public CitiesIndex getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavAddressIndex_CitiesIndex_descriptor;
      }
      
      @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavAddressIndex_CitiesIndex_fieldAccessorTable;
      }
      
      // required uint32 type = 2;
      public static final int TYPE_FIELD_NUMBER = 2;
      private boolean hasType;
      private int type_ = 0;
      public boolean hasType() { return hasType; }
      public int getType() { return type_; }
      
      // repeated .CityIndex cities = 5;
      public static final int CITIES_FIELD_NUMBER = 5;
      private java.util.List<net.flcnav.binary.FlcnavOdb.CityIndex> cities_ =
        java.util.Collections.emptyList();
      public java.util.List<net.flcnav.binary.FlcnavOdb.CityIndex> getCitiesList() {
        return cities_;
      }
      public int getCitiesCount() { return cities_.size(); }
      public net.flcnav.binary.FlcnavOdb.CityIndex getCities(int index) {
        return cities_.get(index);
      }
      
      // repeated .CityBlockIndex blocks = 7;
      public static final int BLOCKS_FIELD_NUMBER = 7;
      private java.util.List<net.flcnav.binary.FlcnavOdb.CityBlockIndex> blocks_ =
        java.util.Collections.emptyList();
      public java.util.List<net.flcnav.binary.FlcnavOdb.CityBlockIndex> getBlocksList() {
        return blocks_;
      }
      public int getBlocksCount() { return blocks_.size(); }
      public net.flcnav.binary.FlcnavOdb.CityBlockIndex getBlocks(int index) {
        return blocks_.get(index);
      }
      
      private void initFields() {
      }
      @Override
	public final boolean isInitialized() {
        if (!hasType) return false;
        for (net.flcnav.binary.FlcnavOdb.CityIndex element : getCitiesList()) {
          if (!element.isInitialized()) return false;
        }
        for (net.flcnav.binary.FlcnavOdb.CityBlockIndex element : getBlocksList()) {
          if (!element.isInitialized()) return false;
        }
        return true;
      }
      
      @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasType()) {
          output.writeUInt32(2, getType());
        }
        for (net.flcnav.binary.FlcnavOdb.CityIndex element : getCitiesList()) {
          output.writeMessage(5, element);
        }
        for (net.flcnav.binary.FlcnavOdb.CityBlockIndex element : getBlocksList()) {
          output.writeMessage(7, element);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      @Override
	public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasType()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, getType());
        }
        for (net.flcnav.binary.FlcnavOdb.CityIndex element : getCitiesList()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, element);
        }
        for (net.flcnav.binary.FlcnavOdb.CityBlockIndex element : getBlocksList()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, element);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      @Override
	public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      @Override
	public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex result;
        
        // Construct using net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex();
          return builder;
        }
        
        @Override
		protected net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex internalGetResult() {
          return result;
        }
        
        @Override
		public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex();
          return this;
        }
        
        @Override
		public Builder clone() {
          return create().mergeFrom(result);
        }
        
        @Override
		public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex.getDescriptor();
        }
        
        @Override
		public net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex getDefaultInstanceForType() {
          return net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex.getDefaultInstance();
        }
        
        @Override
		public boolean isInitialized() {
          return result.isInitialized();
        }
        @Override
		public net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        @Override
		public net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          if (result.cities_ != java.util.Collections.EMPTY_LIST) {
            result.cities_ =
              java.util.Collections.unmodifiableList(result.cities_);
          }
          if (result.blocks_ != java.util.Collections.EMPTY_LIST) {
            result.blocks_ =
              java.util.Collections.unmodifiableList(result.blocks_);
          }
          net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex returnMe = result;
          result = null;
          return returnMe;
        }
        
        @Override
		public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex) {
            return mergeFrom((net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex other) {
          if (other == net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex.getDefaultInstance()) return this;
          if (other.hasType()) {
            setType(other.getType());
          }
          if (!other.cities_.isEmpty()) {
            if (result.cities_.isEmpty()) {
              result.cities_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.CityIndex>();
            }
            result.cities_.addAll(other.cities_);
          }
          if (!other.blocks_.isEmpty()) {
            if (result.blocks_.isEmpty()) {
              result.blocks_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.CityBlockIndex>();
            }
            result.blocks_.addAll(other.blocks_);
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        @Override
		public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 16: {
                setType(input.readUInt32());
                break;
              }
              case 42: {
                net.flcnav.binary.FlcnavOdb.CityIndex.Builder subBuilder = net.flcnav.binary.FlcnavOdb.CityIndex.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addCities(subBuilder.buildPartial());
                break;
              }
              case 58: {
                net.flcnav.binary.FlcnavOdb.CityBlockIndex.Builder subBuilder = net.flcnav.binary.FlcnavOdb.CityBlockIndex.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addBlocks(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        
        // required uint32 type = 2;
        public boolean hasType() {
          return result.hasType();
        }
        public int getType() {
          return result.getType();
        }
        public Builder setType(int value) {
          result.hasType = true;
          result.type_ = value;
          return this;
        }
        public Builder clearType() {
          result.hasType = false;
          result.type_ = 0;
          return this;
        }
        
        // repeated .CityIndex cities = 5;
        public java.util.List<net.flcnav.binary.FlcnavOdb.CityIndex> getCitiesList() {
          return java.util.Collections.unmodifiableList(result.cities_);
        }
        public int getCitiesCount() {
          return result.getCitiesCount();
        }
        public net.flcnav.binary.FlcnavOdb.CityIndex getCities(int index) {
          return result.getCities(index);
        }
        public Builder setCities(int index, net.flcnav.binary.FlcnavOdb.CityIndex value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.cities_.set(index, value);
          return this;
        }
        public Builder setCities(int index, net.flcnav.binary.FlcnavOdb.CityIndex.Builder builderForValue) {
          result.cities_.set(index, builderForValue.build());
          return this;
        }
        public Builder addCities(net.flcnav.binary.FlcnavOdb.CityIndex value) {
          if (value == null) {
            throw new NullPointerException();
          }
          if (result.cities_.isEmpty()) {
            result.cities_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.CityIndex>();
          }
          result.cities_.add(value);
          return this;
        }
        public Builder addCities(net.flcnav.binary.FlcnavOdb.CityIndex.Builder builderForValue) {
          if (result.cities_.isEmpty()) {
            result.cities_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.CityIndex>();
          }
          result.cities_.add(builderForValue.build());
          return this;
        }
        public Builder addAllCities(
            java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.CityIndex> values) {
          if (result.cities_.isEmpty()) {
            result.cities_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.CityIndex>();
          }
          super.addAll(values, result.cities_);
          return this;
        }
        public Builder clearCities() {
          result.cities_ = java.util.Collections.emptyList();
          return this;
        }
        
        // repeated .CityBlockIndex blocks = 7;
        public java.util.List<net.flcnav.binary.FlcnavOdb.CityBlockIndex> getBlocksList() {
          return java.util.Collections.unmodifiableList(result.blocks_);
        }
        public int getBlocksCount() {
          return result.getBlocksCount();
        }
        public net.flcnav.binary.FlcnavOdb.CityBlockIndex getBlocks(int index) {
          return result.getBlocks(index);
        }
        public Builder setBlocks(int index, net.flcnav.binary.FlcnavOdb.CityBlockIndex value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.blocks_.set(index, value);
          return this;
        }
        public Builder setBlocks(int index, net.flcnav.binary.FlcnavOdb.CityBlockIndex.Builder builderForValue) {
          result.blocks_.set(index, builderForValue.build());
          return this;
        }
        public Builder addBlocks(net.flcnav.binary.FlcnavOdb.CityBlockIndex value) {
          if (value == null) {
            throw new NullPointerException();
          }
          if (result.blocks_.isEmpty()) {
            result.blocks_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.CityBlockIndex>();
          }
          result.blocks_.add(value);
          return this;
        }
        public Builder addBlocks(net.flcnav.binary.FlcnavOdb.CityBlockIndex.Builder builderForValue) {
          if (result.blocks_.isEmpty()) {
            result.blocks_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.CityBlockIndex>();
          }
          result.blocks_.add(builderForValue.build());
          return this;
        }
        public Builder addAllBlocks(
            java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.CityBlockIndex> values) {
          if (result.blocks_.isEmpty()) {
            result.blocks_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.CityBlockIndex>();
          }
          super.addAll(values, result.blocks_);
          return this;
        }
        public Builder clearBlocks() {
          result.blocks_ = java.util.Collections.emptyList();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:FlcNavAddressIndex.CitiesIndex)
      }
      
      static {
        defaultInstance = new CitiesIndex(true);
        net.flcnav.binary.FlcnavOdb.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:FlcNavAddressIndex.CitiesIndex)
    }
    
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional string name_en = 2;
    public static final int NAME_EN_FIELD_NUMBER = 2;
    private boolean hasNameEn;
    private java.lang.String nameEn_ = "";
    public boolean hasNameEn() { return hasNameEn; }
    public java.lang.String getNameEn() { return nameEn_; }
    
    // optional .FlcNavTileBox boundaries = 3;
    public static final int BOUNDARIES_FIELD_NUMBER = 3;
    private boolean hasBoundaries;
    private net.flcnav.binary.FlcnavOdb.FlcNavTileBox boundaries_;
    public boolean hasBoundaries() { return hasBoundaries; }
    public net.flcnav.binary.FlcnavOdb.FlcNavTileBox getBoundaries() { return boundaries_; }
    
    // repeated .FlcNavAddressIndex.CitiesIndex cities = 6;
    public static final int CITIES_FIELD_NUMBER = 6;
    private java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex> cities_ =
      java.util.Collections.emptyList();
    public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex> getCitiesList() {
      return cities_;
    }
    public int getCitiesCount() { return cities_.size(); }
    public net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex getCities(int index) {
      return cities_.get(index);
    }
    
    // optional .FlcNavAddressNameIndexData nameIndex = 7;
    public static final int NAMEINDEX_FIELD_NUMBER = 7;
    private boolean hasNameIndex;
    private net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData nameIndex_;
    public boolean hasNameIndex() { return hasNameIndex; }
    public net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData getNameIndex() { return nameIndex_; }
    
    private void initFields() {
      boundaries_ = net.flcnav.binary.FlcnavOdb.FlcNavTileBox.getDefaultInstance();
      nameIndex_ = net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.getDefaultInstance();
    }
    @Override
	public final boolean isInitialized() {
      if (!hasName) return false;
      if (hasBoundaries()) {
        if (!getBoundaries().isInitialized()) return false;
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex element : getCitiesList()) {
        if (!element.isInitialized()) return false;
      }
      if (hasNameIndex()) {
        if (!getNameIndex().isInitialized()) return false;
      }
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasNameEn()) {
        output.writeString(2, getNameEn());
      }
      if (hasBoundaries()) {
        output.writeMessage(3, getBoundaries());
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex element : getCitiesList()) {
        output.writeMessage(6, element);
      }
      if (hasNameIndex()) {
        output.writeMessage(7, getNameIndex());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasNameEn()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getNameEn());
      }
      if (hasBoundaries()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getBoundaries());
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex element : getCitiesList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, element);
      }
      if (hasNameIndex()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getNameIndex());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.cities_ != java.util.Collections.EMPTY_LIST) {
          result.cities_ =
            java.util.Collections.unmodifiableList(result.cities_);
        }
        net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex other) {
        if (other == net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasNameEn()) {
          setNameEn(other.getNameEn());
        }
        if (other.hasBoundaries()) {
          mergeBoundaries(other.getBoundaries());
        }
        if (!other.cities_.isEmpty()) {
          if (result.cities_.isEmpty()) {
            result.cities_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex>();
          }
          result.cities_.addAll(other.cities_);
        }
        if (other.hasNameIndex()) {
          mergeNameIndex(other.getNameIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 18: {
              setNameEn(input.readString());
              break;
            }
            case 26: {
              net.flcnav.binary.FlcnavOdb.FlcNavTileBox.Builder subBuilder = net.flcnav.binary.FlcnavOdb.FlcNavTileBox.newBuilder();
              if (hasBoundaries()) {
                subBuilder.mergeFrom(getBoundaries());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setBoundaries(subBuilder.buildPartial());
              break;
            }
            case 50: {
              net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex.Builder subBuilder = net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCities(subBuilder.buildPartial());
              break;
            }
            case 58: {
              net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.Builder subBuilder = net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.newBuilder();
              if (hasNameIndex()) {
                subBuilder.mergeFrom(getNameIndex());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setNameIndex(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional string name_en = 2;
      public boolean hasNameEn() {
        return result.hasNameEn();
      }
      public java.lang.String getNameEn() {
        return result.getNameEn();
      }
      public Builder setNameEn(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasNameEn = true;
        result.nameEn_ = value;
        return this;
      }
      public Builder clearNameEn() {
        result.hasNameEn = false;
        result.nameEn_ = getDefaultInstance().getNameEn();
        return this;
      }
      
      // optional .FlcNavTileBox boundaries = 3;
      public boolean hasBoundaries() {
        return result.hasBoundaries();
      }
      public net.flcnav.binary.FlcnavOdb.FlcNavTileBox getBoundaries() {
        return result.getBoundaries();
      }
      public Builder setBoundaries(net.flcnav.binary.FlcnavOdb.FlcNavTileBox value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasBoundaries = true;
        result.boundaries_ = value;
        return this;
      }
      public Builder setBoundaries(net.flcnav.binary.FlcnavOdb.FlcNavTileBox.Builder builderForValue) {
        result.hasBoundaries = true;
        result.boundaries_ = builderForValue.build();
        return this;
      }
      public Builder mergeBoundaries(net.flcnav.binary.FlcnavOdb.FlcNavTileBox value) {
        if (result.hasBoundaries() &&
            result.boundaries_ != net.flcnav.binary.FlcnavOdb.FlcNavTileBox.getDefaultInstance()) {
          result.boundaries_ =
            net.flcnav.binary.FlcnavOdb.FlcNavTileBox.newBuilder(result.boundaries_).mergeFrom(value).buildPartial();
        } else {
          result.boundaries_ = value;
        }
        result.hasBoundaries = true;
        return this;
      }
      public Builder clearBoundaries() {
        result.hasBoundaries = false;
        result.boundaries_ = net.flcnav.binary.FlcnavOdb.FlcNavTileBox.getDefaultInstance();
        return this;
      }
      
      // repeated .FlcNavAddressIndex.CitiesIndex cities = 6;
      public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex> getCitiesList() {
        return java.util.Collections.unmodifiableList(result.cities_);
      }
      public int getCitiesCount() {
        return result.getCitiesCount();
      }
      public net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex getCities(int index) {
        return result.getCities(index);
      }
      public Builder setCities(int index, net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.cities_.set(index, value);
        return this;
      }
      public Builder setCities(int index, net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex.Builder builderForValue) {
        result.cities_.set(index, builderForValue.build());
        return this;
      }
      public Builder addCities(net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.cities_.isEmpty()) {
          result.cities_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex>();
        }
        result.cities_.add(value);
        return this;
      }
      public Builder addCities(net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex.Builder builderForValue) {
        if (result.cities_.isEmpty()) {
          result.cities_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex>();
        }
        result.cities_.add(builderForValue.build());
        return this;
      }
      public Builder addAllCities(
          java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex> values) {
        if (result.cities_.isEmpty()) {
          result.cities_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex>();
        }
        super.addAll(values, result.cities_);
        return this;
      }
      public Builder clearCities() {
        result.cities_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .FlcNavAddressNameIndexData nameIndex = 7;
      public boolean hasNameIndex() {
        return result.hasNameIndex();
      }
      public net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData getNameIndex() {
        return result.getNameIndex();
      }
      public Builder setNameIndex(net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasNameIndex = true;
        result.nameIndex_ = value;
        return this;
      }
      public Builder setNameIndex(net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.Builder builderForValue) {
        result.hasNameIndex = true;
        result.nameIndex_ = builderForValue.build();
        return this;
      }
      public Builder mergeNameIndex(net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData value) {
        if (result.hasNameIndex() &&
            result.nameIndex_ != net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.getDefaultInstance()) {
          result.nameIndex_ =
            net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.newBuilder(result.nameIndex_).mergeFrom(value).buildPartial();
        } else {
          result.nameIndex_ = value;
        }
        result.hasNameIndex = true;
        return this;
      }
      public Builder clearNameIndex() {
        result.hasNameIndex = false;
        result.nameIndex_ = net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:FlcNavAddressIndex)
    }
    
    static {
      defaultInstance = new FlcNavAddressIndex(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FlcNavAddressIndex)
  }
  
  public static final class FlcNavAddressNameIndexData extends
      com.google.protobuf.GeneratedMessage {
    // Use FlcNavAddressNameIndexData.newBuilder() to construct.
    private FlcNavAddressNameIndexData() {
      initFields();
    }
    private FlcNavAddressNameIndexData(boolean noInit) {}
    
    private static final FlcNavAddressNameIndexData defaultInstance;
    public static FlcNavAddressNameIndexData getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public FlcNavAddressNameIndexData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavAddressNameIndexData_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavAddressNameIndexData_fieldAccessorTable;
    }
    
    public static final class AddressNameIndexData extends
        com.google.protobuf.GeneratedMessage {
      // Use AddressNameIndexData.newBuilder() to construct.
      private AddressNameIndexData() {
        initFields();
      }
      private AddressNameIndexData(boolean noInit) {}
      
      private static final AddressNameIndexData defaultInstance;
      public static AddressNameIndexData getDefaultInstance() {
        return defaultInstance;
      }
      
      @Override
	public AddressNameIndexData getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavAddressNameIndexData_AddressNameIndexData_descriptor;
      }
      
      @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavAddressNameIndexData_AddressNameIndexData_fieldAccessorTable;
      }
      
      // repeated .AddressNameIndexDataAtom atom = 4;
      public static final int ATOM_FIELD_NUMBER = 4;
      private java.util.List<net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom> atom_ =
        java.util.Collections.emptyList();
      public java.util.List<net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom> getAtomList() {
        return atom_;
      }
      public int getAtomCount() { return atom_.size(); }
      public net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom getAtom(int index) {
        return atom_.get(index);
      }
      
      private void initFields() {
      }
      @Override
	public final boolean isInitialized() {
        for (net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom element : getAtomList()) {
          if (!element.isInitialized()) return false;
        }
        return true;
      }
      
      @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom element : getAtomList()) {
          output.writeMessage(4, element);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      @Override
	public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        for (net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom element : getAtomList()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, element);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      @Override
	public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      @Override
	public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData result;
        
        // Construct using net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData();
          return builder;
        }
        
        @Override
		protected net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData internalGetResult() {
          return result;
        }
        
        @Override
		public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData();
          return this;
        }
        
        @Override
		public Builder clone() {
          return create().mergeFrom(result);
        }
        
        @Override
		public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData.getDescriptor();
        }
        
        @Override
		public net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData getDefaultInstanceForType() {
          return net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData.getDefaultInstance();
        }
        
        @Override
		public boolean isInitialized() {
          return result.isInitialized();
        }
        @Override
		public net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        @Override
		public net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          if (result.atom_ != java.util.Collections.EMPTY_LIST) {
            result.atom_ =
              java.util.Collections.unmodifiableList(result.atom_);
          }
          net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData returnMe = result;
          result = null;
          return returnMe;
        }
        
        @Override
		public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData) {
            return mergeFrom((net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData other) {
          if (other == net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData.getDefaultInstance()) return this;
          if (!other.atom_.isEmpty()) {
            if (result.atom_.isEmpty()) {
              result.atom_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom>();
            }
            result.atom_.addAll(other.atom_);
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        @Override
		public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 34: {
                net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom.Builder subBuilder = net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addAtom(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        
        // repeated .AddressNameIndexDataAtom atom = 4;
        public java.util.List<net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom> getAtomList() {
          return java.util.Collections.unmodifiableList(result.atom_);
        }
        public int getAtomCount() {
          return result.getAtomCount();
        }
        public net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom getAtom(int index) {
          return result.getAtom(index);
        }
        public Builder setAtom(int index, net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.atom_.set(index, value);
          return this;
        }
        public Builder setAtom(int index, net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom.Builder builderForValue) {
          result.atom_.set(index, builderForValue.build());
          return this;
        }
        public Builder addAtom(net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom value) {
          if (value == null) {
            throw new NullPointerException();
          }
          if (result.atom_.isEmpty()) {
            result.atom_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom>();
          }
          result.atom_.add(value);
          return this;
        }
        public Builder addAtom(net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom.Builder builderForValue) {
          if (result.atom_.isEmpty()) {
            result.atom_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom>();
          }
          result.atom_.add(builderForValue.build());
          return this;
        }
        public Builder addAllAtom(
            java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom> values) {
          if (result.atom_.isEmpty()) {
            result.atom_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom>();
          }
          super.addAll(values, result.atom_);
          return this;
        }
        public Builder clearAtom() {
          result.atom_ = java.util.Collections.emptyList();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:FlcNavAddressNameIndexData.AddressNameIndexData)
      }
      
      static {
        defaultInstance = new AddressNameIndexData(true);
        net.flcnav.binary.FlcnavOdb.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:FlcNavAddressNameIndexData.AddressNameIndexData)
    }
    
    // required .IndexedStringTable table = 4;
    public static final int TABLE_FIELD_NUMBER = 4;
    private boolean hasTable;
    private net.flcnav.binary.FlcnavOdb.IndexedStringTable table_;
    public boolean hasTable() { return hasTable; }
    public net.flcnav.binary.FlcnavOdb.IndexedStringTable getTable() { return table_; }
    
    // repeated .FlcNavAddressNameIndexData.AddressNameIndexData atom = 7;
    public static final int ATOM_FIELD_NUMBER = 7;
    private java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData> atom_ =
      java.util.Collections.emptyList();
    public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData> getAtomList() {
      return atom_;
    }
    public int getAtomCount() { return atom_.size(); }
    public net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData getAtom(int index) {
      return atom_.get(index);
    }
    
    private void initFields() {
      table_ = net.flcnav.binary.FlcnavOdb.IndexedStringTable.getDefaultInstance();
    }
    @Override
	public final boolean isInitialized() {
      if (!hasTable) return false;
      for (net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData element : getAtomList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTable()) {
        output.writeMessage(4, getTable());
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData element : getAtomList()) {
        output.writeMessage(7, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTable()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTable());
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData element : getAtomList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.atom_ != java.util.Collections.EMPTY_LIST) {
          result.atom_ =
            java.util.Collections.unmodifiableList(result.atom_);
        }
        net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData other) {
        if (other == net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.getDefaultInstance()) return this;
        if (other.hasTable()) {
          mergeTable(other.getTable());
        }
        if (!other.atom_.isEmpty()) {
          if (result.atom_.isEmpty()) {
            result.atom_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData>();
          }
          result.atom_.addAll(other.atom_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 34: {
              net.flcnav.binary.FlcnavOdb.IndexedStringTable.Builder subBuilder = net.flcnav.binary.FlcnavOdb.IndexedStringTable.newBuilder();
              if (hasTable()) {
                subBuilder.mergeFrom(getTable());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTable(subBuilder.buildPartial());
              break;
            }
            case 58: {
              net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData.Builder subBuilder = net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAtom(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .IndexedStringTable table = 4;
      public boolean hasTable() {
        return result.hasTable();
      }
      public net.flcnav.binary.FlcnavOdb.IndexedStringTable getTable() {
        return result.getTable();
      }
      public Builder setTable(net.flcnav.binary.FlcnavOdb.IndexedStringTable value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTable = true;
        result.table_ = value;
        return this;
      }
      public Builder setTable(net.flcnav.binary.FlcnavOdb.IndexedStringTable.Builder builderForValue) {
        result.hasTable = true;
        result.table_ = builderForValue.build();
        return this;
      }
      public Builder mergeTable(net.flcnav.binary.FlcnavOdb.IndexedStringTable value) {
        if (result.hasTable() &&
            result.table_ != net.flcnav.binary.FlcnavOdb.IndexedStringTable.getDefaultInstance()) {
          result.table_ =
            net.flcnav.binary.FlcnavOdb.IndexedStringTable.newBuilder(result.table_).mergeFrom(value).buildPartial();
        } else {
          result.table_ = value;
        }
        result.hasTable = true;
        return this;
      }
      public Builder clearTable() {
        result.hasTable = false;
        result.table_ = net.flcnav.binary.FlcnavOdb.IndexedStringTable.getDefaultInstance();
        return this;
      }
      
      // repeated .FlcNavAddressNameIndexData.AddressNameIndexData atom = 7;
      public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData> getAtomList() {
        return java.util.Collections.unmodifiableList(result.atom_);
      }
      public int getAtomCount() {
        return result.getAtomCount();
      }
      public net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData getAtom(int index) {
        return result.getAtom(index);
      }
      public Builder setAtom(int index, net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.atom_.set(index, value);
        return this;
      }
      public Builder setAtom(int index, net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData.Builder builderForValue) {
        result.atom_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAtom(net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.atom_.isEmpty()) {
          result.atom_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData>();
        }
        result.atom_.add(value);
        return this;
      }
      public Builder addAtom(net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData.Builder builderForValue) {
        if (result.atom_.isEmpty()) {
          result.atom_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData>();
        }
        result.atom_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAtom(
          java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData> values) {
        if (result.atom_.isEmpty()) {
          result.atom_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData>();
        }
        super.addAll(values, result.atom_);
        return this;
      }
      public Builder clearAtom() {
        result.atom_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:FlcNavAddressNameIndexData)
    }
    
    static {
      defaultInstance = new FlcNavAddressNameIndexData(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FlcNavAddressNameIndexData)
  }
  
  public static final class AddressNameIndexDataAtom extends
      com.google.protobuf.GeneratedMessage {
    // Use AddressNameIndexDataAtom.newBuilder() to construct.
    private AddressNameIndexDataAtom() {
      initFields();
    }
    private AddressNameIndexDataAtom(boolean noInit) {}
    
    private static final AddressNameIndexDataAtom defaultInstance;
    public static AddressNameIndexDataAtom getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public AddressNameIndexDataAtom getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_AddressNameIndexDataAtom_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_AddressNameIndexDataAtom_fieldAccessorTable;
    }
    
    // optional string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional string nameEn = 2;
    public static final int NAMEEN_FIELD_NUMBER = 2;
    private boolean hasNameEn;
    private java.lang.String nameEn_ = "";
    public boolean hasNameEn() { return hasNameEn; }
    public java.lang.String getNameEn() { return nameEn_; }
    
    // required uint32 type = 3;
    public static final int TYPE_FIELD_NUMBER = 3;
    private boolean hasType;
    private int type_ = 0;
    public boolean hasType() { return hasType; }
    public int getType() { return type_; }
    
    // repeated int32 shiftToIndex = 5;
    public static final int SHIFTTOINDEX_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> shiftToIndex_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getShiftToIndexList() {
      return shiftToIndex_;
    }
    public int getShiftToIndexCount() { return shiftToIndex_.size(); }
    public int getShiftToIndex(int index) {
      return shiftToIndex_.get(index);
    }
    
    // repeated int32 shiftToCityIndex = 6;
    public static final int SHIFTTOCITYINDEX_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> shiftToCityIndex_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getShiftToCityIndexList() {
      return shiftToCityIndex_;
    }
    public int getShiftToCityIndexCount() { return shiftToCityIndex_.size(); }
    public int getShiftToCityIndex(int index) {
      return shiftToCityIndex_.get(index);
    }
    
    private void initFields() {
    }
    @Override
	public final boolean isInitialized() {
      if (!hasType) return false;
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasNameEn()) {
        output.writeString(2, getNameEn());
      }
      if (hasType()) {
        output.writeUInt32(3, getType());
      }
      for (int element : getShiftToIndexList()) {
        output.writeInt32(5, element);
      }
      for (int element : getShiftToCityIndexList()) {
        output.writeInt32(6, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasNameEn()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getNameEn());
      }
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getType());
      }
      {
        int dataSize = 0;
        for (int element : getShiftToIndexList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getShiftToIndexList().size();
      }
      {
        int dataSize = 0;
        for (int element : getShiftToCityIndexList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getShiftToCityIndexList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.shiftToIndex_ != java.util.Collections.EMPTY_LIST) {
          result.shiftToIndex_ =
            java.util.Collections.unmodifiableList(result.shiftToIndex_);
        }
        if (result.shiftToCityIndex_ != java.util.Collections.EMPTY_LIST) {
          result.shiftToCityIndex_ =
            java.util.Collections.unmodifiableList(result.shiftToCityIndex_);
        }
        net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom other) {
        if (other == net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasNameEn()) {
          setNameEn(other.getNameEn());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (!other.shiftToIndex_.isEmpty()) {
          if (result.shiftToIndex_.isEmpty()) {
            result.shiftToIndex_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.shiftToIndex_.addAll(other.shiftToIndex_);
        }
        if (!other.shiftToCityIndex_.isEmpty()) {
          if (result.shiftToCityIndex_.isEmpty()) {
            result.shiftToCityIndex_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.shiftToCityIndex_.addAll(other.shiftToCityIndex_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 18: {
              setNameEn(input.readString());
              break;
            }
            case 24: {
              setType(input.readUInt32());
              break;
            }
            case 40: {
              addShiftToIndex(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addShiftToIndex(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              addShiftToCityIndex(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addShiftToCityIndex(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // optional string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional string nameEn = 2;
      public boolean hasNameEn() {
        return result.hasNameEn();
      }
      public java.lang.String getNameEn() {
        return result.getNameEn();
      }
      public Builder setNameEn(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasNameEn = true;
        result.nameEn_ = value;
        return this;
      }
      public Builder clearNameEn() {
        result.hasNameEn = false;
        result.nameEn_ = getDefaultInstance().getNameEn();
        return this;
      }
      
      // required uint32 type = 3;
      public boolean hasType() {
        return result.hasType();
      }
      public int getType() {
        return result.getType();
      }
      public Builder setType(int value) {
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = 0;
        return this;
      }
      
      // repeated int32 shiftToIndex = 5;
      public java.util.List<java.lang.Integer> getShiftToIndexList() {
        return java.util.Collections.unmodifiableList(result.shiftToIndex_);
      }
      public int getShiftToIndexCount() {
        return result.getShiftToIndexCount();
      }
      public int getShiftToIndex(int index) {
        return result.getShiftToIndex(index);
      }
      public Builder setShiftToIndex(int index, int value) {
        result.shiftToIndex_.set(index, value);
        return this;
      }
      public Builder addShiftToIndex(int value) {
        if (result.shiftToIndex_.isEmpty()) {
          result.shiftToIndex_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.shiftToIndex_.add(value);
        return this;
      }
      public Builder addAllShiftToIndex(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.shiftToIndex_.isEmpty()) {
          result.shiftToIndex_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.shiftToIndex_);
        return this;
      }
      public Builder clearShiftToIndex() {
        result.shiftToIndex_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated int32 shiftToCityIndex = 6;
      public java.util.List<java.lang.Integer> getShiftToCityIndexList() {
        return java.util.Collections.unmodifiableList(result.shiftToCityIndex_);
      }
      public int getShiftToCityIndexCount() {
        return result.getShiftToCityIndexCount();
      }
      public int getShiftToCityIndex(int index) {
        return result.getShiftToCityIndex(index);
      }
      public Builder setShiftToCityIndex(int index, int value) {
        result.shiftToCityIndex_.set(index, value);
        return this;
      }
      public Builder addShiftToCityIndex(int value) {
        if (result.shiftToCityIndex_.isEmpty()) {
          result.shiftToCityIndex_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.shiftToCityIndex_.add(value);
        return this;
      }
      public Builder addAllShiftToCityIndex(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.shiftToCityIndex_.isEmpty()) {
          result.shiftToCityIndex_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.shiftToCityIndex_);
        return this;
      }
      public Builder clearShiftToCityIndex() {
        result.shiftToCityIndex_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:AddressNameIndexDataAtom)
    }
    
    static {
      defaultInstance = new AddressNameIndexDataAtom(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:AddressNameIndexDataAtom)
  }
  
  public static final class CityIndex extends
      com.google.protobuf.GeneratedMessage {
    // Use CityIndex.newBuilder() to construct.
    private CityIndex() {
      initFields();
    }
    private CityIndex(boolean noInit) {}
    
    private static final CityIndex defaultInstance;
    public static CityIndex getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public CityIndex getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_CityIndex_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_CityIndex_fieldAccessorTable;
    }
    
    // optional uint32 city_type = 1;
    public static final int CITY_TYPE_FIELD_NUMBER = 1;
    private boolean hasCityType;
    private int cityType_ = 0;
    public boolean hasCityType() { return hasCityType; }
    public int getCityType() { return cityType_; }
    
    // required string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional string name_en = 3;
    public static final int NAME_EN_FIELD_NUMBER = 3;
    private boolean hasNameEn;
    private java.lang.String nameEn_ = "";
    public boolean hasNameEn() { return hasNameEn; }
    public java.lang.String getNameEn() { return nameEn_; }
    
    // optional uint64 id = 4;
    public static final int ID_FIELD_NUMBER = 4;
    private boolean hasId;
    private long id_ = 0L;
    public boolean hasId() { return hasId; }
    public long getId() { return id_; }
    
    // required uint32 x = 5;
    public static final int X_FIELD_NUMBER = 5;
    private boolean hasX;
    private int x_ = 0;
    public boolean hasX() { return hasX; }
    public int getX() { return x_; }
    
    // required uint32 y = 6;
    public static final int Y_FIELD_NUMBER = 6;
    private boolean hasY;
    private int y_ = 0;
    public boolean hasY() { return hasY; }
    public int getY() { return y_; }
    
    // optional fixed32 shiftToCityBlockIndex = 10;
    public static final int SHIFTTOCITYBLOCKINDEX_FIELD_NUMBER = 10;
    private boolean hasShiftToCityBlockIndex;
    private int shiftToCityBlockIndex_ = 0;
    public boolean hasShiftToCityBlockIndex() { return hasShiftToCityBlockIndex; }
    public int getShiftToCityBlockIndex() { return shiftToCityBlockIndex_; }
    
    private void initFields() {
    }
    @Override
	public final boolean isInitialized() {
      if (!hasName) return false;
      if (!hasX) return false;
      if (!hasY) return false;
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasCityType()) {
        output.writeUInt32(1, getCityType());
      }
      if (hasName()) {
        output.writeString(2, getName());
      }
      if (hasNameEn()) {
        output.writeString(3, getNameEn());
      }
      if (hasId()) {
        output.writeUInt64(4, getId());
      }
      if (hasX()) {
        output.writeUInt32(5, getX());
      }
      if (hasY()) {
        output.writeUInt32(6, getY());
      }
      if (hasShiftToCityBlockIndex()) {
        output.writeFixed32(10, getShiftToCityBlockIndex());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasCityType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getCityType());
      }
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getName());
      }
      if (hasNameEn()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getNameEn());
      }
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, getId());
      }
      if (hasX()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, getX());
      }
      if (hasY()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, getY());
      }
      if (hasShiftToCityBlockIndex()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(10, getShiftToCityBlockIndex());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.CityIndex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.CityIndex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.CityIndex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.CityIndex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.CityIndex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.CityIndex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.CityIndex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.CityIndex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.CityIndex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.CityIndex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.CityIndex prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.CityIndex result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.CityIndex.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.CityIndex();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.CityIndex internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.CityIndex();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.CityIndex.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.CityIndex getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.CityIndex.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.CityIndex build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.CityIndex buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.CityIndex buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        net.flcnav.binary.FlcnavOdb.CityIndex returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.CityIndex) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.CityIndex)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.CityIndex other) {
        if (other == net.flcnav.binary.FlcnavOdb.CityIndex.getDefaultInstance()) return this;
        if (other.hasCityType()) {
          setCityType(other.getCityType());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasNameEn()) {
          setNameEn(other.getNameEn());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasShiftToCityBlockIndex()) {
          setShiftToCityBlockIndex(other.getShiftToCityBlockIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setCityType(input.readUInt32());
              break;
            }
            case 18: {
              setName(input.readString());
              break;
            }
            case 26: {
              setNameEn(input.readString());
              break;
            }
            case 32: {
              setId(input.readUInt64());
              break;
            }
            case 40: {
              setX(input.readUInt32());
              break;
            }
            case 48: {
              setY(input.readUInt32());
              break;
            }
            case 85: {
              setShiftToCityBlockIndex(input.readFixed32());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 city_type = 1;
      public boolean hasCityType() {
        return result.hasCityType();
      }
      public int getCityType() {
        return result.getCityType();
      }
      public Builder setCityType(int value) {
        result.hasCityType = true;
        result.cityType_ = value;
        return this;
      }
      public Builder clearCityType() {
        result.hasCityType = false;
        result.cityType_ = 0;
        return this;
      }
      
      // required string name = 2;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional string name_en = 3;
      public boolean hasNameEn() {
        return result.hasNameEn();
      }
      public java.lang.String getNameEn() {
        return result.getNameEn();
      }
      public Builder setNameEn(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasNameEn = true;
        result.nameEn_ = value;
        return this;
      }
      public Builder clearNameEn() {
        result.hasNameEn = false;
        result.nameEn_ = getDefaultInstance().getNameEn();
        return this;
      }
      
      // optional uint64 id = 4;
      public boolean hasId() {
        return result.hasId();
      }
      public long getId() {
        return result.getId();
      }
      public Builder setId(long value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0L;
        return this;
      }
      
      // required uint32 x = 5;
      public boolean hasX() {
        return result.hasX();
      }
      public int getX() {
        return result.getX();
      }
      public Builder setX(int value) {
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder clearX() {
        result.hasX = false;
        result.x_ = 0;
        return this;
      }
      
      // required uint32 y = 6;
      public boolean hasY() {
        return result.hasY();
      }
      public int getY() {
        return result.getY();
      }
      public Builder setY(int value) {
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder clearY() {
        result.hasY = false;
        result.y_ = 0;
        return this;
      }
      
      // optional fixed32 shiftToCityBlockIndex = 10;
      public boolean hasShiftToCityBlockIndex() {
        return result.hasShiftToCityBlockIndex();
      }
      public int getShiftToCityBlockIndex() {
        return result.getShiftToCityBlockIndex();
      }
      public Builder setShiftToCityBlockIndex(int value) {
        result.hasShiftToCityBlockIndex = true;
        result.shiftToCityBlockIndex_ = value;
        return this;
      }
      public Builder clearShiftToCityBlockIndex() {
        result.hasShiftToCityBlockIndex = false;
        result.shiftToCityBlockIndex_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CityIndex)
    }
    
    static {
      defaultInstance = new CityIndex(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CityIndex)
  }
  
  public static final class CityBlockIndex extends
      com.google.protobuf.GeneratedMessage {
    // Use CityBlockIndex.newBuilder() to construct.
    private CityBlockIndex() {
      initFields();
    }
    private CityBlockIndex(boolean noInit) {}
    
    private static final CityBlockIndex defaultInstance;
    public static CityBlockIndex getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public CityBlockIndex getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_CityBlockIndex_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_CityBlockIndex_fieldAccessorTable;
    }
    
    // optional fixed32 shiftToCityIndex = 4;
    public static final int SHIFTTOCITYINDEX_FIELD_NUMBER = 4;
    private boolean hasShiftToCityIndex;
    private int shiftToCityIndex_ = 0;
    public boolean hasShiftToCityIndex() { return hasShiftToCityIndex; }
    public int getShiftToCityIndex() { return shiftToCityIndex_; }
    
    // repeated .BuildingIndex buildings = 10;
    public static final int BUILDINGS_FIELD_NUMBER = 10;
    private java.util.List<net.flcnav.binary.FlcnavOdb.BuildingIndex> buildings_ =
      java.util.Collections.emptyList();
    public java.util.List<net.flcnav.binary.FlcnavOdb.BuildingIndex> getBuildingsList() {
      return buildings_;
    }
    public int getBuildingsCount() { return buildings_.size(); }
    public net.flcnav.binary.FlcnavOdb.BuildingIndex getBuildings(int index) {
      return buildings_.get(index);
    }
    
    // repeated .StreetIndex streets = 12;
    public static final int STREETS_FIELD_NUMBER = 12;
    private java.util.List<net.flcnav.binary.FlcnavOdb.StreetIndex> streets_ =
      java.util.Collections.emptyList();
    public java.util.List<net.flcnav.binary.FlcnavOdb.StreetIndex> getStreetsList() {
      return streets_;
    }
    public int getStreetsCount() { return streets_.size(); }
    public net.flcnav.binary.FlcnavOdb.StreetIndex getStreets(int index) {
      return streets_.get(index);
    }
    
    private void initFields() {
    }
    @Override
	public final boolean isInitialized() {
      for (net.flcnav.binary.FlcnavOdb.BuildingIndex element : getBuildingsList()) {
        if (!element.isInitialized()) return false;
      }
      for (net.flcnav.binary.FlcnavOdb.StreetIndex element : getStreetsList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasShiftToCityIndex()) {
        output.writeFixed32(4, getShiftToCityIndex());
      }
      for (net.flcnav.binary.FlcnavOdb.BuildingIndex element : getBuildingsList()) {
        output.writeMessage(10, element);
      }
      for (net.flcnav.binary.FlcnavOdb.StreetIndex element : getStreetsList()) {
        output.writeMessage(12, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasShiftToCityIndex()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(4, getShiftToCityIndex());
      }
      for (net.flcnav.binary.FlcnavOdb.BuildingIndex element : getBuildingsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, element);
      }
      for (net.flcnav.binary.FlcnavOdb.StreetIndex element : getStreetsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.CityBlockIndex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.CityBlockIndex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.CityBlockIndex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.CityBlockIndex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.CityBlockIndex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.CityBlockIndex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.CityBlockIndex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.CityBlockIndex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.CityBlockIndex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.CityBlockIndex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.CityBlockIndex prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.CityBlockIndex result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.CityBlockIndex.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.CityBlockIndex();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.CityBlockIndex internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.CityBlockIndex();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.CityBlockIndex.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.CityBlockIndex getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.CityBlockIndex.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.CityBlockIndex build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.CityBlockIndex buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.CityBlockIndex buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.buildings_ != java.util.Collections.EMPTY_LIST) {
          result.buildings_ =
            java.util.Collections.unmodifiableList(result.buildings_);
        }
        if (result.streets_ != java.util.Collections.EMPTY_LIST) {
          result.streets_ =
            java.util.Collections.unmodifiableList(result.streets_);
        }
        net.flcnav.binary.FlcnavOdb.CityBlockIndex returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.CityBlockIndex) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.CityBlockIndex)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.CityBlockIndex other) {
        if (other == net.flcnav.binary.FlcnavOdb.CityBlockIndex.getDefaultInstance()) return this;
        if (other.hasShiftToCityIndex()) {
          setShiftToCityIndex(other.getShiftToCityIndex());
        }
        if (!other.buildings_.isEmpty()) {
          if (result.buildings_.isEmpty()) {
            result.buildings_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.BuildingIndex>();
          }
          result.buildings_.addAll(other.buildings_);
        }
        if (!other.streets_.isEmpty()) {
          if (result.streets_.isEmpty()) {
            result.streets_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.StreetIndex>();
          }
          result.streets_.addAll(other.streets_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 37: {
              setShiftToCityIndex(input.readFixed32());
              break;
            }
            case 82: {
              net.flcnav.binary.FlcnavOdb.BuildingIndex.Builder subBuilder = net.flcnav.binary.FlcnavOdb.BuildingIndex.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addBuildings(subBuilder.buildPartial());
              break;
            }
            case 98: {
              net.flcnav.binary.FlcnavOdb.StreetIndex.Builder subBuilder = net.flcnav.binary.FlcnavOdb.StreetIndex.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addStreets(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional fixed32 shiftToCityIndex = 4;
      public boolean hasShiftToCityIndex() {
        return result.hasShiftToCityIndex();
      }
      public int getShiftToCityIndex() {
        return result.getShiftToCityIndex();
      }
      public Builder setShiftToCityIndex(int value) {
        result.hasShiftToCityIndex = true;
        result.shiftToCityIndex_ = value;
        return this;
      }
      public Builder clearShiftToCityIndex() {
        result.hasShiftToCityIndex = false;
        result.shiftToCityIndex_ = 0;
        return this;
      }
      
      // repeated .BuildingIndex buildings = 10;
      public java.util.List<net.flcnav.binary.FlcnavOdb.BuildingIndex> getBuildingsList() {
        return java.util.Collections.unmodifiableList(result.buildings_);
      }
      public int getBuildingsCount() {
        return result.getBuildingsCount();
      }
      public net.flcnav.binary.FlcnavOdb.BuildingIndex getBuildings(int index) {
        return result.getBuildings(index);
      }
      public Builder setBuildings(int index, net.flcnav.binary.FlcnavOdb.BuildingIndex value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.buildings_.set(index, value);
        return this;
      }
      public Builder setBuildings(int index, net.flcnav.binary.FlcnavOdb.BuildingIndex.Builder builderForValue) {
        result.buildings_.set(index, builderForValue.build());
        return this;
      }
      public Builder addBuildings(net.flcnav.binary.FlcnavOdb.BuildingIndex value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.buildings_.isEmpty()) {
          result.buildings_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.BuildingIndex>();
        }
        result.buildings_.add(value);
        return this;
      }
      public Builder addBuildings(net.flcnav.binary.FlcnavOdb.BuildingIndex.Builder builderForValue) {
        if (result.buildings_.isEmpty()) {
          result.buildings_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.BuildingIndex>();
        }
        result.buildings_.add(builderForValue.build());
        return this;
      }
      public Builder addAllBuildings(
          java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.BuildingIndex> values) {
        if (result.buildings_.isEmpty()) {
          result.buildings_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.BuildingIndex>();
        }
        super.addAll(values, result.buildings_);
        return this;
      }
      public Builder clearBuildings() {
        result.buildings_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .StreetIndex streets = 12;
      public java.util.List<net.flcnav.binary.FlcnavOdb.StreetIndex> getStreetsList() {
        return java.util.Collections.unmodifiableList(result.streets_);
      }
      public int getStreetsCount() {
        return result.getStreetsCount();
      }
      public net.flcnav.binary.FlcnavOdb.StreetIndex getStreets(int index) {
        return result.getStreets(index);
      }
      public Builder setStreets(int index, net.flcnav.binary.FlcnavOdb.StreetIndex value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.streets_.set(index, value);
        return this;
      }
      public Builder setStreets(int index, net.flcnav.binary.FlcnavOdb.StreetIndex.Builder builderForValue) {
        result.streets_.set(index, builderForValue.build());
        return this;
      }
      public Builder addStreets(net.flcnav.binary.FlcnavOdb.StreetIndex value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.streets_.isEmpty()) {
          result.streets_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.StreetIndex>();
        }
        result.streets_.add(value);
        return this;
      }
      public Builder addStreets(net.flcnav.binary.FlcnavOdb.StreetIndex.Builder builderForValue) {
        if (result.streets_.isEmpty()) {
          result.streets_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.StreetIndex>();
        }
        result.streets_.add(builderForValue.build());
        return this;
      }
      public Builder addAllStreets(
          java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.StreetIndex> values) {
        if (result.streets_.isEmpty()) {
          result.streets_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.StreetIndex>();
        }
        super.addAll(values, result.streets_);
        return this;
      }
      public Builder clearStreets() {
        result.streets_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CityBlockIndex)
    }
    
    static {
      defaultInstance = new CityBlockIndex(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CityBlockIndex)
  }
  
  public static final class StreetIndex extends
      com.google.protobuf.GeneratedMessage {
    // Use StreetIndex.newBuilder() to construct.
    private StreetIndex() {
      initFields();
    }
    private StreetIndex(boolean noInit) {}
    
    private static final StreetIndex defaultInstance;
    public static StreetIndex getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public StreetIndex getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_StreetIndex_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_StreetIndex_fieldAccessorTable;
    }
    
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional string name_en = 2;
    public static final int NAME_EN_FIELD_NUMBER = 2;
    private boolean hasNameEn;
    private java.lang.String nameEn_ = "";
    public boolean hasNameEn() { return hasNameEn; }
    public java.lang.String getNameEn() { return nameEn_; }
    
    // required sint32 x = 3;
    public static final int X_FIELD_NUMBER = 3;
    private boolean hasX;
    private int x_ = 0;
    public boolean hasX() { return hasX; }
    public int getX() { return x_; }
    
    // required sint32 y = 4;
    public static final int Y_FIELD_NUMBER = 4;
    private boolean hasY;
    private int y_ = 0;
    public boolean hasY() { return hasY; }
    public int getY() { return y_; }
    
    // optional uint64 id = 6;
    public static final int ID_FIELD_NUMBER = 6;
    private boolean hasId;
    private long id_ = 0L;
    public boolean hasId() { return hasId; }
    public long getId() { return id_; }
    
    // repeated .BuildingIndex buildings = 12;
    public static final int BUILDINGS_FIELD_NUMBER = 12;
    private java.util.List<net.flcnav.binary.FlcnavOdb.BuildingIndex> buildings_ =
      java.util.Collections.emptyList();
    public java.util.List<net.flcnav.binary.FlcnavOdb.BuildingIndex> getBuildingsList() {
      return buildings_;
    }
    public int getBuildingsCount() { return buildings_.size(); }
    public net.flcnav.binary.FlcnavOdb.BuildingIndex getBuildings(int index) {
      return buildings_.get(index);
    }
    
    // repeated .StreetIntersection intersections = 5;
    public static final int INTERSECTIONS_FIELD_NUMBER = 5;
    private java.util.List<net.flcnav.binary.FlcnavOdb.StreetIntersection> intersections_ =
      java.util.Collections.emptyList();
    public java.util.List<net.flcnav.binary.FlcnavOdb.StreetIntersection> getIntersectionsList() {
      return intersections_;
    }
    public int getIntersectionsCount() { return intersections_.size(); }
    public net.flcnav.binary.FlcnavOdb.StreetIntersection getIntersections(int index) {
      return intersections_.get(index);
    }
    
    private void initFields() {
    }
    @Override
	public final boolean isInitialized() {
      if (!hasName) return false;
      if (!hasX) return false;
      if (!hasY) return false;
      for (net.flcnav.binary.FlcnavOdb.BuildingIndex element : getBuildingsList()) {
        if (!element.isInitialized()) return false;
      }
      for (net.flcnav.binary.FlcnavOdb.StreetIntersection element : getIntersectionsList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasNameEn()) {
        output.writeString(2, getNameEn());
      }
      if (hasX()) {
        output.writeSInt32(3, getX());
      }
      if (hasY()) {
        output.writeSInt32(4, getY());
      }
      for (net.flcnav.binary.FlcnavOdb.StreetIntersection element : getIntersectionsList()) {
        output.writeMessage(5, element);
      }
      if (hasId()) {
        output.writeUInt64(6, getId());
      }
      for (net.flcnav.binary.FlcnavOdb.BuildingIndex element : getBuildingsList()) {
        output.writeMessage(12, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasNameEn()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getNameEn());
      }
      if (hasX()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, getX());
      }
      if (hasY()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(4, getY());
      }
      for (net.flcnav.binary.FlcnavOdb.StreetIntersection element : getIntersectionsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, element);
      }
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, getId());
      }
      for (net.flcnav.binary.FlcnavOdb.BuildingIndex element : getBuildingsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.StreetIndex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.StreetIndex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.StreetIndex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.StreetIndex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.StreetIndex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.StreetIndex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.StreetIndex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.StreetIndex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.StreetIndex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.StreetIndex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.StreetIndex prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.StreetIndex result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.StreetIndex.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.StreetIndex();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.StreetIndex internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.StreetIndex();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.StreetIndex.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.StreetIndex getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.StreetIndex.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.StreetIndex build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.StreetIndex buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.StreetIndex buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.buildings_ != java.util.Collections.EMPTY_LIST) {
          result.buildings_ =
            java.util.Collections.unmodifiableList(result.buildings_);
        }
        if (result.intersections_ != java.util.Collections.EMPTY_LIST) {
          result.intersections_ =
            java.util.Collections.unmodifiableList(result.intersections_);
        }
        net.flcnav.binary.FlcnavOdb.StreetIndex returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.StreetIndex) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.StreetIndex)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.StreetIndex other) {
        if (other == net.flcnav.binary.FlcnavOdb.StreetIndex.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasNameEn()) {
          setNameEn(other.getNameEn());
        }
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (!other.buildings_.isEmpty()) {
          if (result.buildings_.isEmpty()) {
            result.buildings_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.BuildingIndex>();
          }
          result.buildings_.addAll(other.buildings_);
        }
        if (!other.intersections_.isEmpty()) {
          if (result.intersections_.isEmpty()) {
            result.intersections_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.StreetIntersection>();
          }
          result.intersections_.addAll(other.intersections_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 18: {
              setNameEn(input.readString());
              break;
            }
            case 24: {
              setX(input.readSInt32());
              break;
            }
            case 32: {
              setY(input.readSInt32());
              break;
            }
            case 42: {
              net.flcnav.binary.FlcnavOdb.StreetIntersection.Builder subBuilder = net.flcnav.binary.FlcnavOdb.StreetIntersection.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addIntersections(subBuilder.buildPartial());
              break;
            }
            case 48: {
              setId(input.readUInt64());
              break;
            }
            case 98: {
              net.flcnav.binary.FlcnavOdb.BuildingIndex.Builder subBuilder = net.flcnav.binary.FlcnavOdb.BuildingIndex.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addBuildings(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional string name_en = 2;
      public boolean hasNameEn() {
        return result.hasNameEn();
      }
      public java.lang.String getNameEn() {
        return result.getNameEn();
      }
      public Builder setNameEn(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasNameEn = true;
        result.nameEn_ = value;
        return this;
      }
      public Builder clearNameEn() {
        result.hasNameEn = false;
        result.nameEn_ = getDefaultInstance().getNameEn();
        return this;
      }
      
      // required sint32 x = 3;
      public boolean hasX() {
        return result.hasX();
      }
      public int getX() {
        return result.getX();
      }
      public Builder setX(int value) {
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder clearX() {
        result.hasX = false;
        result.x_ = 0;
        return this;
      }
      
      // required sint32 y = 4;
      public boolean hasY() {
        return result.hasY();
      }
      public int getY() {
        return result.getY();
      }
      public Builder setY(int value) {
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder clearY() {
        result.hasY = false;
        result.y_ = 0;
        return this;
      }
      
      // optional uint64 id = 6;
      public boolean hasId() {
        return result.hasId();
      }
      public long getId() {
        return result.getId();
      }
      public Builder setId(long value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0L;
        return this;
      }
      
      // repeated .BuildingIndex buildings = 12;
      public java.util.List<net.flcnav.binary.FlcnavOdb.BuildingIndex> getBuildingsList() {
        return java.util.Collections.unmodifiableList(result.buildings_);
      }
      public int getBuildingsCount() {
        return result.getBuildingsCount();
      }
      public net.flcnav.binary.FlcnavOdb.BuildingIndex getBuildings(int index) {
        return result.getBuildings(index);
      }
      public Builder setBuildings(int index, net.flcnav.binary.FlcnavOdb.BuildingIndex value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.buildings_.set(index, value);
        return this;
      }
      public Builder setBuildings(int index, net.flcnav.binary.FlcnavOdb.BuildingIndex.Builder builderForValue) {
        result.buildings_.set(index, builderForValue.build());
        return this;
      }
      public Builder addBuildings(net.flcnav.binary.FlcnavOdb.BuildingIndex value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.buildings_.isEmpty()) {
          result.buildings_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.BuildingIndex>();
        }
        result.buildings_.add(value);
        return this;
      }
      public Builder addBuildings(net.flcnav.binary.FlcnavOdb.BuildingIndex.Builder builderForValue) {
        if (result.buildings_.isEmpty()) {
          result.buildings_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.BuildingIndex>();
        }
        result.buildings_.add(builderForValue.build());
        return this;
      }
      public Builder addAllBuildings(
          java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.BuildingIndex> values) {
        if (result.buildings_.isEmpty()) {
          result.buildings_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.BuildingIndex>();
        }
        super.addAll(values, result.buildings_);
        return this;
      }
      public Builder clearBuildings() {
        result.buildings_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .StreetIntersection intersections = 5;
      public java.util.List<net.flcnav.binary.FlcnavOdb.StreetIntersection> getIntersectionsList() {
        return java.util.Collections.unmodifiableList(result.intersections_);
      }
      public int getIntersectionsCount() {
        return result.getIntersectionsCount();
      }
      public net.flcnav.binary.FlcnavOdb.StreetIntersection getIntersections(int index) {
        return result.getIntersections(index);
      }
      public Builder setIntersections(int index, net.flcnav.binary.FlcnavOdb.StreetIntersection value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.intersections_.set(index, value);
        return this;
      }
      public Builder setIntersections(int index, net.flcnav.binary.FlcnavOdb.StreetIntersection.Builder builderForValue) {
        result.intersections_.set(index, builderForValue.build());
        return this;
      }
      public Builder addIntersections(net.flcnav.binary.FlcnavOdb.StreetIntersection value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.intersections_.isEmpty()) {
          result.intersections_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.StreetIntersection>();
        }
        result.intersections_.add(value);
        return this;
      }
      public Builder addIntersections(net.flcnav.binary.FlcnavOdb.StreetIntersection.Builder builderForValue) {
        if (result.intersections_.isEmpty()) {
          result.intersections_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.StreetIntersection>();
        }
        result.intersections_.add(builderForValue.build());
        return this;
      }
      public Builder addAllIntersections(
          java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.StreetIntersection> values) {
        if (result.intersections_.isEmpty()) {
          result.intersections_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.StreetIntersection>();
        }
        super.addAll(values, result.intersections_);
        return this;
      }
      public Builder clearIntersections() {
        result.intersections_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:StreetIndex)
    }
    
    static {
      defaultInstance = new StreetIndex(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:StreetIndex)
  }
  
  public static final class StreetIntersection extends
      com.google.protobuf.GeneratedMessage {
    // Use StreetIntersection.newBuilder() to construct.
    private StreetIntersection() {
      initFields();
    }
    private StreetIntersection(boolean noInit) {}
    
    private static final StreetIntersection defaultInstance;
    public static StreetIntersection getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public StreetIntersection getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_StreetIntersection_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_StreetIntersection_fieldAccessorTable;
    }
    
    // required string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional string name_en = 3;
    public static final int NAME_EN_FIELD_NUMBER = 3;
    private boolean hasNameEn;
    private java.lang.String nameEn_ = "";
    public boolean hasNameEn() { return hasNameEn; }
    public java.lang.String getNameEn() { return nameEn_; }
    
    // required sint32 intersectedX = 4;
    public static final int INTERSECTEDX_FIELD_NUMBER = 4;
    private boolean hasIntersectedX;
    private int intersectedX_ = 0;
    public boolean hasIntersectedX() { return hasIntersectedX; }
    public int getIntersectedX() { return intersectedX_; }
    
    // required sint32 intersectedY = 5;
    public static final int INTERSECTEDY_FIELD_NUMBER = 5;
    private boolean hasIntersectedY;
    private int intersectedY_ = 0;
    public boolean hasIntersectedY() { return hasIntersectedY; }
    public int getIntersectedY() { return intersectedY_; }
    
    private void initFields() {
    }
    @Override
	public final boolean isInitialized() {
      if (!hasName) return false;
      if (!hasIntersectedX) return false;
      if (!hasIntersectedY) return false;
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(2, getName());
      }
      if (hasNameEn()) {
        output.writeString(3, getNameEn());
      }
      if (hasIntersectedX()) {
        output.writeSInt32(4, getIntersectedX());
      }
      if (hasIntersectedY()) {
        output.writeSInt32(5, getIntersectedY());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getName());
      }
      if (hasNameEn()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getNameEn());
      }
      if (hasIntersectedX()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(4, getIntersectedX());
      }
      if (hasIntersectedY()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(5, getIntersectedY());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.StreetIntersection parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.StreetIntersection parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.StreetIntersection parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.StreetIntersection parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.StreetIntersection parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.StreetIntersection parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.StreetIntersection parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.StreetIntersection parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.StreetIntersection parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.StreetIntersection parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.StreetIntersection prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.StreetIntersection result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.StreetIntersection.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.StreetIntersection();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.StreetIntersection internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.StreetIntersection();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.StreetIntersection.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.StreetIntersection getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.StreetIntersection.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.StreetIntersection build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.StreetIntersection buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.StreetIntersection buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        net.flcnav.binary.FlcnavOdb.StreetIntersection returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.StreetIntersection) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.StreetIntersection)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.StreetIntersection other) {
        if (other == net.flcnav.binary.FlcnavOdb.StreetIntersection.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasNameEn()) {
          setNameEn(other.getNameEn());
        }
        if (other.hasIntersectedX()) {
          setIntersectedX(other.getIntersectedX());
        }
        if (other.hasIntersectedY()) {
          setIntersectedY(other.getIntersectedY());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 18: {
              setName(input.readString());
              break;
            }
            case 26: {
              setNameEn(input.readString());
              break;
            }
            case 32: {
              setIntersectedX(input.readSInt32());
              break;
            }
            case 40: {
              setIntersectedY(input.readSInt32());
              break;
            }
          }
        }
      }
      
      
      // required string name = 2;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional string name_en = 3;
      public boolean hasNameEn() {
        return result.hasNameEn();
      }
      public java.lang.String getNameEn() {
        return result.getNameEn();
      }
      public Builder setNameEn(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasNameEn = true;
        result.nameEn_ = value;
        return this;
      }
      public Builder clearNameEn() {
        result.hasNameEn = false;
        result.nameEn_ = getDefaultInstance().getNameEn();
        return this;
      }
      
      // required sint32 intersectedX = 4;
      public boolean hasIntersectedX() {
        return result.hasIntersectedX();
      }
      public int getIntersectedX() {
        return result.getIntersectedX();
      }
      public Builder setIntersectedX(int value) {
        result.hasIntersectedX = true;
        result.intersectedX_ = value;
        return this;
      }
      public Builder clearIntersectedX() {
        result.hasIntersectedX = false;
        result.intersectedX_ = 0;
        return this;
      }
      
      // required sint32 intersectedY = 5;
      public boolean hasIntersectedY() {
        return result.hasIntersectedY();
      }
      public int getIntersectedY() {
        return result.getIntersectedY();
      }
      public Builder setIntersectedY(int value) {
        result.hasIntersectedY = true;
        result.intersectedY_ = value;
        return this;
      }
      public Builder clearIntersectedY() {
        result.hasIntersectedY = false;
        result.intersectedY_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:StreetIntersection)
    }
    
    static {
      defaultInstance = new StreetIntersection(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:StreetIntersection)
  }
  
  public static final class BuildingIndex extends
      com.google.protobuf.GeneratedMessage {
    // Use BuildingIndex.newBuilder() to construct.
    private BuildingIndex() {
      initFields();
    }
    private BuildingIndex(boolean noInit) {}
    
    private static final BuildingIndex defaultInstance;
    public static BuildingIndex getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public BuildingIndex getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_BuildingIndex_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_BuildingIndex_fieldAccessorTable;
    }
    
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional string name_en = 2;
    public static final int NAME_EN_FIELD_NUMBER = 2;
    private boolean hasNameEn;
    private java.lang.String nameEn_ = "";
    public boolean hasNameEn() { return hasNameEn; }
    public java.lang.String getNameEn() { return nameEn_; }
    
    // optional string name2 = 3;
    public static final int NAME2_FIELD_NUMBER = 3;
    private boolean hasName2;
    private java.lang.String name2_ = "";
    public boolean hasName2() { return hasName2; }
    public java.lang.String getName2() { return name2_; }
    
    // optional string name_en2 = 4;
    public static final int NAME_EN2_FIELD_NUMBER = 4;
    private boolean hasNameEn2;
    private java.lang.String nameEn2_ = "";
    public boolean hasNameEn2() { return hasNameEn2; }
    public java.lang.String getNameEn2() { return nameEn2_; }
    
    // optional sint32 interpolation = 5;
    public static final int INTERPOLATION_FIELD_NUMBER = 5;
    private boolean hasInterpolation;
    private int interpolation_ = 0;
    public boolean hasInterpolation() { return hasInterpolation; }
    public int getInterpolation() { return interpolation_; }
    
    // required sint32 x = 7;
    public static final int X_FIELD_NUMBER = 7;
    private boolean hasX;
    private int x_ = 0;
    public boolean hasX() { return hasX; }
    public int getX() { return x_; }
    
    // required sint32 y = 8;
    public static final int Y_FIELD_NUMBER = 8;
    private boolean hasY;
    private int y_ = 0;
    public boolean hasY() { return hasY; }
    public int getY() { return y_; }
    
    // optional sint32 x2 = 9;
    public static final int X2_FIELD_NUMBER = 9;
    private boolean hasX2;
    private int x2_ = 0;
    public boolean hasX2() { return hasX2; }
    public int getX2() { return x2_; }
    
    // optional sint32 y2 = 10;
    public static final int Y2_FIELD_NUMBER = 10;
    private boolean hasY2;
    private int y2_ = 0;
    public boolean hasY2() { return hasY2; }
    public int getY2() { return y2_; }
    
    // optional uint64 id = 13;
    public static final int ID_FIELD_NUMBER = 13;
    private boolean hasId;
    private long id_ = 0L;
    public boolean hasId() { return hasId; }
    public long getId() { return id_; }
    
    // optional string postcode = 14;
    public static final int POSTCODE_FIELD_NUMBER = 14;
    private boolean hasPostcode;
    private java.lang.String postcode_ = "";
    public boolean hasPostcode() { return hasPostcode; }
    public java.lang.String getPostcode() { return postcode_; }
    
    private void initFields() {
    }
    @Override
	public final boolean isInitialized() {
      if (!hasName) return false;
      if (!hasX) return false;
      if (!hasY) return false;
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasNameEn()) {
        output.writeString(2, getNameEn());
      }
      if (hasName2()) {
        output.writeString(3, getName2());
      }
      if (hasNameEn2()) {
        output.writeString(4, getNameEn2());
      }
      if (hasInterpolation()) {
        output.writeSInt32(5, getInterpolation());
      }
      if (hasX()) {
        output.writeSInt32(7, getX());
      }
      if (hasY()) {
        output.writeSInt32(8, getY());
      }
      if (hasX2()) {
        output.writeSInt32(9, getX2());
      }
      if (hasY2()) {
        output.writeSInt32(10, getY2());
      }
      if (hasId()) {
        output.writeUInt64(13, getId());
      }
      if (hasPostcode()) {
        output.writeString(14, getPostcode());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasNameEn()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getNameEn());
      }
      if (hasName2()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getName2());
      }
      if (hasNameEn2()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getNameEn2());
      }
      if (hasInterpolation()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(5, getInterpolation());
      }
      if (hasX()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(7, getX());
      }
      if (hasY()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(8, getY());
      }
      if (hasX2()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(9, getX2());
      }
      if (hasY2()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(10, getY2());
      }
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(13, getId());
      }
      if (hasPostcode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(14, getPostcode());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.BuildingIndex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.BuildingIndex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.BuildingIndex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.BuildingIndex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.BuildingIndex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.BuildingIndex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.BuildingIndex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.BuildingIndex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.BuildingIndex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.BuildingIndex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.BuildingIndex prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.BuildingIndex result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.BuildingIndex.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.BuildingIndex();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.BuildingIndex internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.BuildingIndex();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.BuildingIndex.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.BuildingIndex getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.BuildingIndex.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.BuildingIndex build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.BuildingIndex buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.BuildingIndex buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        net.flcnav.binary.FlcnavOdb.BuildingIndex returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.BuildingIndex) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.BuildingIndex)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.BuildingIndex other) {
        if (other == net.flcnav.binary.FlcnavOdb.BuildingIndex.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasNameEn()) {
          setNameEn(other.getNameEn());
        }
        if (other.hasName2()) {
          setName2(other.getName2());
        }
        if (other.hasNameEn2()) {
          setNameEn2(other.getNameEn2());
        }
        if (other.hasInterpolation()) {
          setInterpolation(other.getInterpolation());
        }
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasX2()) {
          setX2(other.getX2());
        }
        if (other.hasY2()) {
          setY2(other.getY2());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasPostcode()) {
          setPostcode(other.getPostcode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 18: {
              setNameEn(input.readString());
              break;
            }
            case 26: {
              setName2(input.readString());
              break;
            }
            case 34: {
              setNameEn2(input.readString());
              break;
            }
            case 40: {
              setInterpolation(input.readSInt32());
              break;
            }
            case 56: {
              setX(input.readSInt32());
              break;
            }
            case 64: {
              setY(input.readSInt32());
              break;
            }
            case 72: {
              setX2(input.readSInt32());
              break;
            }
            case 80: {
              setY2(input.readSInt32());
              break;
            }
            case 104: {
              setId(input.readUInt64());
              break;
            }
            case 114: {
              setPostcode(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional string name_en = 2;
      public boolean hasNameEn() {
        return result.hasNameEn();
      }
      public java.lang.String getNameEn() {
        return result.getNameEn();
      }
      public Builder setNameEn(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasNameEn = true;
        result.nameEn_ = value;
        return this;
      }
      public Builder clearNameEn() {
        result.hasNameEn = false;
        result.nameEn_ = getDefaultInstance().getNameEn();
        return this;
      }
      
      // optional string name2 = 3;
      public boolean hasName2() {
        return result.hasName2();
      }
      public java.lang.String getName2() {
        return result.getName2();
      }
      public Builder setName2(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName2 = true;
        result.name2_ = value;
        return this;
      }
      public Builder clearName2() {
        result.hasName2 = false;
        result.name2_ = getDefaultInstance().getName2();
        return this;
      }
      
      // optional string name_en2 = 4;
      public boolean hasNameEn2() {
        return result.hasNameEn2();
      }
      public java.lang.String getNameEn2() {
        return result.getNameEn2();
      }
      public Builder setNameEn2(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasNameEn2 = true;
        result.nameEn2_ = value;
        return this;
      }
      public Builder clearNameEn2() {
        result.hasNameEn2 = false;
        result.nameEn2_ = getDefaultInstance().getNameEn2();
        return this;
      }
      
      // optional sint32 interpolation = 5;
      public boolean hasInterpolation() {
        return result.hasInterpolation();
      }
      public int getInterpolation() {
        return result.getInterpolation();
      }
      public Builder setInterpolation(int value) {
        result.hasInterpolation = true;
        result.interpolation_ = value;
        return this;
      }
      public Builder clearInterpolation() {
        result.hasInterpolation = false;
        result.interpolation_ = 0;
        return this;
      }
      
      // required sint32 x = 7;
      public boolean hasX() {
        return result.hasX();
      }
      public int getX() {
        return result.getX();
      }
      public Builder setX(int value) {
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder clearX() {
        result.hasX = false;
        result.x_ = 0;
        return this;
      }
      
      // required sint32 y = 8;
      public boolean hasY() {
        return result.hasY();
      }
      public int getY() {
        return result.getY();
      }
      public Builder setY(int value) {
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder clearY() {
        result.hasY = false;
        result.y_ = 0;
        return this;
      }
      
      // optional sint32 x2 = 9;
      public boolean hasX2() {
        return result.hasX2();
      }
      public int getX2() {
        return result.getX2();
      }
      public Builder setX2(int value) {
        result.hasX2 = true;
        result.x2_ = value;
        return this;
      }
      public Builder clearX2() {
        result.hasX2 = false;
        result.x2_ = 0;
        return this;
      }
      
      // optional sint32 y2 = 10;
      public boolean hasY2() {
        return result.hasY2();
      }
      public int getY2() {
        return result.getY2();
      }
      public Builder setY2(int value) {
        result.hasY2 = true;
        result.y2_ = value;
        return this;
      }
      public Builder clearY2() {
        result.hasY2 = false;
        result.y2_ = 0;
        return this;
      }
      
      // optional uint64 id = 13;
      public boolean hasId() {
        return result.hasId();
      }
      public long getId() {
        return result.getId();
      }
      public Builder setId(long value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0L;
        return this;
      }
      
      // optional string postcode = 14;
      public boolean hasPostcode() {
        return result.hasPostcode();
      }
      public java.lang.String getPostcode() {
        return result.getPostcode();
      }
      public Builder setPostcode(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPostcode = true;
        result.postcode_ = value;
        return this;
      }
      public Builder clearPostcode() {
        result.hasPostcode = false;
        result.postcode_ = getDefaultInstance().getPostcode();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:BuildingIndex)
    }
    
    static {
      defaultInstance = new BuildingIndex(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:BuildingIndex)
  }
  
  public static final class TransportRoutes extends
      com.google.protobuf.GeneratedMessage {
    // Use TransportRoutes.newBuilder() to construct.
    private TransportRoutes() {
      initFields();
    }
    private TransportRoutes(boolean noInit) {}
    
    private static final TransportRoutes defaultInstance;
    public static TransportRoutes getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public TransportRoutes getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_TransportRoutes_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_TransportRoutes_fieldAccessorTable;
    }
    
    // repeated .TransportRoute routes = 6;
    public static final int ROUTES_FIELD_NUMBER = 6;
    private java.util.List<net.flcnav.binary.FlcnavOdb.TransportRoute> routes_ =
      java.util.Collections.emptyList();
    public java.util.List<net.flcnav.binary.FlcnavOdb.TransportRoute> getRoutesList() {
      return routes_;
    }
    public int getRoutesCount() { return routes_.size(); }
    public net.flcnav.binary.FlcnavOdb.TransportRoute getRoutes(int index) {
      return routes_.get(index);
    }
    
    private void initFields() {
    }
    @Override
	public final boolean isInitialized() {
      for (net.flcnav.binary.FlcnavOdb.TransportRoute element : getRoutesList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (net.flcnav.binary.FlcnavOdb.TransportRoute element : getRoutesList()) {
        output.writeMessage(6, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (net.flcnav.binary.FlcnavOdb.TransportRoute element : getRoutesList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.TransportRoutes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportRoutes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportRoutes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportRoutes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportRoutes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportRoutes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportRoutes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.TransportRoutes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.TransportRoutes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportRoutes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.TransportRoutes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.TransportRoutes result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.TransportRoutes.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.TransportRoutes();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.TransportRoutes internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.TransportRoutes();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.TransportRoutes.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.TransportRoutes getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.TransportRoutes.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.TransportRoutes build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.TransportRoutes buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.TransportRoutes buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.routes_ != java.util.Collections.EMPTY_LIST) {
          result.routes_ =
            java.util.Collections.unmodifiableList(result.routes_);
        }
        net.flcnav.binary.FlcnavOdb.TransportRoutes returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.TransportRoutes) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.TransportRoutes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.TransportRoutes other) {
        if (other == net.flcnav.binary.FlcnavOdb.TransportRoutes.getDefaultInstance()) return this;
        if (!other.routes_.isEmpty()) {
          if (result.routes_.isEmpty()) {
            result.routes_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.TransportRoute>();
          }
          result.routes_.addAll(other.routes_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 50: {
              net.flcnav.binary.FlcnavOdb.TransportRoute.Builder subBuilder = net.flcnav.binary.FlcnavOdb.TransportRoute.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRoutes(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .TransportRoute routes = 6;
      public java.util.List<net.flcnav.binary.FlcnavOdb.TransportRoute> getRoutesList() {
        return java.util.Collections.unmodifiableList(result.routes_);
      }
      public int getRoutesCount() {
        return result.getRoutesCount();
      }
      public net.flcnav.binary.FlcnavOdb.TransportRoute getRoutes(int index) {
        return result.getRoutes(index);
      }
      public Builder setRoutes(int index, net.flcnav.binary.FlcnavOdb.TransportRoute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.routes_.set(index, value);
        return this;
      }
      public Builder setRoutes(int index, net.flcnav.binary.FlcnavOdb.TransportRoute.Builder builderForValue) {
        result.routes_.set(index, builderForValue.build());
        return this;
      }
      public Builder addRoutes(net.flcnav.binary.FlcnavOdb.TransportRoute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.routes_.isEmpty()) {
          result.routes_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.TransportRoute>();
        }
        result.routes_.add(value);
        return this;
      }
      public Builder addRoutes(net.flcnav.binary.FlcnavOdb.TransportRoute.Builder builderForValue) {
        if (result.routes_.isEmpty()) {
          result.routes_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.TransportRoute>();
        }
        result.routes_.add(builderForValue.build());
        return this;
      }
      public Builder addAllRoutes(
          java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.TransportRoute> values) {
        if (result.routes_.isEmpty()) {
          result.routes_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.TransportRoute>();
        }
        super.addAll(values, result.routes_);
        return this;
      }
      public Builder clearRoutes() {
        result.routes_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:TransportRoutes)
    }
    
    static {
      defaultInstance = new TransportRoutes(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TransportRoutes)
  }
  
  public static final class TransportRoute extends
      com.google.protobuf.GeneratedMessage {
    // Use TransportRoute.newBuilder() to construct.
    private TransportRoute() {
      initFields();
    }
    private TransportRoute(boolean noInit) {}
    
    private static final TransportRoute defaultInstance;
    public static TransportRoute getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public TransportRoute getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_TransportRoute_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_TransportRoute_fieldAccessorTable;
    }
    
    // required uint64 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private long id_ = 0L;
    public boolean hasId() { return hasId; }
    public long getId() { return id_; }
    
    // optional uint32 type = 3;
    public static final int TYPE_FIELD_NUMBER = 3;
    private boolean hasType;
    private int type_ = 0;
    public boolean hasType() { return hasType; }
    public int getType() { return type_; }
    
    // optional uint32 operator = 4;
    public static final int OPERATOR_FIELD_NUMBER = 4;
    private boolean hasOperator;
    private int operator_ = 0;
    public boolean hasOperator() { return hasOperator; }
    public int getOperator() { return operator_; }
    
    // optional string ref = 5;
    public static final int REF_FIELD_NUMBER = 5;
    private boolean hasRef;
    private java.lang.String ref_ = "";
    public boolean hasRef() { return hasRef; }
    public java.lang.String getRef() { return ref_; }
    
    // optional uint32 name = 6;
    public static final int NAME_FIELD_NUMBER = 6;
    private boolean hasName;
    private int name_ = 0;
    public boolean hasName() { return hasName; }
    public int getName() { return name_; }
    
    // optional uint32 name_en = 7;
    public static final int NAME_EN_FIELD_NUMBER = 7;
    private boolean hasNameEn;
    private int nameEn_ = 0;
    public boolean hasNameEn() { return hasNameEn; }
    public int getNameEn() { return nameEn_; }
    
    // optional uint32 distance = 8;
    public static final int DISTANCE_FIELD_NUMBER = 8;
    private boolean hasDistance;
    private int distance_ = 0;
    public boolean hasDistance() { return hasDistance; }
    public int getDistance() { return distance_; }
    
    // repeated .TransportRouteStop directStops = 15;
    public static final int DIRECTSTOPS_FIELD_NUMBER = 15;
    private java.util.List<net.flcnav.binary.FlcnavOdb.TransportRouteStop> directStops_ =
      java.util.Collections.emptyList();
    public java.util.List<net.flcnav.binary.FlcnavOdb.TransportRouteStop> getDirectStopsList() {
      return directStops_;
    }
    public int getDirectStopsCount() { return directStops_.size(); }
    public net.flcnav.binary.FlcnavOdb.TransportRouteStop getDirectStops(int index) {
      return directStops_.get(index);
    }
    
    // repeated .TransportRouteStop reverseStops = 16;
    public static final int REVERSESTOPS_FIELD_NUMBER = 16;
    private java.util.List<net.flcnav.binary.FlcnavOdb.TransportRouteStop> reverseStops_ =
      java.util.Collections.emptyList();
    public java.util.List<net.flcnav.binary.FlcnavOdb.TransportRouteStop> getReverseStopsList() {
      return reverseStops_;
    }
    public int getReverseStopsCount() { return reverseStops_.size(); }
    public net.flcnav.binary.FlcnavOdb.TransportRouteStop getReverseStops(int index) {
      return reverseStops_.get(index);
    }
    
    private void initFields() {
    }
    @Override
	public final boolean isInitialized() {
      if (!hasId) return false;
      for (net.flcnav.binary.FlcnavOdb.TransportRouteStop element : getDirectStopsList()) {
        if (!element.isInitialized()) return false;
      }
      for (net.flcnav.binary.FlcnavOdb.TransportRouteStop element : getReverseStopsList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasId()) {
        output.writeUInt64(1, getId());
      }
      if (hasType()) {
        output.writeUInt32(3, getType());
      }
      if (hasOperator()) {
        output.writeUInt32(4, getOperator());
      }
      if (hasRef()) {
        output.writeString(5, getRef());
      }
      if (hasName()) {
        output.writeUInt32(6, getName());
      }
      if (hasNameEn()) {
        output.writeUInt32(7, getNameEn());
      }
      if (hasDistance()) {
        output.writeUInt32(8, getDistance());
      }
      for (net.flcnav.binary.FlcnavOdb.TransportRouteStop element : getDirectStopsList()) {
        output.writeMessage(15, element);
      }
      for (net.flcnav.binary.FlcnavOdb.TransportRouteStop element : getReverseStopsList()) {
        output.writeMessage(16, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, getId());
      }
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getType());
      }
      if (hasOperator()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, getOperator());
      }
      if (hasRef()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getRef());
      }
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, getName());
      }
      if (hasNameEn()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, getNameEn());
      }
      if (hasDistance()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, getDistance());
      }
      for (net.flcnav.binary.FlcnavOdb.TransportRouteStop element : getDirectStopsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, element);
      }
      for (net.flcnav.binary.FlcnavOdb.TransportRouteStop element : getReverseStopsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.TransportRoute parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportRoute parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportRoute parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportRoute parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportRoute parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportRoute parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportRoute parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.TransportRoute parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.TransportRoute parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportRoute parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.TransportRoute prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.TransportRoute result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.TransportRoute.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.TransportRoute();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.TransportRoute internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.TransportRoute();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.TransportRoute.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.TransportRoute getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.TransportRoute.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.TransportRoute build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.TransportRoute buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.TransportRoute buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.directStops_ != java.util.Collections.EMPTY_LIST) {
          result.directStops_ =
            java.util.Collections.unmodifiableList(result.directStops_);
        }
        if (result.reverseStops_ != java.util.Collections.EMPTY_LIST) {
          result.reverseStops_ =
            java.util.Collections.unmodifiableList(result.reverseStops_);
        }
        net.flcnav.binary.FlcnavOdb.TransportRoute returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.TransportRoute) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.TransportRoute)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.TransportRoute other) {
        if (other == net.flcnav.binary.FlcnavOdb.TransportRoute.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasOperator()) {
          setOperator(other.getOperator());
        }
        if (other.hasRef()) {
          setRef(other.getRef());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasNameEn()) {
          setNameEn(other.getNameEn());
        }
        if (other.hasDistance()) {
          setDistance(other.getDistance());
        }
        if (!other.directStops_.isEmpty()) {
          if (result.directStops_.isEmpty()) {
            result.directStops_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.TransportRouteStop>();
          }
          result.directStops_.addAll(other.directStops_);
        }
        if (!other.reverseStops_.isEmpty()) {
          if (result.reverseStops_.isEmpty()) {
            result.reverseStops_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.TransportRouteStop>();
          }
          result.reverseStops_.addAll(other.reverseStops_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setId(input.readUInt64());
              break;
            }
            case 24: {
              setType(input.readUInt32());
              break;
            }
            case 32: {
              setOperator(input.readUInt32());
              break;
            }
            case 42: {
              setRef(input.readString());
              break;
            }
            case 48: {
              setName(input.readUInt32());
              break;
            }
            case 56: {
              setNameEn(input.readUInt32());
              break;
            }
            case 64: {
              setDistance(input.readUInt32());
              break;
            }
            case 122: {
              net.flcnav.binary.FlcnavOdb.TransportRouteStop.Builder subBuilder = net.flcnav.binary.FlcnavOdb.TransportRouteStop.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addDirectStops(subBuilder.buildPartial());
              break;
            }
            case 130: {
              net.flcnav.binary.FlcnavOdb.TransportRouteStop.Builder subBuilder = net.flcnav.binary.FlcnavOdb.TransportRouteStop.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addReverseStops(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required uint64 id = 1;
      public boolean hasId() {
        return result.hasId();
      }
      public long getId() {
        return result.getId();
      }
      public Builder setId(long value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0L;
        return this;
      }
      
      // optional uint32 type = 3;
      public boolean hasType() {
        return result.hasType();
      }
      public int getType() {
        return result.getType();
      }
      public Builder setType(int value) {
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = 0;
        return this;
      }
      
      // optional uint32 operator = 4;
      public boolean hasOperator() {
        return result.hasOperator();
      }
      public int getOperator() {
        return result.getOperator();
      }
      public Builder setOperator(int value) {
        result.hasOperator = true;
        result.operator_ = value;
        return this;
      }
      public Builder clearOperator() {
        result.hasOperator = false;
        result.operator_ = 0;
        return this;
      }
      
      // optional string ref = 5;
      public boolean hasRef() {
        return result.hasRef();
      }
      public java.lang.String getRef() {
        return result.getRef();
      }
      public Builder setRef(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasRef = true;
        result.ref_ = value;
        return this;
      }
      public Builder clearRef() {
        result.hasRef = false;
        result.ref_ = getDefaultInstance().getRef();
        return this;
      }
      
      // optional uint32 name = 6;
      public boolean hasName() {
        return result.hasName();
      }
      public int getName() {
        return result.getName();
      }
      public Builder setName(int value) {
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = 0;
        return this;
      }
      
      // optional uint32 name_en = 7;
      public boolean hasNameEn() {
        return result.hasNameEn();
      }
      public int getNameEn() {
        return result.getNameEn();
      }
      public Builder setNameEn(int value) {
        result.hasNameEn = true;
        result.nameEn_ = value;
        return this;
      }
      public Builder clearNameEn() {
        result.hasNameEn = false;
        result.nameEn_ = 0;
        return this;
      }
      
      // optional uint32 distance = 8;
      public boolean hasDistance() {
        return result.hasDistance();
      }
      public int getDistance() {
        return result.getDistance();
      }
      public Builder setDistance(int value) {
        result.hasDistance = true;
        result.distance_ = value;
        return this;
      }
      public Builder clearDistance() {
        result.hasDistance = false;
        result.distance_ = 0;
        return this;
      }
      
      // repeated .TransportRouteStop directStops = 15;
      public java.util.List<net.flcnav.binary.FlcnavOdb.TransportRouteStop> getDirectStopsList() {
        return java.util.Collections.unmodifiableList(result.directStops_);
      }
      public int getDirectStopsCount() {
        return result.getDirectStopsCount();
      }
      public net.flcnav.binary.FlcnavOdb.TransportRouteStop getDirectStops(int index) {
        return result.getDirectStops(index);
      }
      public Builder setDirectStops(int index, net.flcnav.binary.FlcnavOdb.TransportRouteStop value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.directStops_.set(index, value);
        return this;
      }
      public Builder setDirectStops(int index, net.flcnav.binary.FlcnavOdb.TransportRouteStop.Builder builderForValue) {
        result.directStops_.set(index, builderForValue.build());
        return this;
      }
      public Builder addDirectStops(net.flcnav.binary.FlcnavOdb.TransportRouteStop value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.directStops_.isEmpty()) {
          result.directStops_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.TransportRouteStop>();
        }
        result.directStops_.add(value);
        return this;
      }
      public Builder addDirectStops(net.flcnav.binary.FlcnavOdb.TransportRouteStop.Builder builderForValue) {
        if (result.directStops_.isEmpty()) {
          result.directStops_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.TransportRouteStop>();
        }
        result.directStops_.add(builderForValue.build());
        return this;
      }
      public Builder addAllDirectStops(
          java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.TransportRouteStop> values) {
        if (result.directStops_.isEmpty()) {
          result.directStops_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.TransportRouteStop>();
        }
        super.addAll(values, result.directStops_);
        return this;
      }
      public Builder clearDirectStops() {
        result.directStops_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .TransportRouteStop reverseStops = 16;
      public java.util.List<net.flcnav.binary.FlcnavOdb.TransportRouteStop> getReverseStopsList() {
        return java.util.Collections.unmodifiableList(result.reverseStops_);
      }
      public int getReverseStopsCount() {
        return result.getReverseStopsCount();
      }
      public net.flcnav.binary.FlcnavOdb.TransportRouteStop getReverseStops(int index) {
        return result.getReverseStops(index);
      }
      public Builder setReverseStops(int index, net.flcnav.binary.FlcnavOdb.TransportRouteStop value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.reverseStops_.set(index, value);
        return this;
      }
      public Builder setReverseStops(int index, net.flcnav.binary.FlcnavOdb.TransportRouteStop.Builder builderForValue) {
        result.reverseStops_.set(index, builderForValue.build());
        return this;
      }
      public Builder addReverseStops(net.flcnav.binary.FlcnavOdb.TransportRouteStop value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.reverseStops_.isEmpty()) {
          result.reverseStops_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.TransportRouteStop>();
        }
        result.reverseStops_.add(value);
        return this;
      }
      public Builder addReverseStops(net.flcnav.binary.FlcnavOdb.TransportRouteStop.Builder builderForValue) {
        if (result.reverseStops_.isEmpty()) {
          result.reverseStops_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.TransportRouteStop>();
        }
        result.reverseStops_.add(builderForValue.build());
        return this;
      }
      public Builder addAllReverseStops(
          java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.TransportRouteStop> values) {
        if (result.reverseStops_.isEmpty()) {
          result.reverseStops_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.TransportRouteStop>();
        }
        super.addAll(values, result.reverseStops_);
        return this;
      }
      public Builder clearReverseStops() {
        result.reverseStops_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:TransportRoute)
    }
    
    static {
      defaultInstance = new TransportRoute(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TransportRoute)
  }
  
  public static final class TransportRouteStop extends
      com.google.protobuf.GeneratedMessage {
    // Use TransportRouteStop.newBuilder() to construct.
    private TransportRouteStop() {
      initFields();
    }
    private TransportRouteStop(boolean noInit) {}
    
    private static final TransportRouteStop defaultInstance;
    public static TransportRouteStop getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public TransportRouteStop getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_TransportRouteStop_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_TransportRouteStop_fieldAccessorTable;
    }
    
    // required sint64 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private long id_ = 0L;
    public boolean hasId() { return hasId; }
    public long getId() { return id_; }
    
    // required sint32 dx = 2;
    public static final int DX_FIELD_NUMBER = 2;
    private boolean hasDx;
    private int dx_ = 0;
    public boolean hasDx() { return hasDx; }
    public int getDx() { return dx_; }
    
    // required sint32 dy = 3;
    public static final int DY_FIELD_NUMBER = 3;
    private boolean hasDy;
    private int dy_ = 0;
    public boolean hasDy() { return hasDy; }
    public int getDy() { return dy_; }
    
    // required uint32 name = 6;
    public static final int NAME_FIELD_NUMBER = 6;
    private boolean hasName;
    private int name_ = 0;
    public boolean hasName() { return hasName; }
    public int getName() { return name_; }
    
    // optional uint32 name_en = 7;
    public static final int NAME_EN_FIELD_NUMBER = 7;
    private boolean hasNameEn;
    private int nameEn_ = 0;
    public boolean hasNameEn() { return hasNameEn; }
    public int getNameEn() { return nameEn_; }
    
    private void initFields() {
    }
    @Override
	public final boolean isInitialized() {
      if (!hasId) return false;
      if (!hasDx) return false;
      if (!hasDy) return false;
      if (!hasName) return false;
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasId()) {
        output.writeSInt64(1, getId());
      }
      if (hasDx()) {
        output.writeSInt32(2, getDx());
      }
      if (hasDy()) {
        output.writeSInt32(3, getDy());
      }
      if (hasName()) {
        output.writeUInt32(6, getName());
      }
      if (hasNameEn()) {
        output.writeUInt32(7, getNameEn());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(1, getId());
      }
      if (hasDx()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, getDx());
      }
      if (hasDy()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, getDy());
      }
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, getName());
      }
      if (hasNameEn()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, getNameEn());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.TransportRouteStop parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportRouteStop parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportRouteStop parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportRouteStop parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportRouteStop parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportRouteStop parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportRouteStop parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.TransportRouteStop parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.TransportRouteStop parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportRouteStop parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.TransportRouteStop prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.TransportRouteStop result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.TransportRouteStop.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.TransportRouteStop();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.TransportRouteStop internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.TransportRouteStop();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.TransportRouteStop.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.TransportRouteStop getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.TransportRouteStop.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.TransportRouteStop build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.TransportRouteStop buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.TransportRouteStop buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        net.flcnav.binary.FlcnavOdb.TransportRouteStop returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.TransportRouteStop) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.TransportRouteStop)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.TransportRouteStop other) {
        if (other == net.flcnav.binary.FlcnavOdb.TransportRouteStop.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasDx()) {
          setDx(other.getDx());
        }
        if (other.hasDy()) {
          setDy(other.getDy());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasNameEn()) {
          setNameEn(other.getNameEn());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setId(input.readSInt64());
              break;
            }
            case 16: {
              setDx(input.readSInt32());
              break;
            }
            case 24: {
              setDy(input.readSInt32());
              break;
            }
            case 48: {
              setName(input.readUInt32());
              break;
            }
            case 56: {
              setNameEn(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // required sint64 id = 1;
      public boolean hasId() {
        return result.hasId();
      }
      public long getId() {
        return result.getId();
      }
      public Builder setId(long value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0L;
        return this;
      }
      
      // required sint32 dx = 2;
      public boolean hasDx() {
        return result.hasDx();
      }
      public int getDx() {
        return result.getDx();
      }
      public Builder setDx(int value) {
        result.hasDx = true;
        result.dx_ = value;
        return this;
      }
      public Builder clearDx() {
        result.hasDx = false;
        result.dx_ = 0;
        return this;
      }
      
      // required sint32 dy = 3;
      public boolean hasDy() {
        return result.hasDy();
      }
      public int getDy() {
        return result.getDy();
      }
      public Builder setDy(int value) {
        result.hasDy = true;
        result.dy_ = value;
        return this;
      }
      public Builder clearDy() {
        result.hasDy = false;
        result.dy_ = 0;
        return this;
      }
      
      // required uint32 name = 6;
      public boolean hasName() {
        return result.hasName();
      }
      public int getName() {
        return result.getName();
      }
      public Builder setName(int value) {
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = 0;
        return this;
      }
      
      // optional uint32 name_en = 7;
      public boolean hasNameEn() {
        return result.hasNameEn();
      }
      public int getNameEn() {
        return result.getNameEn();
      }
      public Builder setNameEn(int value) {
        result.hasNameEn = true;
        result.nameEn_ = value;
        return this;
      }
      public Builder clearNameEn() {
        result.hasNameEn = false;
        result.nameEn_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:TransportRouteStop)
    }
    
    static {
      defaultInstance = new TransportRouteStop(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TransportRouteStop)
  }
  
  public static final class TransportStop extends
      com.google.protobuf.GeneratedMessage {
    // Use TransportStop.newBuilder() to construct.
    private TransportStop() {
      initFields();
    }
    private TransportStop(boolean noInit) {}
    
    private static final TransportStop defaultInstance;
    public static TransportStop getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public TransportStop getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_TransportStop_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_TransportStop_fieldAccessorTable;
    }
    
    // required sint32 dx = 1;
    public static final int DX_FIELD_NUMBER = 1;
    private boolean hasDx;
    private int dx_ = 0;
    public boolean hasDx() { return hasDx; }
    public int getDx() { return dx_; }
    
    // required sint32 dy = 2;
    public static final int DY_FIELD_NUMBER = 2;
    private boolean hasDy;
    private int dy_ = 0;
    public boolean hasDy() { return hasDy; }
    public int getDy() { return dy_; }
    
    // required sint64 id = 5;
    public static final int ID_FIELD_NUMBER = 5;
    private boolean hasId;
    private long id_ = 0L;
    public boolean hasId() { return hasId; }
    public long getId() { return id_; }
    
    // required uint32 name = 6;
    public static final int NAME_FIELD_NUMBER = 6;
    private boolean hasName;
    private int name_ = 0;
    public boolean hasName() { return hasName; }
    public int getName() { return name_; }
    
    // optional uint32 name_en = 7;
    public static final int NAME_EN_FIELD_NUMBER = 7;
    private boolean hasNameEn;
    private int nameEn_ = 0;
    public boolean hasNameEn() { return hasNameEn; }
    public int getNameEn() { return nameEn_; }
    
    // repeated uint32 routes = 16;
    public static final int ROUTES_FIELD_NUMBER = 16;
    private java.util.List<java.lang.Integer> routes_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getRoutesList() {
      return routes_;
    }
    public int getRoutesCount() { return routes_.size(); }
    public int getRoutes(int index) {
      return routes_.get(index);
    }
    
    private void initFields() {
    }
    @Override
	public final boolean isInitialized() {
      if (!hasDx) return false;
      if (!hasDy) return false;
      if (!hasId) return false;
      if (!hasName) return false;
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasDx()) {
        output.writeSInt32(1, getDx());
      }
      if (hasDy()) {
        output.writeSInt32(2, getDy());
      }
      if (hasId()) {
        output.writeSInt64(5, getId());
      }
      if (hasName()) {
        output.writeUInt32(6, getName());
      }
      if (hasNameEn()) {
        output.writeUInt32(7, getNameEn());
      }
      for (int element : getRoutesList()) {
        output.writeUInt32(16, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasDx()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, getDx());
      }
      if (hasDy()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, getDy());
      }
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(5, getId());
      }
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, getName());
      }
      if (hasNameEn()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, getNameEn());
      }
      {
        int dataSize = 0;
        for (int element : getRoutesList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 2 * getRoutesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.TransportStop parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportStop parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportStop parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportStop parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportStop parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportStop parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportStop parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.TransportStop parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.TransportStop parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportStop parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.TransportStop prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.TransportStop result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.TransportStop.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.TransportStop();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.TransportStop internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.TransportStop();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.TransportStop.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.TransportStop getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.TransportStop.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.TransportStop build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.TransportStop buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.TransportStop buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.routes_ != java.util.Collections.EMPTY_LIST) {
          result.routes_ =
            java.util.Collections.unmodifiableList(result.routes_);
        }
        net.flcnav.binary.FlcnavOdb.TransportStop returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.TransportStop) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.TransportStop)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.TransportStop other) {
        if (other == net.flcnav.binary.FlcnavOdb.TransportStop.getDefaultInstance()) return this;
        if (other.hasDx()) {
          setDx(other.getDx());
        }
        if (other.hasDy()) {
          setDy(other.getDy());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasNameEn()) {
          setNameEn(other.getNameEn());
        }
        if (!other.routes_.isEmpty()) {
          if (result.routes_.isEmpty()) {
            result.routes_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.routes_.addAll(other.routes_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setDx(input.readSInt32());
              break;
            }
            case 16: {
              setDy(input.readSInt32());
              break;
            }
            case 40: {
              setId(input.readSInt64());
              break;
            }
            case 48: {
              setName(input.readUInt32());
              break;
            }
            case 56: {
              setNameEn(input.readUInt32());
              break;
            }
            case 128: {
              addRoutes(input.readUInt32());
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addRoutes(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // required sint32 dx = 1;
      public boolean hasDx() {
        return result.hasDx();
      }
      public int getDx() {
        return result.getDx();
      }
      public Builder setDx(int value) {
        result.hasDx = true;
        result.dx_ = value;
        return this;
      }
      public Builder clearDx() {
        result.hasDx = false;
        result.dx_ = 0;
        return this;
      }
      
      // required sint32 dy = 2;
      public boolean hasDy() {
        return result.hasDy();
      }
      public int getDy() {
        return result.getDy();
      }
      public Builder setDy(int value) {
        result.hasDy = true;
        result.dy_ = value;
        return this;
      }
      public Builder clearDy() {
        result.hasDy = false;
        result.dy_ = 0;
        return this;
      }
      
      // required sint64 id = 5;
      public boolean hasId() {
        return result.hasId();
      }
      public long getId() {
        return result.getId();
      }
      public Builder setId(long value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0L;
        return this;
      }
      
      // required uint32 name = 6;
      public boolean hasName() {
        return result.hasName();
      }
      public int getName() {
        return result.getName();
      }
      public Builder setName(int value) {
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = 0;
        return this;
      }
      
      // optional uint32 name_en = 7;
      public boolean hasNameEn() {
        return result.hasNameEn();
      }
      public int getNameEn() {
        return result.getNameEn();
      }
      public Builder setNameEn(int value) {
        result.hasNameEn = true;
        result.nameEn_ = value;
        return this;
      }
      public Builder clearNameEn() {
        result.hasNameEn = false;
        result.nameEn_ = 0;
        return this;
      }
      
      // repeated uint32 routes = 16;
      public java.util.List<java.lang.Integer> getRoutesList() {
        return java.util.Collections.unmodifiableList(result.routes_);
      }
      public int getRoutesCount() {
        return result.getRoutesCount();
      }
      public int getRoutes(int index) {
        return result.getRoutes(index);
      }
      public Builder setRoutes(int index, int value) {
        result.routes_.set(index, value);
        return this;
      }
      public Builder addRoutes(int value) {
        if (result.routes_.isEmpty()) {
          result.routes_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.routes_.add(value);
        return this;
      }
      public Builder addAllRoutes(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.routes_.isEmpty()) {
          result.routes_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.routes_);
        return this;
      }
      public Builder clearRoutes() {
        result.routes_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:TransportStop)
    }
    
    static {
      defaultInstance = new TransportStop(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TransportStop)
  }
  
  public static final class TransportStopsTree extends
      com.google.protobuf.GeneratedMessage {
    // Use TransportStopsTree.newBuilder() to construct.
    private TransportStopsTree() {
      initFields();
    }
    private TransportStopsTree(boolean noInit) {}
    
    private static final TransportStopsTree defaultInstance;
    public static TransportStopsTree getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public TransportStopsTree getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_TransportStopsTree_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_TransportStopsTree_fieldAccessorTable;
    }
    
    // required sint32 left = 1;
    public static final int LEFT_FIELD_NUMBER = 1;
    private boolean hasLeft;
    private int left_ = 0;
    public boolean hasLeft() { return hasLeft; }
    public int getLeft() { return left_; }
    
    // required sint32 right = 2;
    public static final int RIGHT_FIELD_NUMBER = 2;
    private boolean hasRight;
    private int right_ = 0;
    public boolean hasRight() { return hasRight; }
    public int getRight() { return right_; }
    
    // required sint32 top = 3;
    public static final int TOP_FIELD_NUMBER = 3;
    private boolean hasTop;
    private int top_ = 0;
    public boolean hasTop() { return hasTop; }
    public int getTop() { return top_; }
    
    // required sint32 bottom = 4;
    public static final int BOTTOM_FIELD_NUMBER = 4;
    private boolean hasBottom;
    private int bottom_ = 0;
    public boolean hasBottom() { return hasBottom; }
    public int getBottom() { return bottom_; }
    
    // repeated .TransportStopsTree subtrees = 7;
    public static final int SUBTREES_FIELD_NUMBER = 7;
    private java.util.List<net.flcnav.binary.FlcnavOdb.TransportStopsTree> subtrees_ =
      java.util.Collections.emptyList();
    public java.util.List<net.flcnav.binary.FlcnavOdb.TransportStopsTree> getSubtreesList() {
      return subtrees_;
    }
    public int getSubtreesCount() { return subtrees_.size(); }
    public net.flcnav.binary.FlcnavOdb.TransportStopsTree getSubtrees(int index) {
      return subtrees_.get(index);
    }
    
    // repeated .TransportStop leafs = 8;
    public static final int LEAFS_FIELD_NUMBER = 8;
    private java.util.List<net.flcnav.binary.FlcnavOdb.TransportStop> leafs_ =
      java.util.Collections.emptyList();
    public java.util.List<net.flcnav.binary.FlcnavOdb.TransportStop> getLeafsList() {
      return leafs_;
    }
    public int getLeafsCount() { return leafs_.size(); }
    public net.flcnav.binary.FlcnavOdb.TransportStop getLeafs(int index) {
      return leafs_.get(index);
    }
    
    // optional uint64 baseId = 16;
    public static final int BASEID_FIELD_NUMBER = 16;
    private boolean hasBaseId;
    private long baseId_ = 0L;
    public boolean hasBaseId() { return hasBaseId; }
    public long getBaseId() { return baseId_; }
    
    private void initFields() {
    }
    @Override
	public final boolean isInitialized() {
      if (!hasLeft) return false;
      if (!hasRight) return false;
      if (!hasTop) return false;
      if (!hasBottom) return false;
      for (net.flcnav.binary.FlcnavOdb.TransportStopsTree element : getSubtreesList()) {
        if (!element.isInitialized()) return false;
      }
      for (net.flcnav.binary.FlcnavOdb.TransportStop element : getLeafsList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasLeft()) {
        output.writeSInt32(1, getLeft());
      }
      if (hasRight()) {
        output.writeSInt32(2, getRight());
      }
      if (hasTop()) {
        output.writeSInt32(3, getTop());
      }
      if (hasBottom()) {
        output.writeSInt32(4, getBottom());
      }
      for (net.flcnav.binary.FlcnavOdb.TransportStopsTree element : getSubtreesList()) {
        output.writeMessage(7, element);
      }
      for (net.flcnav.binary.FlcnavOdb.TransportStop element : getLeafsList()) {
        output.writeMessage(8, element);
      }
      if (hasBaseId()) {
        output.writeUInt64(16, getBaseId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasLeft()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, getLeft());
      }
      if (hasRight()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, getRight());
      }
      if (hasTop()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, getTop());
      }
      if (hasBottom()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(4, getBottom());
      }
      for (net.flcnav.binary.FlcnavOdb.TransportStopsTree element : getSubtreesList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, element);
      }
      for (net.flcnav.binary.FlcnavOdb.TransportStop element : getLeafsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, element);
      }
      if (hasBaseId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(16, getBaseId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.TransportStopsTree parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportStopsTree parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportStopsTree parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportStopsTree parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportStopsTree parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportStopsTree parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportStopsTree parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.TransportStopsTree parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.TransportStopsTree parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.TransportStopsTree parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.TransportStopsTree prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.TransportStopsTree result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.TransportStopsTree.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.TransportStopsTree();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.TransportStopsTree internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.TransportStopsTree();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.TransportStopsTree.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.TransportStopsTree getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.TransportStopsTree.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.TransportStopsTree build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.TransportStopsTree buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.TransportStopsTree buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.subtrees_ != java.util.Collections.EMPTY_LIST) {
          result.subtrees_ =
            java.util.Collections.unmodifiableList(result.subtrees_);
        }
        if (result.leafs_ != java.util.Collections.EMPTY_LIST) {
          result.leafs_ =
            java.util.Collections.unmodifiableList(result.leafs_);
        }
        net.flcnav.binary.FlcnavOdb.TransportStopsTree returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.TransportStopsTree) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.TransportStopsTree)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.TransportStopsTree other) {
        if (other == net.flcnav.binary.FlcnavOdb.TransportStopsTree.getDefaultInstance()) return this;
        if (other.hasLeft()) {
          setLeft(other.getLeft());
        }
        if (other.hasRight()) {
          setRight(other.getRight());
        }
        if (other.hasTop()) {
          setTop(other.getTop());
        }
        if (other.hasBottom()) {
          setBottom(other.getBottom());
        }
        if (!other.subtrees_.isEmpty()) {
          if (result.subtrees_.isEmpty()) {
            result.subtrees_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.TransportStopsTree>();
          }
          result.subtrees_.addAll(other.subtrees_);
        }
        if (!other.leafs_.isEmpty()) {
          if (result.leafs_.isEmpty()) {
            result.leafs_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.TransportStop>();
          }
          result.leafs_.addAll(other.leafs_);
        }
        if (other.hasBaseId()) {
          setBaseId(other.getBaseId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setLeft(input.readSInt32());
              break;
            }
            case 16: {
              setRight(input.readSInt32());
              break;
            }
            case 24: {
              setTop(input.readSInt32());
              break;
            }
            case 32: {
              setBottom(input.readSInt32());
              break;
            }
            case 58: {
              net.flcnav.binary.FlcnavOdb.TransportStopsTree.Builder subBuilder = net.flcnav.binary.FlcnavOdb.TransportStopsTree.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addSubtrees(subBuilder.buildPartial());
              break;
            }
            case 66: {
              net.flcnav.binary.FlcnavOdb.TransportStop.Builder subBuilder = net.flcnav.binary.FlcnavOdb.TransportStop.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addLeafs(subBuilder.buildPartial());
              break;
            }
            case 128: {
              setBaseId(input.readUInt64());
              break;
            }
          }
        }
      }
      
      
      // required sint32 left = 1;
      public boolean hasLeft() {
        return result.hasLeft();
      }
      public int getLeft() {
        return result.getLeft();
      }
      public Builder setLeft(int value) {
        result.hasLeft = true;
        result.left_ = value;
        return this;
      }
      public Builder clearLeft() {
        result.hasLeft = false;
        result.left_ = 0;
        return this;
      }
      
      // required sint32 right = 2;
      public boolean hasRight() {
        return result.hasRight();
      }
      public int getRight() {
        return result.getRight();
      }
      public Builder setRight(int value) {
        result.hasRight = true;
        result.right_ = value;
        return this;
      }
      public Builder clearRight() {
        result.hasRight = false;
        result.right_ = 0;
        return this;
      }
      
      // required sint32 top = 3;
      public boolean hasTop() {
        return result.hasTop();
      }
      public int getTop() {
        return result.getTop();
      }
      public Builder setTop(int value) {
        result.hasTop = true;
        result.top_ = value;
        return this;
      }
      public Builder clearTop() {
        result.hasTop = false;
        result.top_ = 0;
        return this;
      }
      
      // required sint32 bottom = 4;
      public boolean hasBottom() {
        return result.hasBottom();
      }
      public int getBottom() {
        return result.getBottom();
      }
      public Builder setBottom(int value) {
        result.hasBottom = true;
        result.bottom_ = value;
        return this;
      }
      public Builder clearBottom() {
        result.hasBottom = false;
        result.bottom_ = 0;
        return this;
      }
      
      // repeated .TransportStopsTree subtrees = 7;
      public java.util.List<net.flcnav.binary.FlcnavOdb.TransportStopsTree> getSubtreesList() {
        return java.util.Collections.unmodifiableList(result.subtrees_);
      }
      public int getSubtreesCount() {
        return result.getSubtreesCount();
      }
      public net.flcnav.binary.FlcnavOdb.TransportStopsTree getSubtrees(int index) {
        return result.getSubtrees(index);
      }
      public Builder setSubtrees(int index, net.flcnav.binary.FlcnavOdb.TransportStopsTree value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.subtrees_.set(index, value);
        return this;
      }
      public Builder setSubtrees(int index, net.flcnav.binary.FlcnavOdb.TransportStopsTree.Builder builderForValue) {
        result.subtrees_.set(index, builderForValue.build());
        return this;
      }
      public Builder addSubtrees(net.flcnav.binary.FlcnavOdb.TransportStopsTree value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.subtrees_.isEmpty()) {
          result.subtrees_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.TransportStopsTree>();
        }
        result.subtrees_.add(value);
        return this;
      }
      public Builder addSubtrees(net.flcnav.binary.FlcnavOdb.TransportStopsTree.Builder builderForValue) {
        if (result.subtrees_.isEmpty()) {
          result.subtrees_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.TransportStopsTree>();
        }
        result.subtrees_.add(builderForValue.build());
        return this;
      }
      public Builder addAllSubtrees(
          java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.TransportStopsTree> values) {
        if (result.subtrees_.isEmpty()) {
          result.subtrees_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.TransportStopsTree>();
        }
        super.addAll(values, result.subtrees_);
        return this;
      }
      public Builder clearSubtrees() {
        result.subtrees_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .TransportStop leafs = 8;
      public java.util.List<net.flcnav.binary.FlcnavOdb.TransportStop> getLeafsList() {
        return java.util.Collections.unmodifiableList(result.leafs_);
      }
      public int getLeafsCount() {
        return result.getLeafsCount();
      }
      public net.flcnav.binary.FlcnavOdb.TransportStop getLeafs(int index) {
        return result.getLeafs(index);
      }
      public Builder setLeafs(int index, net.flcnav.binary.FlcnavOdb.TransportStop value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.leafs_.set(index, value);
        return this;
      }
      public Builder setLeafs(int index, net.flcnav.binary.FlcnavOdb.TransportStop.Builder builderForValue) {
        result.leafs_.set(index, builderForValue.build());
        return this;
      }
      public Builder addLeafs(net.flcnav.binary.FlcnavOdb.TransportStop value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.leafs_.isEmpty()) {
          result.leafs_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.TransportStop>();
        }
        result.leafs_.add(value);
        return this;
      }
      public Builder addLeafs(net.flcnav.binary.FlcnavOdb.TransportStop.Builder builderForValue) {
        if (result.leafs_.isEmpty()) {
          result.leafs_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.TransportStop>();
        }
        result.leafs_.add(builderForValue.build());
        return this;
      }
      public Builder addAllLeafs(
          java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.TransportStop> values) {
        if (result.leafs_.isEmpty()) {
          result.leafs_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.TransportStop>();
        }
        super.addAll(values, result.leafs_);
        return this;
      }
      public Builder clearLeafs() {
        result.leafs_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional uint64 baseId = 16;
      public boolean hasBaseId() {
        return result.hasBaseId();
      }
      public long getBaseId() {
        return result.getBaseId();
      }
      public Builder setBaseId(long value) {
        result.hasBaseId = true;
        result.baseId_ = value;
        return this;
      }
      public Builder clearBaseId() {
        result.hasBaseId = false;
        result.baseId_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:TransportStopsTree)
    }
    
    static {
      defaultInstance = new TransportStopsTree(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TransportStopsTree)
  }
  
  public static final class FlcNavTransportIndex extends
      com.google.protobuf.GeneratedMessage {
    // Use FlcNavTransportIndex.newBuilder() to construct.
    private FlcNavTransportIndex() {
      initFields();
    }
    private FlcNavTransportIndex(boolean noInit) {}
    
    private static final FlcNavTransportIndex defaultInstance;
    public static FlcNavTransportIndex getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public FlcNavTransportIndex getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavTransportIndex_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavTransportIndex_fieldAccessorTable;
    }
    
    // optional string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional .TransportRoutes routes = 3;
    public static final int ROUTES_FIELD_NUMBER = 3;
    private boolean hasRoutes;
    private net.flcnav.binary.FlcnavOdb.TransportRoutes routes_;
    public boolean hasRoutes() { return hasRoutes; }
    public net.flcnav.binary.FlcnavOdb.TransportRoutes getRoutes() { return routes_; }
    
    // optional .TransportStopsTree stops = 6;
    public static final int STOPS_FIELD_NUMBER = 6;
    private boolean hasStops;
    private net.flcnav.binary.FlcnavOdb.TransportStopsTree stops_;
    public boolean hasStops() { return hasStops; }
    public net.flcnav.binary.FlcnavOdb.TransportStopsTree getStops() { return stops_; }
    
    // required .StringTable stringTable = 9;
    public static final int STRINGTABLE_FIELD_NUMBER = 9;
    private boolean hasStringTable;
    private net.flcnav.binary.FlcnavOdb.StringTable stringTable_;
    public boolean hasStringTable() { return hasStringTable; }
    public net.flcnav.binary.FlcnavOdb.StringTable getStringTable() { return stringTable_; }
    
    private void initFields() {
      routes_ = net.flcnav.binary.FlcnavOdb.TransportRoutes.getDefaultInstance();
      stops_ = net.flcnav.binary.FlcnavOdb.TransportStopsTree.getDefaultInstance();
      stringTable_ = net.flcnav.binary.FlcnavOdb.StringTable.getDefaultInstance();
    }
    @Override
	public final boolean isInitialized() {
      if (!hasStringTable) return false;
      if (hasRoutes()) {
        if (!getRoutes().isInitialized()) return false;
      }
      if (hasStops()) {
        if (!getStops().isInitialized()) return false;
      }
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasRoutes()) {
        output.writeMessage(3, getRoutes());
      }
      if (hasStops()) {
        output.writeMessage(6, getStops());
      }
      if (hasStringTable()) {
        output.writeMessage(9, getStringTable());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasRoutes()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRoutes());
      }
      if (hasStops()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getStops());
      }
      if (hasStringTable()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getStringTable());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex other) {
        if (other == net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasRoutes()) {
          mergeRoutes(other.getRoutes());
        }
        if (other.hasStops()) {
          mergeStops(other.getStops());
        }
        if (other.hasStringTable()) {
          mergeStringTable(other.getStringTable());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 26: {
              net.flcnav.binary.FlcnavOdb.TransportRoutes.Builder subBuilder = net.flcnav.binary.FlcnavOdb.TransportRoutes.newBuilder();
              if (hasRoutes()) {
                subBuilder.mergeFrom(getRoutes());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRoutes(subBuilder.buildPartial());
              break;
            }
            case 50: {
              net.flcnav.binary.FlcnavOdb.TransportStopsTree.Builder subBuilder = net.flcnav.binary.FlcnavOdb.TransportStopsTree.newBuilder();
              if (hasStops()) {
                subBuilder.mergeFrom(getStops());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setStops(subBuilder.buildPartial());
              break;
            }
            case 74: {
              net.flcnav.binary.FlcnavOdb.StringTable.Builder subBuilder = net.flcnav.binary.FlcnavOdb.StringTable.newBuilder();
              if (hasStringTable()) {
                subBuilder.mergeFrom(getStringTable());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setStringTable(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional .TransportRoutes routes = 3;
      public boolean hasRoutes() {
        return result.hasRoutes();
      }
      public net.flcnav.binary.FlcnavOdb.TransportRoutes getRoutes() {
        return result.getRoutes();
      }
      public Builder setRoutes(net.flcnav.binary.FlcnavOdb.TransportRoutes value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRoutes = true;
        result.routes_ = value;
        return this;
      }
      public Builder setRoutes(net.flcnav.binary.FlcnavOdb.TransportRoutes.Builder builderForValue) {
        result.hasRoutes = true;
        result.routes_ = builderForValue.build();
        return this;
      }
      public Builder mergeRoutes(net.flcnav.binary.FlcnavOdb.TransportRoutes value) {
        if (result.hasRoutes() &&
            result.routes_ != net.flcnav.binary.FlcnavOdb.TransportRoutes.getDefaultInstance()) {
          result.routes_ =
            net.flcnav.binary.FlcnavOdb.TransportRoutes.newBuilder(result.routes_).mergeFrom(value).buildPartial();
        } else {
          result.routes_ = value;
        }
        result.hasRoutes = true;
        return this;
      }
      public Builder clearRoutes() {
        result.hasRoutes = false;
        result.routes_ = net.flcnav.binary.FlcnavOdb.TransportRoutes.getDefaultInstance();
        return this;
      }
      
      // optional .TransportStopsTree stops = 6;
      public boolean hasStops() {
        return result.hasStops();
      }
      public net.flcnav.binary.FlcnavOdb.TransportStopsTree getStops() {
        return result.getStops();
      }
      public Builder setStops(net.flcnav.binary.FlcnavOdb.TransportStopsTree value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasStops = true;
        result.stops_ = value;
        return this;
      }
      public Builder setStops(net.flcnav.binary.FlcnavOdb.TransportStopsTree.Builder builderForValue) {
        result.hasStops = true;
        result.stops_ = builderForValue.build();
        return this;
      }
      public Builder mergeStops(net.flcnav.binary.FlcnavOdb.TransportStopsTree value) {
        if (result.hasStops() &&
            result.stops_ != net.flcnav.binary.FlcnavOdb.TransportStopsTree.getDefaultInstance()) {
          result.stops_ =
            net.flcnav.binary.FlcnavOdb.TransportStopsTree.newBuilder(result.stops_).mergeFrom(value).buildPartial();
        } else {
          result.stops_ = value;
        }
        result.hasStops = true;
        return this;
      }
      public Builder clearStops() {
        result.hasStops = false;
        result.stops_ = net.flcnav.binary.FlcnavOdb.TransportStopsTree.getDefaultInstance();
        return this;
      }
      
      // required .StringTable stringTable = 9;
      public boolean hasStringTable() {
        return result.hasStringTable();
      }
      public net.flcnav.binary.FlcnavOdb.StringTable getStringTable() {
        return result.getStringTable();
      }
      public Builder setStringTable(net.flcnav.binary.FlcnavOdb.StringTable value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasStringTable = true;
        result.stringTable_ = value;
        return this;
      }
      public Builder setStringTable(net.flcnav.binary.FlcnavOdb.StringTable.Builder builderForValue) {
        result.hasStringTable = true;
        result.stringTable_ = builderForValue.build();
        return this;
      }
      public Builder mergeStringTable(net.flcnav.binary.FlcnavOdb.StringTable value) {
        if (result.hasStringTable() &&
            result.stringTable_ != net.flcnav.binary.FlcnavOdb.StringTable.getDefaultInstance()) {
          result.stringTable_ =
            net.flcnav.binary.FlcnavOdb.StringTable.newBuilder(result.stringTable_).mergeFrom(value).buildPartial();
        } else {
          result.stringTable_ = value;
        }
        result.hasStringTable = true;
        return this;
      }
      public Builder clearStringTable() {
        result.hasStringTable = false;
        result.stringTable_ = net.flcnav.binary.FlcnavOdb.StringTable.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:FlcNavTransportIndex)
    }
    
    static {
      defaultInstance = new FlcNavTransportIndex(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FlcNavTransportIndex)
  }
  
  public static final class FlcNavPoiIndex extends
      com.google.protobuf.GeneratedMessage {
    // Use FlcNavPoiIndex.newBuilder() to construct.
    private FlcNavPoiIndex() {
      initFields();
    }
    private FlcNavPoiIndex(boolean noInit) {}
    
    private static final FlcNavPoiIndex defaultInstance;
    public static FlcNavPoiIndex getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public FlcNavPoiIndex getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavPoiIndex_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavPoiIndex_fieldAccessorTable;
    }
    
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // required .FlcNavTileBox boundaries = 2;
    public static final int BOUNDARIES_FIELD_NUMBER = 2;
    private boolean hasBoundaries;
    private net.flcnav.binary.FlcnavOdb.FlcNavTileBox boundaries_;
    public boolean hasBoundaries() { return hasBoundaries; }
    public net.flcnav.binary.FlcnavOdb.FlcNavTileBox getBoundaries() { return boundaries_; }
    
    // repeated .FlcNavCategoryTable categoriesTable = 3;
    public static final int CATEGORIESTABLE_FIELD_NUMBER = 3;
    private java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable> categoriesTable_ =
      java.util.Collections.emptyList();
    public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable> getCategoriesTableList() {
      return categoriesTable_;
    }
    public int getCategoriesTableCount() { return categoriesTable_.size(); }
    public net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable getCategoriesTable(int index) {
      return categoriesTable_.get(index);
    }
    
    // optional .FlcNavPoiNameIndex nameIndex = 4;
    public static final int NAMEINDEX_FIELD_NUMBER = 4;
    private boolean hasNameIndex;
    private net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex nameIndex_;
    public boolean hasNameIndex() { return hasNameIndex; }
    public net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex getNameIndex() { return nameIndex_; }
    
    // repeated .FlcNavPoiBox boxes = 6;
    public static final int BOXES_FIELD_NUMBER = 6;
    private java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavPoiBox> boxes_ =
      java.util.Collections.emptyList();
    public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavPoiBox> getBoxesList() {
      return boxes_;
    }
    public int getBoxesCount() { return boxes_.size(); }
    public net.flcnav.binary.FlcnavOdb.FlcNavPoiBox getBoxes(int index) {
      return boxes_.get(index);
    }
    
    // repeated .FlcNavPoiBoxData poiData = 9;
    public static final int POIDATA_FIELD_NUMBER = 9;
    private java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData> poiData_ =
      java.util.Collections.emptyList();
    public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData> getPoiDataList() {
      return poiData_;
    }
    public int getPoiDataCount() { return poiData_.size(); }
    public net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData getPoiData(int index) {
      return poiData_.get(index);
    }
    
    private void initFields() {
      boundaries_ = net.flcnav.binary.FlcnavOdb.FlcNavTileBox.getDefaultInstance();
      nameIndex_ = net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.getDefaultInstance();
    }
    @Override
	public final boolean isInitialized() {
      if (!hasName) return false;
      if (!hasBoundaries) return false;
      if (!getBoundaries().isInitialized()) return false;
      for (net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable element : getCategoriesTableList()) {
        if (!element.isInitialized()) return false;
      }
      if (hasNameIndex()) {
        if (!getNameIndex().isInitialized()) return false;
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavPoiBox element : getBoxesList()) {
        if (!element.isInitialized()) return false;
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData element : getPoiDataList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasBoundaries()) {
        output.writeMessage(2, getBoundaries());
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable element : getCategoriesTableList()) {
        output.writeMessage(3, element);
      }
      if (hasNameIndex()) {
        output.writeMessage(4, getNameIndex());
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavPoiBox element : getBoxesList()) {
        output.writeMessage(6, element);
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData element : getPoiDataList()) {
        output.writeMessage(9, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasBoundaries()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getBoundaries());
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable element : getCategoriesTableList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      if (hasNameIndex()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getNameIndex());
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavPoiBox element : getBoxesList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, element);
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData element : getPoiDataList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.categoriesTable_ != java.util.Collections.EMPTY_LIST) {
          result.categoriesTable_ =
            java.util.Collections.unmodifiableList(result.categoriesTable_);
        }
        if (result.boxes_ != java.util.Collections.EMPTY_LIST) {
          result.boxes_ =
            java.util.Collections.unmodifiableList(result.boxes_);
        }
        if (result.poiData_ != java.util.Collections.EMPTY_LIST) {
          result.poiData_ =
            java.util.Collections.unmodifiableList(result.poiData_);
        }
        net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex other) {
        if (other == net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasBoundaries()) {
          mergeBoundaries(other.getBoundaries());
        }
        if (!other.categoriesTable_.isEmpty()) {
          if (result.categoriesTable_.isEmpty()) {
            result.categoriesTable_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable>();
          }
          result.categoriesTable_.addAll(other.categoriesTable_);
        }
        if (other.hasNameIndex()) {
          mergeNameIndex(other.getNameIndex());
        }
        if (!other.boxes_.isEmpty()) {
          if (result.boxes_.isEmpty()) {
            result.boxes_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavPoiBox>();
          }
          result.boxes_.addAll(other.boxes_);
        }
        if (!other.poiData_.isEmpty()) {
          if (result.poiData_.isEmpty()) {
            result.poiData_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData>();
          }
          result.poiData_.addAll(other.poiData_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 18: {
              net.flcnav.binary.FlcnavOdb.FlcNavTileBox.Builder subBuilder = net.flcnav.binary.FlcnavOdb.FlcNavTileBox.newBuilder();
              if (hasBoundaries()) {
                subBuilder.mergeFrom(getBoundaries());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setBoundaries(subBuilder.buildPartial());
              break;
            }
            case 26: {
              net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable.Builder subBuilder = net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCategoriesTable(subBuilder.buildPartial());
              break;
            }
            case 34: {
              net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.Builder subBuilder = net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.newBuilder();
              if (hasNameIndex()) {
                subBuilder.mergeFrom(getNameIndex());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setNameIndex(subBuilder.buildPartial());
              break;
            }
            case 50: {
              net.flcnav.binary.FlcnavOdb.FlcNavPoiBox.Builder subBuilder = net.flcnav.binary.FlcnavOdb.FlcNavPoiBox.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addBoxes(subBuilder.buildPartial());
              break;
            }
            case 74: {
              net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData.Builder subBuilder = net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addPoiData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // required .FlcNavTileBox boundaries = 2;
      public boolean hasBoundaries() {
        return result.hasBoundaries();
      }
      public net.flcnav.binary.FlcnavOdb.FlcNavTileBox getBoundaries() {
        return result.getBoundaries();
      }
      public Builder setBoundaries(net.flcnav.binary.FlcnavOdb.FlcNavTileBox value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasBoundaries = true;
        result.boundaries_ = value;
        return this;
      }
      public Builder setBoundaries(net.flcnav.binary.FlcnavOdb.FlcNavTileBox.Builder builderForValue) {
        result.hasBoundaries = true;
        result.boundaries_ = builderForValue.build();
        return this;
      }
      public Builder mergeBoundaries(net.flcnav.binary.FlcnavOdb.FlcNavTileBox value) {
        if (result.hasBoundaries() &&
            result.boundaries_ != net.flcnav.binary.FlcnavOdb.FlcNavTileBox.getDefaultInstance()) {
          result.boundaries_ =
            net.flcnav.binary.FlcnavOdb.FlcNavTileBox.newBuilder(result.boundaries_).mergeFrom(value).buildPartial();
        } else {
          result.boundaries_ = value;
        }
        result.hasBoundaries = true;
        return this;
      }
      public Builder clearBoundaries() {
        result.hasBoundaries = false;
        result.boundaries_ = net.flcnav.binary.FlcnavOdb.FlcNavTileBox.getDefaultInstance();
        return this;
      }
      
      // repeated .FlcNavCategoryTable categoriesTable = 3;
      public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable> getCategoriesTableList() {
        return java.util.Collections.unmodifiableList(result.categoriesTable_);
      }
      public int getCategoriesTableCount() {
        return result.getCategoriesTableCount();
      }
      public net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable getCategoriesTable(int index) {
        return result.getCategoriesTable(index);
      }
      public Builder setCategoriesTable(int index, net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.categoriesTable_.set(index, value);
        return this;
      }
      public Builder setCategoriesTable(int index, net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable.Builder builderForValue) {
        result.categoriesTable_.set(index, builderForValue.build());
        return this;
      }
      public Builder addCategoriesTable(net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.categoriesTable_.isEmpty()) {
          result.categoriesTable_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable>();
        }
        result.categoriesTable_.add(value);
        return this;
      }
      public Builder addCategoriesTable(net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable.Builder builderForValue) {
        if (result.categoriesTable_.isEmpty()) {
          result.categoriesTable_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable>();
        }
        result.categoriesTable_.add(builderForValue.build());
        return this;
      }
      public Builder addAllCategoriesTable(
          java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable> values) {
        if (result.categoriesTable_.isEmpty()) {
          result.categoriesTable_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable>();
        }
        super.addAll(values, result.categoriesTable_);
        return this;
      }
      public Builder clearCategoriesTable() {
        result.categoriesTable_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .FlcNavPoiNameIndex nameIndex = 4;
      public boolean hasNameIndex() {
        return result.hasNameIndex();
      }
      public net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex getNameIndex() {
        return result.getNameIndex();
      }
      public Builder setNameIndex(net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasNameIndex = true;
        result.nameIndex_ = value;
        return this;
      }
      public Builder setNameIndex(net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.Builder builderForValue) {
        result.hasNameIndex = true;
        result.nameIndex_ = builderForValue.build();
        return this;
      }
      public Builder mergeNameIndex(net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex value) {
        if (result.hasNameIndex() &&
            result.nameIndex_ != net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.getDefaultInstance()) {
          result.nameIndex_ =
            net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.newBuilder(result.nameIndex_).mergeFrom(value).buildPartial();
        } else {
          result.nameIndex_ = value;
        }
        result.hasNameIndex = true;
        return this;
      }
      public Builder clearNameIndex() {
        result.hasNameIndex = false;
        result.nameIndex_ = net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.getDefaultInstance();
        return this;
      }
      
      // repeated .FlcNavPoiBox boxes = 6;
      public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavPoiBox> getBoxesList() {
        return java.util.Collections.unmodifiableList(result.boxes_);
      }
      public int getBoxesCount() {
        return result.getBoxesCount();
      }
      public net.flcnav.binary.FlcnavOdb.FlcNavPoiBox getBoxes(int index) {
        return result.getBoxes(index);
      }
      public Builder setBoxes(int index, net.flcnav.binary.FlcnavOdb.FlcNavPoiBox value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.boxes_.set(index, value);
        return this;
      }
      public Builder setBoxes(int index, net.flcnav.binary.FlcnavOdb.FlcNavPoiBox.Builder builderForValue) {
        result.boxes_.set(index, builderForValue.build());
        return this;
      }
      public Builder addBoxes(net.flcnav.binary.FlcnavOdb.FlcNavPoiBox value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.boxes_.isEmpty()) {
          result.boxes_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavPoiBox>();
        }
        result.boxes_.add(value);
        return this;
      }
      public Builder addBoxes(net.flcnav.binary.FlcnavOdb.FlcNavPoiBox.Builder builderForValue) {
        if (result.boxes_.isEmpty()) {
          result.boxes_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavPoiBox>();
        }
        result.boxes_.add(builderForValue.build());
        return this;
      }
      public Builder addAllBoxes(
          java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.FlcNavPoiBox> values) {
        if (result.boxes_.isEmpty()) {
          result.boxes_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavPoiBox>();
        }
        super.addAll(values, result.boxes_);
        return this;
      }
      public Builder clearBoxes() {
        result.boxes_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .FlcNavPoiBoxData poiData = 9;
      public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData> getPoiDataList() {
        return java.util.Collections.unmodifiableList(result.poiData_);
      }
      public int getPoiDataCount() {
        return result.getPoiDataCount();
      }
      public net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData getPoiData(int index) {
        return result.getPoiData(index);
      }
      public Builder setPoiData(int index, net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.poiData_.set(index, value);
        return this;
      }
      public Builder setPoiData(int index, net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData.Builder builderForValue) {
        result.poiData_.set(index, builderForValue.build());
        return this;
      }
      public Builder addPoiData(net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.poiData_.isEmpty()) {
          result.poiData_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData>();
        }
        result.poiData_.add(value);
        return this;
      }
      public Builder addPoiData(net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData.Builder builderForValue) {
        if (result.poiData_.isEmpty()) {
          result.poiData_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData>();
        }
        result.poiData_.add(builderForValue.build());
        return this;
      }
      public Builder addAllPoiData(
          java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData> values) {
        if (result.poiData_.isEmpty()) {
          result.poiData_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData>();
        }
        super.addAll(values, result.poiData_);
        return this;
      }
      public Builder clearPoiData() {
        result.poiData_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:FlcNavPoiIndex)
    }
    
    static {
      defaultInstance = new FlcNavPoiIndex(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FlcNavPoiIndex)
  }
  
  public static final class FlcNavPoiNameIndex extends
      com.google.protobuf.GeneratedMessage {
    // Use FlcNavPoiNameIndex.newBuilder() to construct.
    private FlcNavPoiNameIndex() {
      initFields();
    }
    private FlcNavPoiNameIndex(boolean noInit) {}
    
    private static final FlcNavPoiNameIndex defaultInstance;
    public static FlcNavPoiNameIndex getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public FlcNavPoiNameIndex getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavPoiNameIndex_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavPoiNameIndex_fieldAccessorTable;
    }
    
    public static final class FlcNavPoiNameIndexData extends
        com.google.protobuf.GeneratedMessage {
      // Use FlcNavPoiNameIndexData.newBuilder() to construct.
      private FlcNavPoiNameIndexData() {
        initFields();
      }
      private FlcNavPoiNameIndexData(boolean noInit) {}
      
      private static final FlcNavPoiNameIndexData defaultInstance;
      public static FlcNavPoiNameIndexData getDefaultInstance() {
        return defaultInstance;
      }
      
      @Override
	public FlcNavPoiNameIndexData getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavPoiNameIndex_FlcNavPoiNameIndexData_descriptor;
      }
      
      @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavPoiNameIndex_FlcNavPoiNameIndexData_fieldAccessorTable;
      }
      
      // repeated .FlcNavPoiNameIndexDataAtom atoms = 3;
      public static final int ATOMS_FIELD_NUMBER = 3;
      private java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom> atoms_ =
        java.util.Collections.emptyList();
      public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom> getAtomsList() {
        return atoms_;
      }
      public int getAtomsCount() { return atoms_.size(); }
      public net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom getAtoms(int index) {
        return atoms_.get(index);
      }
      
      private void initFields() {
      }
      @Override
	public final boolean isInitialized() {
        return true;
      }
      
      @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom element : getAtomsList()) {
          output.writeMessage(3, element);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      @Override
	public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        for (net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom element : getAtomsList()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, element);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      @Override
	public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      @Override
	public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData result;
        
        // Construct using net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData();
          return builder;
        }
        
        @Override
		protected net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData internalGetResult() {
          return result;
        }
        
        @Override
		public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData();
          return this;
        }
        
        @Override
		public Builder clone() {
          return create().mergeFrom(result);
        }
        
        @Override
		public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData.getDescriptor();
        }
        
        @Override
		public net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData getDefaultInstanceForType() {
          return net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData.getDefaultInstance();
        }
        
        @Override
		public boolean isInitialized() {
          return result.isInitialized();
        }
        @Override
		public net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        @Override
		public net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          if (result.atoms_ != java.util.Collections.EMPTY_LIST) {
            result.atoms_ =
              java.util.Collections.unmodifiableList(result.atoms_);
          }
          net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData returnMe = result;
          result = null;
          return returnMe;
        }
        
        @Override
		public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData) {
            return mergeFrom((net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData other) {
          if (other == net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData.getDefaultInstance()) return this;
          if (!other.atoms_.isEmpty()) {
            if (result.atoms_.isEmpty()) {
              result.atoms_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom>();
            }
            result.atoms_.addAll(other.atoms_);
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        @Override
		public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 26: {
                net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom.Builder subBuilder = net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addAtoms(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        
        // repeated .FlcNavPoiNameIndexDataAtom atoms = 3;
        public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom> getAtomsList() {
          return java.util.Collections.unmodifiableList(result.atoms_);
        }
        public int getAtomsCount() {
          return result.getAtomsCount();
        }
        public net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom getAtoms(int index) {
          return result.getAtoms(index);
        }
        public Builder setAtoms(int index, net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.atoms_.set(index, value);
          return this;
        }
        public Builder setAtoms(int index, net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom.Builder builderForValue) {
          result.atoms_.set(index, builderForValue.build());
          return this;
        }
        public Builder addAtoms(net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom value) {
          if (value == null) {
            throw new NullPointerException();
          }
          if (result.atoms_.isEmpty()) {
            result.atoms_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom>();
          }
          result.atoms_.add(value);
          return this;
        }
        public Builder addAtoms(net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom.Builder builderForValue) {
          if (result.atoms_.isEmpty()) {
            result.atoms_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom>();
          }
          result.atoms_.add(builderForValue.build());
          return this;
        }
        public Builder addAllAtoms(
            java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom> values) {
          if (result.atoms_.isEmpty()) {
            result.atoms_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom>();
          }
          super.addAll(values, result.atoms_);
          return this;
        }
        public Builder clearAtoms() {
          result.atoms_ = java.util.Collections.emptyList();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:FlcNavPoiNameIndex.FlcNavPoiNameIndexData)
      }
      
      static {
        defaultInstance = new FlcNavPoiNameIndexData(true);
        net.flcnav.binary.FlcnavOdb.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:FlcNavPoiNameIndex.FlcNavPoiNameIndexData)
    }
    
    // required .IndexedStringTable table = 3;
    public static final int TABLE_FIELD_NUMBER = 3;
    private boolean hasTable;
    private net.flcnav.binary.FlcnavOdb.IndexedStringTable table_;
    public boolean hasTable() { return hasTable; }
    public net.flcnav.binary.FlcnavOdb.IndexedStringTable getTable() { return table_; }
    
    // repeated .FlcNavPoiNameIndex.FlcNavPoiNameIndexData data = 5;
    public static final int DATA_FIELD_NUMBER = 5;
    private java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData> data_ =
      java.util.Collections.emptyList();
    public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData> getDataList() {
      return data_;
    }
    public int getDataCount() { return data_.size(); }
    public net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData getData(int index) {
      return data_.get(index);
    }
    
    private void initFields() {
      table_ = net.flcnav.binary.FlcnavOdb.IndexedStringTable.getDefaultInstance();
    }
    @Override
	public final boolean isInitialized() {
      if (!hasTable) return false;
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTable()) {
        output.writeMessage(3, getTable());
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData element : getDataList()) {
        output.writeMessage(5, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTable()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTable());
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData element : getDataList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.data_ != java.util.Collections.EMPTY_LIST) {
          result.data_ =
            java.util.Collections.unmodifiableList(result.data_);
        }
        net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex other) {
        if (other == net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.getDefaultInstance()) return this;
        if (other.hasTable()) {
          mergeTable(other.getTable());
        }
        if (!other.data_.isEmpty()) {
          if (result.data_.isEmpty()) {
            result.data_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData>();
          }
          result.data_.addAll(other.data_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 26: {
              net.flcnav.binary.FlcnavOdb.IndexedStringTable.Builder subBuilder = net.flcnav.binary.FlcnavOdb.IndexedStringTable.newBuilder();
              if (hasTable()) {
                subBuilder.mergeFrom(getTable());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTable(subBuilder.buildPartial());
              break;
            }
            case 42: {
              net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData.Builder subBuilder = net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .IndexedStringTable table = 3;
      public boolean hasTable() {
        return result.hasTable();
      }
      public net.flcnav.binary.FlcnavOdb.IndexedStringTable getTable() {
        return result.getTable();
      }
      public Builder setTable(net.flcnav.binary.FlcnavOdb.IndexedStringTable value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTable = true;
        result.table_ = value;
        return this;
      }
      public Builder setTable(net.flcnav.binary.FlcnavOdb.IndexedStringTable.Builder builderForValue) {
        result.hasTable = true;
        result.table_ = builderForValue.build();
        return this;
      }
      public Builder mergeTable(net.flcnav.binary.FlcnavOdb.IndexedStringTable value) {
        if (result.hasTable() &&
            result.table_ != net.flcnav.binary.FlcnavOdb.IndexedStringTable.getDefaultInstance()) {
          result.table_ =
            net.flcnav.binary.FlcnavOdb.IndexedStringTable.newBuilder(result.table_).mergeFrom(value).buildPartial();
        } else {
          result.table_ = value;
        }
        result.hasTable = true;
        return this;
      }
      public Builder clearTable() {
        result.hasTable = false;
        result.table_ = net.flcnav.binary.FlcnavOdb.IndexedStringTable.getDefaultInstance();
        return this;
      }
      
      // repeated .FlcNavPoiNameIndex.FlcNavPoiNameIndexData data = 5;
      public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData> getDataList() {
        return java.util.Collections.unmodifiableList(result.data_);
      }
      public int getDataCount() {
        return result.getDataCount();
      }
      public net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData getData(int index) {
        return result.getData(index);
      }
      public Builder setData(int index, net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.data_.set(index, value);
        return this;
      }
      public Builder setData(int index, net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData.Builder builderForValue) {
        result.data_.set(index, builderForValue.build());
        return this;
      }
      public Builder addData(net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.data_.isEmpty()) {
          result.data_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData>();
        }
        result.data_.add(value);
        return this;
      }
      public Builder addData(net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData.Builder builderForValue) {
        if (result.data_.isEmpty()) {
          result.data_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData>();
        }
        result.data_.add(builderForValue.build());
        return this;
      }
      public Builder addAllData(
          java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData> values) {
        if (result.data_.isEmpty()) {
          result.data_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData>();
        }
        super.addAll(values, result.data_);
        return this;
      }
      public Builder clearData() {
        result.data_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:FlcNavPoiNameIndex)
    }
    
    static {
      defaultInstance = new FlcNavPoiNameIndex(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FlcNavPoiNameIndex)
  }
  
  public static final class FlcNavPoiNameIndexDataAtom extends
      com.google.protobuf.GeneratedMessage {
    // Use FlcNavPoiNameIndexDataAtom.newBuilder() to construct.
    private FlcNavPoiNameIndexDataAtom() {
      initFields();
    }
    private FlcNavPoiNameIndexDataAtom(boolean noInit) {}
    
    private static final FlcNavPoiNameIndexDataAtom defaultInstance;
    public static FlcNavPoiNameIndexDataAtom getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public FlcNavPoiNameIndexDataAtom getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavPoiNameIndexDataAtom_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavPoiNameIndexDataAtom_fieldAccessorTable;
    }
    
    // optional uint32 zoom = 2;
    public static final int ZOOM_FIELD_NUMBER = 2;
    private boolean hasZoom;
    private int zoom_ = 0;
    public boolean hasZoom() { return hasZoom; }
    public int getZoom() { return zoom_; }
    
    // optional uint32 x = 3;
    public static final int X_FIELD_NUMBER = 3;
    private boolean hasX;
    private int x_ = 0;
    public boolean hasX() { return hasX; }
    public int getX() { return x_; }
    
    // optional uint32 y = 4;
    public static final int Y_FIELD_NUMBER = 4;
    private boolean hasY;
    private int y_ = 0;
    public boolean hasY() { return hasY; }
    public int getY() { return y_; }
    
    // optional fixed32 shiftTo = 14;
    public static final int SHIFTTO_FIELD_NUMBER = 14;
    private boolean hasShiftTo;
    private int shiftTo_ = 0;
    public boolean hasShiftTo() { return hasShiftTo; }
    public int getShiftTo() { return shiftTo_; }
    
    private void initFields() {
    }
    @Override
	public final boolean isInitialized() {
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasZoom()) {
        output.writeUInt32(2, getZoom());
      }
      if (hasX()) {
        output.writeUInt32(3, getX());
      }
      if (hasY()) {
        output.writeUInt32(4, getY());
      }
      if (hasShiftTo()) {
        output.writeFixed32(14, getShiftTo());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasZoom()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getZoom());
      }
      if (hasX()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getX());
      }
      if (hasY()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, getY());
      }
      if (hasShiftTo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(14, getShiftTo());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom other) {
        if (other == net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom.getDefaultInstance()) return this;
        if (other.hasZoom()) {
          setZoom(other.getZoom());
        }
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasShiftTo()) {
          setShiftTo(other.getShiftTo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 16: {
              setZoom(input.readUInt32());
              break;
            }
            case 24: {
              setX(input.readUInt32());
              break;
            }
            case 32: {
              setY(input.readUInt32());
              break;
            }
            case 117: {
              setShiftTo(input.readFixed32());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 zoom = 2;
      public boolean hasZoom() {
        return result.hasZoom();
      }
      public int getZoom() {
        return result.getZoom();
      }
      public Builder setZoom(int value) {
        result.hasZoom = true;
        result.zoom_ = value;
        return this;
      }
      public Builder clearZoom() {
        result.hasZoom = false;
        result.zoom_ = 0;
        return this;
      }
      
      // optional uint32 x = 3;
      public boolean hasX() {
        return result.hasX();
      }
      public int getX() {
        return result.getX();
      }
      public Builder setX(int value) {
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder clearX() {
        result.hasX = false;
        result.x_ = 0;
        return this;
      }
      
      // optional uint32 y = 4;
      public boolean hasY() {
        return result.hasY();
      }
      public int getY() {
        return result.getY();
      }
      public Builder setY(int value) {
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder clearY() {
        result.hasY = false;
        result.y_ = 0;
        return this;
      }
      
      // optional fixed32 shiftTo = 14;
      public boolean hasShiftTo() {
        return result.hasShiftTo();
      }
      public int getShiftTo() {
        return result.getShiftTo();
      }
      public Builder setShiftTo(int value) {
        result.hasShiftTo = true;
        result.shiftTo_ = value;
        return this;
      }
      public Builder clearShiftTo() {
        result.hasShiftTo = false;
        result.shiftTo_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:FlcNavPoiNameIndexDataAtom)
    }
    
    static {
      defaultInstance = new FlcNavPoiNameIndexDataAtom(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FlcNavPoiNameIndexDataAtom)
  }
  
  public static final class FlcNavCategoryTable extends
      com.google.protobuf.GeneratedMessage {
    // Use FlcNavCategoryTable.newBuilder() to construct.
    private FlcNavCategoryTable() {
      initFields();
    }
    private FlcNavCategoryTable(boolean noInit) {}
    
    private static final FlcNavCategoryTable defaultInstance;
    public static FlcNavCategoryTable getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public FlcNavCategoryTable getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavCategoryTable_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavCategoryTable_fieldAccessorTable;
    }
    
    // required string category = 1;
    public static final int CATEGORY_FIELD_NUMBER = 1;
    private boolean hasCategory;
    private java.lang.String category_ = "";
    public boolean hasCategory() { return hasCategory; }
    public java.lang.String getCategory() { return category_; }
    
    // repeated string subcategories = 3;
    public static final int SUBCATEGORIES_FIELD_NUMBER = 3;
    private java.util.List<java.lang.String> subcategories_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getSubcategoriesList() {
      return subcategories_;
    }
    public int getSubcategoriesCount() { return subcategories_.size(); }
    public java.lang.String getSubcategories(int index) {
      return subcategories_.get(index);
    }
    
    private void initFields() {
    }
    @Override
	public final boolean isInitialized() {
      if (!hasCategory) return false;
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasCategory()) {
        output.writeString(1, getCategory());
      }
      for (java.lang.String element : getSubcategoriesList()) {
        output.writeString(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasCategory()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getCategory());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getSubcategoriesList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getSubcategoriesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.subcategories_ != java.util.Collections.EMPTY_LIST) {
          result.subcategories_ =
            java.util.Collections.unmodifiableList(result.subcategories_);
        }
        net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable other) {
        if (other == net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable.getDefaultInstance()) return this;
        if (other.hasCategory()) {
          setCategory(other.getCategory());
        }
        if (!other.subcategories_.isEmpty()) {
          if (result.subcategories_.isEmpty()) {
            result.subcategories_ = new java.util.ArrayList<java.lang.String>();
          }
          result.subcategories_.addAll(other.subcategories_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setCategory(input.readString());
              break;
            }
            case 26: {
              addSubcategories(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string category = 1;
      public boolean hasCategory() {
        return result.hasCategory();
      }
      public java.lang.String getCategory() {
        return result.getCategory();
      }
      public Builder setCategory(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasCategory = true;
        result.category_ = value;
        return this;
      }
      public Builder clearCategory() {
        result.hasCategory = false;
        result.category_ = getDefaultInstance().getCategory();
        return this;
      }
      
      // repeated string subcategories = 3;
      public java.util.List<java.lang.String> getSubcategoriesList() {
        return java.util.Collections.unmodifiableList(result.subcategories_);
      }
      public int getSubcategoriesCount() {
        return result.getSubcategoriesCount();
      }
      public java.lang.String getSubcategories(int index) {
        return result.getSubcategories(index);
      }
      public Builder setSubcategories(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.subcategories_.set(index, value);
        return this;
      }
      public Builder addSubcategories(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.subcategories_.isEmpty()) {
          result.subcategories_ = new java.util.ArrayList<java.lang.String>();
        }
        result.subcategories_.add(value);
        return this;
      }
      public Builder addAllSubcategories(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.subcategories_.isEmpty()) {
          result.subcategories_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.subcategories_);
        return this;
      }
      public Builder clearSubcategories() {
        result.subcategories_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:FlcNavCategoryTable)
    }
    
    static {
      defaultInstance = new FlcNavCategoryTable(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FlcNavCategoryTable)
  }
  
  public static final class FlcNavPoiBox extends
      com.google.protobuf.GeneratedMessage {
    // Use FlcNavPoiBox.newBuilder() to construct.
    private FlcNavPoiBox() {
      initFields();
    }
    private FlcNavPoiBox(boolean noInit) {}
    
    private static final FlcNavPoiBox defaultInstance;
    public static FlcNavPoiBox getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public FlcNavPoiBox getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavPoiBox_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavPoiBox_fieldAccessorTable;
    }
    
    // required uint32 zoom = 1;
    public static final int ZOOM_FIELD_NUMBER = 1;
    private boolean hasZoom;
    private int zoom_ = 0;
    public boolean hasZoom() { return hasZoom; }
    public int getZoom() { return zoom_; }
    
    // required sint32 left = 2;
    public static final int LEFT_FIELD_NUMBER = 2;
    private boolean hasLeft;
    private int left_ = 0;
    public boolean hasLeft() { return hasLeft; }
    public int getLeft() { return left_; }
    
    // required sint32 top = 3;
    public static final int TOP_FIELD_NUMBER = 3;
    private boolean hasTop;
    private int top_ = 0;
    public boolean hasTop() { return hasTop; }
    public int getTop() { return top_; }
    
    // optional .FlcNavPoiCategories categories = 4;
    public static final int CATEGORIES_FIELD_NUMBER = 4;
    private boolean hasCategories;
    private net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories categories_;
    public boolean hasCategories() { return hasCategories; }
    public net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories getCategories() { return categories_; }
    
    // repeated .FlcNavPoiBox subBoxes = 10;
    public static final int SUBBOXES_FIELD_NUMBER = 10;
    private java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavPoiBox> subBoxes_ =
      java.util.Collections.emptyList();
    public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavPoiBox> getSubBoxesList() {
      return subBoxes_;
    }
    public int getSubBoxesCount() { return subBoxes_.size(); }
    public net.flcnav.binary.FlcnavOdb.FlcNavPoiBox getSubBoxes(int index) {
      return subBoxes_.get(index);
    }
    
    // optional fixed32 shiftToData = 14;
    public static final int SHIFTTODATA_FIELD_NUMBER = 14;
    private boolean hasShiftToData;
    private int shiftToData_ = 0;
    public boolean hasShiftToData() { return hasShiftToData; }
    public int getShiftToData() { return shiftToData_; }
    
    private void initFields() {
      categories_ = net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories.getDefaultInstance();
    }
    @Override
	public final boolean isInitialized() {
      if (!hasZoom) return false;
      if (!hasLeft) return false;
      if (!hasTop) return false;
      for (net.flcnav.binary.FlcnavOdb.FlcNavPoiBox element : getSubBoxesList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasZoom()) {
        output.writeUInt32(1, getZoom());
      }
      if (hasLeft()) {
        output.writeSInt32(2, getLeft());
      }
      if (hasTop()) {
        output.writeSInt32(3, getTop());
      }
      if (hasCategories()) {
        output.writeMessage(4, getCategories());
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavPoiBox element : getSubBoxesList()) {
        output.writeMessage(10, element);
      }
      if (hasShiftToData()) {
        output.writeFixed32(14, getShiftToData());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasZoom()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getZoom());
      }
      if (hasLeft()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, getLeft());
      }
      if (hasTop()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, getTop());
      }
      if (hasCategories()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getCategories());
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavPoiBox element : getSubBoxesList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, element);
      }
      if (hasShiftToData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(14, getShiftToData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBox parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBox parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBox parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBox parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBox parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBox parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBox parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBox parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBox parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBox parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.FlcNavPoiBox prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.FlcNavPoiBox result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.FlcNavPoiBox.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.FlcNavPoiBox();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.FlcNavPoiBox internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.FlcNavPoiBox();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavPoiBox.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavPoiBox getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavPoiBox.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavPoiBox build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.FlcNavPoiBox buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavPoiBox buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.subBoxes_ != java.util.Collections.EMPTY_LIST) {
          result.subBoxes_ =
            java.util.Collections.unmodifiableList(result.subBoxes_);
        }
        net.flcnav.binary.FlcnavOdb.FlcNavPoiBox returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.FlcNavPoiBox) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.FlcNavPoiBox)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.FlcNavPoiBox other) {
        if (other == net.flcnav.binary.FlcnavOdb.FlcNavPoiBox.getDefaultInstance()) return this;
        if (other.hasZoom()) {
          setZoom(other.getZoom());
        }
        if (other.hasLeft()) {
          setLeft(other.getLeft());
        }
        if (other.hasTop()) {
          setTop(other.getTop());
        }
        if (other.hasCategories()) {
          mergeCategories(other.getCategories());
        }
        if (!other.subBoxes_.isEmpty()) {
          if (result.subBoxes_.isEmpty()) {
            result.subBoxes_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavPoiBox>();
          }
          result.subBoxes_.addAll(other.subBoxes_);
        }
        if (other.hasShiftToData()) {
          setShiftToData(other.getShiftToData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setZoom(input.readUInt32());
              break;
            }
            case 16: {
              setLeft(input.readSInt32());
              break;
            }
            case 24: {
              setTop(input.readSInt32());
              break;
            }
            case 34: {
              net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories.Builder subBuilder = net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories.newBuilder();
              if (hasCategories()) {
                subBuilder.mergeFrom(getCategories());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCategories(subBuilder.buildPartial());
              break;
            }
            case 82: {
              net.flcnav.binary.FlcnavOdb.FlcNavPoiBox.Builder subBuilder = net.flcnav.binary.FlcnavOdb.FlcNavPoiBox.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addSubBoxes(subBuilder.buildPartial());
              break;
            }
            case 117: {
              setShiftToData(input.readFixed32());
              break;
            }
          }
        }
      }
      
      
      // required uint32 zoom = 1;
      public boolean hasZoom() {
        return result.hasZoom();
      }
      public int getZoom() {
        return result.getZoom();
      }
      public Builder setZoom(int value) {
        result.hasZoom = true;
        result.zoom_ = value;
        return this;
      }
      public Builder clearZoom() {
        result.hasZoom = false;
        result.zoom_ = 0;
        return this;
      }
      
      // required sint32 left = 2;
      public boolean hasLeft() {
        return result.hasLeft();
      }
      public int getLeft() {
        return result.getLeft();
      }
      public Builder setLeft(int value) {
        result.hasLeft = true;
        result.left_ = value;
        return this;
      }
      public Builder clearLeft() {
        result.hasLeft = false;
        result.left_ = 0;
        return this;
      }
      
      // required sint32 top = 3;
      public boolean hasTop() {
        return result.hasTop();
      }
      public int getTop() {
        return result.getTop();
      }
      public Builder setTop(int value) {
        result.hasTop = true;
        result.top_ = value;
        return this;
      }
      public Builder clearTop() {
        result.hasTop = false;
        result.top_ = 0;
        return this;
      }
      
      // optional .FlcNavPoiCategories categories = 4;
      public boolean hasCategories() {
        return result.hasCategories();
      }
      public net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories getCategories() {
        return result.getCategories();
      }
      public Builder setCategories(net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasCategories = true;
        result.categories_ = value;
        return this;
      }
      public Builder setCategories(net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories.Builder builderForValue) {
        result.hasCategories = true;
        result.categories_ = builderForValue.build();
        return this;
      }
      public Builder mergeCategories(net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories value) {
        if (result.hasCategories() &&
            result.categories_ != net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories.getDefaultInstance()) {
          result.categories_ =
            net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories.newBuilder(result.categories_).mergeFrom(value).buildPartial();
        } else {
          result.categories_ = value;
        }
        result.hasCategories = true;
        return this;
      }
      public Builder clearCategories() {
        result.hasCategories = false;
        result.categories_ = net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories.getDefaultInstance();
        return this;
      }
      
      // repeated .FlcNavPoiBox subBoxes = 10;
      public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavPoiBox> getSubBoxesList() {
        return java.util.Collections.unmodifiableList(result.subBoxes_);
      }
      public int getSubBoxesCount() {
        return result.getSubBoxesCount();
      }
      public net.flcnav.binary.FlcnavOdb.FlcNavPoiBox getSubBoxes(int index) {
        return result.getSubBoxes(index);
      }
      public Builder setSubBoxes(int index, net.flcnav.binary.FlcnavOdb.FlcNavPoiBox value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.subBoxes_.set(index, value);
        return this;
      }
      public Builder setSubBoxes(int index, net.flcnav.binary.FlcnavOdb.FlcNavPoiBox.Builder builderForValue) {
        result.subBoxes_.set(index, builderForValue.build());
        return this;
      }
      public Builder addSubBoxes(net.flcnav.binary.FlcnavOdb.FlcNavPoiBox value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.subBoxes_.isEmpty()) {
          result.subBoxes_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavPoiBox>();
        }
        result.subBoxes_.add(value);
        return this;
      }
      public Builder addSubBoxes(net.flcnav.binary.FlcnavOdb.FlcNavPoiBox.Builder builderForValue) {
        if (result.subBoxes_.isEmpty()) {
          result.subBoxes_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavPoiBox>();
        }
        result.subBoxes_.add(builderForValue.build());
        return this;
      }
      public Builder addAllSubBoxes(
          java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.FlcNavPoiBox> values) {
        if (result.subBoxes_.isEmpty()) {
          result.subBoxes_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavPoiBox>();
        }
        super.addAll(values, result.subBoxes_);
        return this;
      }
      public Builder clearSubBoxes() {
        result.subBoxes_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional fixed32 shiftToData = 14;
      public boolean hasShiftToData() {
        return result.hasShiftToData();
      }
      public int getShiftToData() {
        return result.getShiftToData();
      }
      public Builder setShiftToData(int value) {
        result.hasShiftToData = true;
        result.shiftToData_ = value;
        return this;
      }
      public Builder clearShiftToData() {
        result.hasShiftToData = false;
        result.shiftToData_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:FlcNavPoiBox)
    }
    
    static {
      defaultInstance = new FlcNavPoiBox(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FlcNavPoiBox)
  }
  
  public static final class FlcNavPoiCategories extends
      com.google.protobuf.GeneratedMessage {
    // Use FlcNavPoiCategories.newBuilder() to construct.
    private FlcNavPoiCategories() {
      initFields();
    }
    private FlcNavPoiCategories(boolean noInit) {}
    
    private static final FlcNavPoiCategories defaultInstance;
    public static FlcNavPoiCategories getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public FlcNavPoiCategories getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavPoiCategories_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavPoiCategories_fieldAccessorTable;
    }
    
    // repeated uint32 categories = 3;
    public static final int CATEGORIES_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> categories_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getCategoriesList() {
      return categories_;
    }
    public int getCategoriesCount() { return categories_.size(); }
    public int getCategories(int index) {
      return categories_.get(index);
    }
    
    private void initFields() {
    }
    @Override
	public final boolean isInitialized() {
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int element : getCategoriesList()) {
        output.writeUInt32(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int element : getCategoriesList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getCategoriesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.categories_ != java.util.Collections.EMPTY_LIST) {
          result.categories_ =
            java.util.Collections.unmodifiableList(result.categories_);
        }
        net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories other) {
        if (other == net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories.getDefaultInstance()) return this;
        if (!other.categories_.isEmpty()) {
          if (result.categories_.isEmpty()) {
            result.categories_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.categories_.addAll(other.categories_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 24: {
              addCategories(input.readUInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addCategories(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // repeated uint32 categories = 3;
      public java.util.List<java.lang.Integer> getCategoriesList() {
        return java.util.Collections.unmodifiableList(result.categories_);
      }
      public int getCategoriesCount() {
        return result.getCategoriesCount();
      }
      public int getCategories(int index) {
        return result.getCategories(index);
      }
      public Builder setCategories(int index, int value) {
        result.categories_.set(index, value);
        return this;
      }
      public Builder addCategories(int value) {
        if (result.categories_.isEmpty()) {
          result.categories_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.categories_.add(value);
        return this;
      }
      public Builder addAllCategories(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.categories_.isEmpty()) {
          result.categories_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.categories_);
        return this;
      }
      public Builder clearCategories() {
        result.categories_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:FlcNavPoiCategories)
    }
    
    static {
      defaultInstance = new FlcNavPoiCategories(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FlcNavPoiCategories)
  }
  
  public static final class FlcNavPoiBoxData extends
      com.google.protobuf.GeneratedMessage {
    // Use FlcNavPoiBoxData.newBuilder() to construct.
    private FlcNavPoiBoxData() {
      initFields();
    }
    private FlcNavPoiBoxData(boolean noInit) {}
    
    private static final FlcNavPoiBoxData defaultInstance;
    public static FlcNavPoiBoxData getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public FlcNavPoiBoxData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavPoiBoxData_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavPoiBoxData_fieldAccessorTable;
    }
    
    // optional uint32 zoom = 1;
    public static final int ZOOM_FIELD_NUMBER = 1;
    private boolean hasZoom;
    private int zoom_ = 0;
    public boolean hasZoom() { return hasZoom; }
    public int getZoom() { return zoom_; }
    
    // optional uint32 x = 2;
    public static final int X_FIELD_NUMBER = 2;
    private boolean hasX;
    private int x_ = 0;
    public boolean hasX() { return hasX; }
    public int getX() { return x_; }
    
    // optional uint32 y = 3;
    public static final int Y_FIELD_NUMBER = 3;
    private boolean hasY;
    private int y_ = 0;
    public boolean hasY() { return hasY; }
    public int getY() { return y_; }
    
    // repeated .FlcNavPoiBoxDataAtom poiData = 5;
    public static final int POIDATA_FIELD_NUMBER = 5;
    private java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom> poiData_ =
      java.util.Collections.emptyList();
    public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom> getPoiDataList() {
      return poiData_;
    }
    public int getPoiDataCount() { return poiData_.size(); }
    public net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom getPoiData(int index) {
      return poiData_.get(index);
    }
    
    private void initFields() {
    }
    @Override
	public final boolean isInitialized() {
      for (net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom element : getPoiDataList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasZoom()) {
        output.writeUInt32(1, getZoom());
      }
      if (hasX()) {
        output.writeUInt32(2, getX());
      }
      if (hasY()) {
        output.writeUInt32(3, getY());
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom element : getPoiDataList()) {
        output.writeMessage(5, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasZoom()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getZoom());
      }
      if (hasX()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getX());
      }
      if (hasY()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getY());
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom element : getPoiDataList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.poiData_ != java.util.Collections.EMPTY_LIST) {
          result.poiData_ =
            java.util.Collections.unmodifiableList(result.poiData_);
        }
        net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData other) {
        if (other == net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData.getDefaultInstance()) return this;
        if (other.hasZoom()) {
          setZoom(other.getZoom());
        }
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (!other.poiData_.isEmpty()) {
          if (result.poiData_.isEmpty()) {
            result.poiData_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom>();
          }
          result.poiData_.addAll(other.poiData_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setZoom(input.readUInt32());
              break;
            }
            case 16: {
              setX(input.readUInt32());
              break;
            }
            case 24: {
              setY(input.readUInt32());
              break;
            }
            case 42: {
              net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom.Builder subBuilder = net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addPoiData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 zoom = 1;
      public boolean hasZoom() {
        return result.hasZoom();
      }
      public int getZoom() {
        return result.getZoom();
      }
      public Builder setZoom(int value) {
        result.hasZoom = true;
        result.zoom_ = value;
        return this;
      }
      public Builder clearZoom() {
        result.hasZoom = false;
        result.zoom_ = 0;
        return this;
      }
      
      // optional uint32 x = 2;
      public boolean hasX() {
        return result.hasX();
      }
      public int getX() {
        return result.getX();
      }
      public Builder setX(int value) {
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder clearX() {
        result.hasX = false;
        result.x_ = 0;
        return this;
      }
      
      // optional uint32 y = 3;
      public boolean hasY() {
        return result.hasY();
      }
      public int getY() {
        return result.getY();
      }
      public Builder setY(int value) {
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder clearY() {
        result.hasY = false;
        result.y_ = 0;
        return this;
      }
      
      // repeated .FlcNavPoiBoxDataAtom poiData = 5;
      public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom> getPoiDataList() {
        return java.util.Collections.unmodifiableList(result.poiData_);
      }
      public int getPoiDataCount() {
        return result.getPoiDataCount();
      }
      public net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom getPoiData(int index) {
        return result.getPoiData(index);
      }
      public Builder setPoiData(int index, net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.poiData_.set(index, value);
        return this;
      }
      public Builder setPoiData(int index, net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom.Builder builderForValue) {
        result.poiData_.set(index, builderForValue.build());
        return this;
      }
      public Builder addPoiData(net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.poiData_.isEmpty()) {
          result.poiData_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom>();
        }
        result.poiData_.add(value);
        return this;
      }
      public Builder addPoiData(net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom.Builder builderForValue) {
        if (result.poiData_.isEmpty()) {
          result.poiData_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom>();
        }
        result.poiData_.add(builderForValue.build());
        return this;
      }
      public Builder addAllPoiData(
          java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom> values) {
        if (result.poiData_.isEmpty()) {
          result.poiData_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom>();
        }
        super.addAll(values, result.poiData_);
        return this;
      }
      public Builder clearPoiData() {
        result.poiData_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:FlcNavPoiBoxData)
    }
    
    static {
      defaultInstance = new FlcNavPoiBoxData(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FlcNavPoiBoxData)
  }
  
  public static final class FlcNavPoiBoxDataAtom extends
      com.google.protobuf.GeneratedMessage {
    // Use FlcNavPoiBoxDataAtom.newBuilder() to construct.
    private FlcNavPoiBoxDataAtom() {
      initFields();
    }
    private FlcNavPoiBoxDataAtom(boolean noInit) {}
    
    private static final FlcNavPoiBoxDataAtom defaultInstance;
    public static FlcNavPoiBoxDataAtom getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public FlcNavPoiBoxDataAtom getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavPoiBoxDataAtom_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavPoiBoxDataAtom_fieldAccessorTable;
    }
    
    // required sint32 dx = 2;
    public static final int DX_FIELD_NUMBER = 2;
    private boolean hasDx;
    private int dx_ = 0;
    public boolean hasDx() { return hasDx; }
    public int getDx() { return dx_; }
    
    // required sint32 dy = 3;
    public static final int DY_FIELD_NUMBER = 3;
    private boolean hasDy;
    private int dy_ = 0;
    public boolean hasDy() { return hasDy; }
    public int getDy() { return dy_; }
    
    // repeated uint32 categories = 4;
    public static final int CATEGORIES_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> categories_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getCategoriesList() {
      return categories_;
    }
    public int getCategoriesCount() { return categories_.size(); }
    public int getCategories(int index) {
      return categories_.get(index);
    }
    
    // optional string name = 6;
    public static final int NAME_FIELD_NUMBER = 6;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional string nameEn = 7;
    public static final int NAMEEN_FIELD_NUMBER = 7;
    private boolean hasNameEn;
    private java.lang.String nameEn_ = "";
    public boolean hasNameEn() { return hasNameEn; }
    public java.lang.String getNameEn() { return nameEn_; }
    
    // optional uint64 id = 8;
    public static final int ID_FIELD_NUMBER = 8;
    private boolean hasId;
    private long id_ = 0L;
    public boolean hasId() { return hasId; }
    public long getId() { return id_; }
    
    // optional string openingHours = 10;
    public static final int OPENINGHOURS_FIELD_NUMBER = 10;
    private boolean hasOpeningHours;
    private java.lang.String openingHours_ = "";
    public boolean hasOpeningHours() { return hasOpeningHours; }
    public java.lang.String getOpeningHours() { return openingHours_; }
    
    // optional string site = 11;
    public static final int SITE_FIELD_NUMBER = 11;
    private boolean hasSite;
    private java.lang.String site_ = "";
    public boolean hasSite() { return hasSite; }
    public java.lang.String getSite() { return site_; }
    
    // optional string phone = 12;
    public static final int PHONE_FIELD_NUMBER = 12;
    private boolean hasPhone;
    private java.lang.String phone_ = "";
    public boolean hasPhone() { return hasPhone; }
    public java.lang.String getPhone() { return phone_; }
    
    // optional string note = 13;
    public static final int NOTE_FIELD_NUMBER = 13;
    private boolean hasNote;
    private java.lang.String note_ = "";
    public boolean hasNote() { return hasNote; }
    public java.lang.String getNote() { return note_; }
    
    private void initFields() {
    }
    @Override
	public final boolean isInitialized() {
      if (!hasDx) return false;
      if (!hasDy) return false;
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasDx()) {
        output.writeSInt32(2, getDx());
      }
      if (hasDy()) {
        output.writeSInt32(3, getDy());
      }
      for (int element : getCategoriesList()) {
        output.writeUInt32(4, element);
      }
      if (hasName()) {
        output.writeString(6, getName());
      }
      if (hasNameEn()) {
        output.writeString(7, getNameEn());
      }
      if (hasId()) {
        output.writeUInt64(8, getId());
      }
      if (hasOpeningHours()) {
        output.writeString(10, getOpeningHours());
      }
      if (hasSite()) {
        output.writeString(11, getSite());
      }
      if (hasPhone()) {
        output.writeString(12, getPhone());
      }
      if (hasNote()) {
        output.writeString(13, getNote());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasDx()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, getDx());
      }
      if (hasDy()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, getDy());
      }
      {
        int dataSize = 0;
        for (int element : getCategoriesList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getCategoriesList().size();
      }
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getName());
      }
      if (hasNameEn()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(7, getNameEn());
      }
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(8, getId());
      }
      if (hasOpeningHours()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(10, getOpeningHours());
      }
      if (hasSite()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(11, getSite());
      }
      if (hasPhone()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(12, getPhone());
      }
      if (hasNote()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(13, getNote());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.categories_ != java.util.Collections.EMPTY_LIST) {
          result.categories_ =
            java.util.Collections.unmodifiableList(result.categories_);
        }
        net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom other) {
        if (other == net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom.getDefaultInstance()) return this;
        if (other.hasDx()) {
          setDx(other.getDx());
        }
        if (other.hasDy()) {
          setDy(other.getDy());
        }
        if (!other.categories_.isEmpty()) {
          if (result.categories_.isEmpty()) {
            result.categories_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.categories_.addAll(other.categories_);
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasNameEn()) {
          setNameEn(other.getNameEn());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasOpeningHours()) {
          setOpeningHours(other.getOpeningHours());
        }
        if (other.hasSite()) {
          setSite(other.getSite());
        }
        if (other.hasPhone()) {
          setPhone(other.getPhone());
        }
        if (other.hasNote()) {
          setNote(other.getNote());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 16: {
              setDx(input.readSInt32());
              break;
            }
            case 24: {
              setDy(input.readSInt32());
              break;
            }
            case 32: {
              addCategories(input.readUInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addCategories(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 50: {
              setName(input.readString());
              break;
            }
            case 58: {
              setNameEn(input.readString());
              break;
            }
            case 64: {
              setId(input.readUInt64());
              break;
            }
            case 82: {
              setOpeningHours(input.readString());
              break;
            }
            case 90: {
              setSite(input.readString());
              break;
            }
            case 98: {
              setPhone(input.readString());
              break;
            }
            case 106: {
              setNote(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required sint32 dx = 2;
      public boolean hasDx() {
        return result.hasDx();
      }
      public int getDx() {
        return result.getDx();
      }
      public Builder setDx(int value) {
        result.hasDx = true;
        result.dx_ = value;
        return this;
      }
      public Builder clearDx() {
        result.hasDx = false;
        result.dx_ = 0;
        return this;
      }
      
      // required sint32 dy = 3;
      public boolean hasDy() {
        return result.hasDy();
      }
      public int getDy() {
        return result.getDy();
      }
      public Builder setDy(int value) {
        result.hasDy = true;
        result.dy_ = value;
        return this;
      }
      public Builder clearDy() {
        result.hasDy = false;
        result.dy_ = 0;
        return this;
      }
      
      // repeated uint32 categories = 4;
      public java.util.List<java.lang.Integer> getCategoriesList() {
        return java.util.Collections.unmodifiableList(result.categories_);
      }
      public int getCategoriesCount() {
        return result.getCategoriesCount();
      }
      public int getCategories(int index) {
        return result.getCategories(index);
      }
      public Builder setCategories(int index, int value) {
        result.categories_.set(index, value);
        return this;
      }
      public Builder addCategories(int value) {
        if (result.categories_.isEmpty()) {
          result.categories_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.categories_.add(value);
        return this;
      }
      public Builder addAllCategories(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.categories_.isEmpty()) {
          result.categories_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.categories_);
        return this;
      }
      public Builder clearCategories() {
        result.categories_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional string name = 6;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional string nameEn = 7;
      public boolean hasNameEn() {
        return result.hasNameEn();
      }
      public java.lang.String getNameEn() {
        return result.getNameEn();
      }
      public Builder setNameEn(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasNameEn = true;
        result.nameEn_ = value;
        return this;
      }
      public Builder clearNameEn() {
        result.hasNameEn = false;
        result.nameEn_ = getDefaultInstance().getNameEn();
        return this;
      }
      
      // optional uint64 id = 8;
      public boolean hasId() {
        return result.hasId();
      }
      public long getId() {
        return result.getId();
      }
      public Builder setId(long value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0L;
        return this;
      }
      
      // optional string openingHours = 10;
      public boolean hasOpeningHours() {
        return result.hasOpeningHours();
      }
      public java.lang.String getOpeningHours() {
        return result.getOpeningHours();
      }
      public Builder setOpeningHours(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasOpeningHours = true;
        result.openingHours_ = value;
        return this;
      }
      public Builder clearOpeningHours() {
        result.hasOpeningHours = false;
        result.openingHours_ = getDefaultInstance().getOpeningHours();
        return this;
      }
      
      // optional string site = 11;
      public boolean hasSite() {
        return result.hasSite();
      }
      public java.lang.String getSite() {
        return result.getSite();
      }
      public Builder setSite(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSite = true;
        result.site_ = value;
        return this;
      }
      public Builder clearSite() {
        result.hasSite = false;
        result.site_ = getDefaultInstance().getSite();
        return this;
      }
      
      // optional string phone = 12;
      public boolean hasPhone() {
        return result.hasPhone();
      }
      public java.lang.String getPhone() {
        return result.getPhone();
      }
      public Builder setPhone(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPhone = true;
        result.phone_ = value;
        return this;
      }
      public Builder clearPhone() {
        result.hasPhone = false;
        result.phone_ = getDefaultInstance().getPhone();
        return this;
      }
      
      // optional string note = 13;
      public boolean hasNote() {
        return result.hasNote();
      }
      public java.lang.String getNote() {
        return result.getNote();
      }
      public Builder setNote(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasNote = true;
        result.note_ = value;
        return this;
      }
      public Builder clearNote() {
        result.hasNote = false;
        result.note_ = getDefaultInstance().getNote();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:FlcNavPoiBoxDataAtom)
    }
    
    static {
      defaultInstance = new FlcNavPoiBoxDataAtom(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FlcNavPoiBoxDataAtom)
  }
  
  public static final class IdTable extends
      com.google.protobuf.GeneratedMessage {
    // Use IdTable.newBuilder() to construct.
    private IdTable() {
      initFields();
    }
    private IdTable(boolean noInit) {}
    
    private static final IdTable defaultInstance;
    public static IdTable getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public IdTable getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_IdTable_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_IdTable_fieldAccessorTable;
    }
    
    // repeated sint64 routeId = 1;
    public static final int ROUTEID_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Long> routeId_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Long> getRouteIdList() {
      return routeId_;
    }
    public int getRouteIdCount() { return routeId_.size(); }
    public long getRouteId(int index) {
      return routeId_.get(index);
    }
    
    private void initFields() {
    }
    @Override
	public final boolean isInitialized() {
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (long element : getRouteIdList()) {
        output.writeSInt64(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (long element : getRouteIdList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getRouteIdList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.IdTable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.IdTable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.IdTable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.IdTable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.IdTable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.IdTable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.IdTable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.IdTable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.IdTable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.IdTable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.IdTable prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.IdTable result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.IdTable.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.IdTable();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.IdTable internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.IdTable();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.IdTable.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.IdTable getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.IdTable.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.IdTable build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.IdTable buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.IdTable buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.routeId_ != java.util.Collections.EMPTY_LIST) {
          result.routeId_ =
            java.util.Collections.unmodifiableList(result.routeId_);
        }
        net.flcnav.binary.FlcnavOdb.IdTable returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.IdTable) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.IdTable)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.IdTable other) {
        if (other == net.flcnav.binary.FlcnavOdb.IdTable.getDefaultInstance()) return this;
        if (!other.routeId_.isEmpty()) {
          if (result.routeId_.isEmpty()) {
            result.routeId_ = new java.util.ArrayList<java.lang.Long>();
          }
          result.routeId_.addAll(other.routeId_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              addRouteId(input.readSInt64());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addRouteId(input.readSInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // repeated sint64 routeId = 1;
      public java.util.List<java.lang.Long> getRouteIdList() {
        return java.util.Collections.unmodifiableList(result.routeId_);
      }
      public int getRouteIdCount() {
        return result.getRouteIdCount();
      }
      public long getRouteId(int index) {
        return result.getRouteId(index);
      }
      public Builder setRouteId(int index, long value) {
        result.routeId_.set(index, value);
        return this;
      }
      public Builder addRouteId(long value) {
        if (result.routeId_.isEmpty()) {
          result.routeId_ = new java.util.ArrayList<java.lang.Long>();
        }
        result.routeId_.add(value);
        return this;
      }
      public Builder addAllRouteId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        if (result.routeId_.isEmpty()) {
          result.routeId_ = new java.util.ArrayList<java.lang.Long>();
        }
        super.addAll(values, result.routeId_);
        return this;
      }
      public Builder clearRouteId() {
        result.routeId_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:IdTable)
    }
    
    static {
      defaultInstance = new IdTable(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:IdTable)
  }
  
  public static final class RestrictionData extends
      com.google.protobuf.GeneratedMessage {
    // Use RestrictionData.newBuilder() to construct.
    private RestrictionData() {
      initFields();
    }
    private RestrictionData(boolean noInit) {}
    
    private static final RestrictionData defaultInstance;
    public static RestrictionData getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public RestrictionData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_RestrictionData_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_RestrictionData_fieldAccessorTable;
    }
    
    // required int32 type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private boolean hasType;
    private int type_ = 0;
    public boolean hasType() { return hasType; }
    public int getType() { return type_; }
    
    // required int32 from = 2;
    public static final int FROM_FIELD_NUMBER = 2;
    private boolean hasFrom;
    private int from_ = 0;
    public boolean hasFrom() { return hasFrom; }
    public int getFrom() { return from_; }
    
    // required int32 to = 3;
    public static final int TO_FIELD_NUMBER = 3;
    private boolean hasTo;
    private int to_ = 0;
    public boolean hasTo() { return hasTo; }
    public int getTo() { return to_; }
    
    // optional int32 via = 4;
    public static final int VIA_FIELD_NUMBER = 4;
    private boolean hasVia;
    private int via_ = 0;
    public boolean hasVia() { return hasVia; }
    public int getVia() { return via_; }
    
    private void initFields() {
    }
    @Override
	public final boolean isInitialized() {
      if (!hasType) return false;
      if (!hasFrom) return false;
      if (!hasTo) return false;
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasType()) {
        output.writeInt32(1, getType());
      }
      if (hasFrom()) {
        output.writeInt32(2, getFrom());
      }
      if (hasTo()) {
        output.writeInt32(3, getTo());
      }
      if (hasVia()) {
        output.writeInt32(4, getVia());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getType());
      }
      if (hasFrom()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getFrom());
      }
      if (hasTo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getTo());
      }
      if (hasVia()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getVia());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.RestrictionData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.RestrictionData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.RestrictionData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.RestrictionData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.RestrictionData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.RestrictionData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.RestrictionData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.RestrictionData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.RestrictionData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.RestrictionData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.RestrictionData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.RestrictionData result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.RestrictionData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.RestrictionData();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.RestrictionData internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.RestrictionData();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.RestrictionData.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.RestrictionData getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.RestrictionData.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.RestrictionData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.RestrictionData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.RestrictionData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        net.flcnav.binary.FlcnavOdb.RestrictionData returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.RestrictionData) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.RestrictionData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.RestrictionData other) {
        if (other == net.flcnav.binary.FlcnavOdb.RestrictionData.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasFrom()) {
          setFrom(other.getFrom());
        }
        if (other.hasTo()) {
          setTo(other.getTo());
        }
        if (other.hasVia()) {
          setVia(other.getVia());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setType(input.readInt32());
              break;
            }
            case 16: {
              setFrom(input.readInt32());
              break;
            }
            case 24: {
              setTo(input.readInt32());
              break;
            }
            case 32: {
              setVia(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required int32 type = 1;
      public boolean hasType() {
        return result.hasType();
      }
      public int getType() {
        return result.getType();
      }
      public Builder setType(int value) {
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = 0;
        return this;
      }
      
      // required int32 from = 2;
      public boolean hasFrom() {
        return result.hasFrom();
      }
      public int getFrom() {
        return result.getFrom();
      }
      public Builder setFrom(int value) {
        result.hasFrom = true;
        result.from_ = value;
        return this;
      }
      public Builder clearFrom() {
        result.hasFrom = false;
        result.from_ = 0;
        return this;
      }
      
      // required int32 to = 3;
      public boolean hasTo() {
        return result.hasTo();
      }
      public int getTo() {
        return result.getTo();
      }
      public Builder setTo(int value) {
        result.hasTo = true;
        result.to_ = value;
        return this;
      }
      public Builder clearTo() {
        result.hasTo = false;
        result.to_ = 0;
        return this;
      }
      
      // optional int32 via = 4;
      public boolean hasVia() {
        return result.hasVia();
      }
      public int getVia() {
        return result.getVia();
      }
      public Builder setVia(int value) {
        result.hasVia = true;
        result.via_ = value;
        return this;
      }
      public Builder clearVia() {
        result.hasVia = false;
        result.via_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RestrictionData)
    }
    
    static {
      defaultInstance = new RestrictionData(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RestrictionData)
  }
  
  public static final class RouteData extends
      com.google.protobuf.GeneratedMessage {
    // Use RouteData.newBuilder() to construct.
    private RouteData() {
      initFields();
    }
    private RouteData(boolean noInit) {}
    
    private static final RouteData defaultInstance;
    public static RouteData getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public RouteData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_RouteData_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_RouteData_fieldAccessorTable;
    }
    
    // required bytes points = 1;
    public static final int POINTS_FIELD_NUMBER = 1;
    private boolean hasPoints;
    private com.google.protobuf.ByteString points_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasPoints() { return hasPoints; }
    public com.google.protobuf.ByteString getPoints() { return points_; }
    
    // optional bytes pointTypes = 4;
    public static final int POINTTYPES_FIELD_NUMBER = 4;
    private boolean hasPointTypes;
    private com.google.protobuf.ByteString pointTypes_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasPointTypes() { return hasPointTypes; }
    public com.google.protobuf.ByteString getPointTypes() { return pointTypes_; }
    
    // optional bytes pointJNInd = 5;
    public static final int POINTJNIND_FIELD_NUMBER = 5;
    private boolean hasPointJNInd;
    private com.google.protobuf.ByteString pointJNInd_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasPointJNInd() { return hasPointJNInd; }
    public com.google.protobuf.ByteString getPointJNInd() { return pointJNInd_; }
    
    // optional bytes pointJNWayIds = 6;
    public static final int POINTJNWAYIDS_FIELD_NUMBER = 6;
    private boolean hasPointJNWayIds;
    private com.google.protobuf.ByteString pointJNWayIds_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasPointJNWayIds() { return hasPointJNWayIds; }
    public com.google.protobuf.ByteString getPointJNWayIds() { return pointJNWayIds_; }
    
    // required bytes types = 7;
    public static final int TYPES_FIELD_NUMBER = 7;
    private boolean hasTypes;
    private com.google.protobuf.ByteString types_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasTypes() { return hasTypes; }
    public com.google.protobuf.ByteString getTypes() { return types_; }
    
    // required int32 routeId = 12;
    public static final int ROUTEID_FIELD_NUMBER = 12;
    private boolean hasRouteId;
    private int routeId_ = 0;
    public boolean hasRouteId() { return hasRouteId; }
    public int getRouteId() { return routeId_; }
    
    // optional bytes stringNames = 14;
    public static final int STRINGNAMES_FIELD_NUMBER = 14;
    private boolean hasStringNames;
    private com.google.protobuf.ByteString stringNames_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasStringNames() { return hasStringNames; }
    public com.google.protobuf.ByteString getStringNames() { return stringNames_; }
    
    private void initFields() {
    }
    @Override
	public final boolean isInitialized() {
      if (!hasPoints) return false;
      if (!hasTypes) return false;
      if (!hasRouteId) return false;
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasPoints()) {
        output.writeBytes(1, getPoints());
      }
      if (hasPointTypes()) {
        output.writeBytes(4, getPointTypes());
      }
      if (hasPointJNInd()) {
        output.writeBytes(5, getPointJNInd());
      }
      if (hasPointJNWayIds()) {
        output.writeBytes(6, getPointJNWayIds());
      }
      if (hasTypes()) {
        output.writeBytes(7, getTypes());
      }
      if (hasRouteId()) {
        output.writeInt32(12, getRouteId());
      }
      if (hasStringNames()) {
        output.writeBytes(14, getStringNames());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasPoints()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getPoints());
      }
      if (hasPointTypes()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getPointTypes());
      }
      if (hasPointJNInd()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getPointJNInd());
      }
      if (hasPointJNWayIds()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getPointJNWayIds());
      }
      if (hasTypes()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getTypes());
      }
      if (hasRouteId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, getRouteId());
      }
      if (hasStringNames()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getStringNames());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.RouteData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.RouteData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.RouteData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.RouteData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.RouteData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.RouteData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.RouteData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.RouteData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.RouteData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.RouteData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.RouteData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.RouteData result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.RouteData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.RouteData();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.RouteData internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.RouteData();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.RouteData.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.RouteData getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.RouteData.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.RouteData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.RouteData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.RouteData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        net.flcnav.binary.FlcnavOdb.RouteData returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.RouteData) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.RouteData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.RouteData other) {
        if (other == net.flcnav.binary.FlcnavOdb.RouteData.getDefaultInstance()) return this;
        if (other.hasPoints()) {
          setPoints(other.getPoints());
        }
        if (other.hasPointTypes()) {
          setPointTypes(other.getPointTypes());
        }
        if (other.hasPointJNInd()) {
          setPointJNInd(other.getPointJNInd());
        }
        if (other.hasPointJNWayIds()) {
          setPointJNWayIds(other.getPointJNWayIds());
        }
        if (other.hasTypes()) {
          setTypes(other.getTypes());
        }
        if (other.hasRouteId()) {
          setRouteId(other.getRouteId());
        }
        if (other.hasStringNames()) {
          setStringNames(other.getStringNames());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setPoints(input.readBytes());
              break;
            }
            case 34: {
              setPointTypes(input.readBytes());
              break;
            }
            case 42: {
              setPointJNInd(input.readBytes());
              break;
            }
            case 50: {
              setPointJNWayIds(input.readBytes());
              break;
            }
            case 58: {
              setTypes(input.readBytes());
              break;
            }
            case 96: {
              setRouteId(input.readInt32());
              break;
            }
            case 114: {
              setStringNames(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required bytes points = 1;
      public boolean hasPoints() {
        return result.hasPoints();
      }
      public com.google.protobuf.ByteString getPoints() {
        return result.getPoints();
      }
      public Builder setPoints(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPoints = true;
        result.points_ = value;
        return this;
      }
      public Builder clearPoints() {
        result.hasPoints = false;
        result.points_ = getDefaultInstance().getPoints();
        return this;
      }
      
      // optional bytes pointTypes = 4;
      public boolean hasPointTypes() {
        return result.hasPointTypes();
      }
      public com.google.protobuf.ByteString getPointTypes() {
        return result.getPointTypes();
      }
      public Builder setPointTypes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPointTypes = true;
        result.pointTypes_ = value;
        return this;
      }
      public Builder clearPointTypes() {
        result.hasPointTypes = false;
        result.pointTypes_ = getDefaultInstance().getPointTypes();
        return this;
      }
      
      // optional bytes pointJNInd = 5;
      public boolean hasPointJNInd() {
        return result.hasPointJNInd();
      }
      public com.google.protobuf.ByteString getPointJNInd() {
        return result.getPointJNInd();
      }
      public Builder setPointJNInd(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPointJNInd = true;
        result.pointJNInd_ = value;
        return this;
      }
      public Builder clearPointJNInd() {
        result.hasPointJNInd = false;
        result.pointJNInd_ = getDefaultInstance().getPointJNInd();
        return this;
      }
      
      // optional bytes pointJNWayIds = 6;
      public boolean hasPointJNWayIds() {
        return result.hasPointJNWayIds();
      }
      public com.google.protobuf.ByteString getPointJNWayIds() {
        return result.getPointJNWayIds();
      }
      public Builder setPointJNWayIds(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPointJNWayIds = true;
        result.pointJNWayIds_ = value;
        return this;
      }
      public Builder clearPointJNWayIds() {
        result.hasPointJNWayIds = false;
        result.pointJNWayIds_ = getDefaultInstance().getPointJNWayIds();
        return this;
      }
      
      // required bytes types = 7;
      public boolean hasTypes() {
        return result.hasTypes();
      }
      public com.google.protobuf.ByteString getTypes() {
        return result.getTypes();
      }
      public Builder setTypes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTypes = true;
        result.types_ = value;
        return this;
      }
      public Builder clearTypes() {
        result.hasTypes = false;
        result.types_ = getDefaultInstance().getTypes();
        return this;
      }
      
      // required int32 routeId = 12;
      public boolean hasRouteId() {
        return result.hasRouteId();
      }
      public int getRouteId() {
        return result.getRouteId();
      }
      public Builder setRouteId(int value) {
        result.hasRouteId = true;
        result.routeId_ = value;
        return this;
      }
      public Builder clearRouteId() {
        result.hasRouteId = false;
        result.routeId_ = 0;
        return this;
      }
      
      // optional bytes stringNames = 14;
      public boolean hasStringNames() {
        return result.hasStringNames();
      }
      public com.google.protobuf.ByteString getStringNames() {
        return result.getStringNames();
      }
      public Builder setStringNames(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasStringNames = true;
        result.stringNames_ = value;
        return this;
      }
      public Builder clearStringNames() {
        result.hasStringNames = false;
        result.stringNames_ = getDefaultInstance().getStringNames();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RouteData)
    }
    
    static {
      defaultInstance = new RouteData(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RouteData)
  }
  
  public static final class FlcNavRoutingIndex extends
      com.google.protobuf.GeneratedMessage {
    // Use FlcNavRoutingIndex.newBuilder() to construct.
    private FlcNavRoutingIndex() {
      initFields();
    }
    private FlcNavRoutingIndex(boolean noInit) {}
    
    private static final FlcNavRoutingIndex defaultInstance;
    public static FlcNavRoutingIndex getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public FlcNavRoutingIndex getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavRoutingIndex_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavRoutingIndex_fieldAccessorTable;
    }
    
    public static final class RouteEncodingRule extends
        com.google.protobuf.GeneratedMessage {
      // Use RouteEncodingRule.newBuilder() to construct.
      private RouteEncodingRule() {
        initFields();
      }
      private RouteEncodingRule(boolean noInit) {}
      
      private static final RouteEncodingRule defaultInstance;
      public static RouteEncodingRule getDefaultInstance() {
        return defaultInstance;
      }
      
      @Override
	public RouteEncodingRule getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavRoutingIndex_RouteEncodingRule_descriptor;
      }
      
      @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavRoutingIndex_RouteEncodingRule_fieldAccessorTable;
      }
      
      // required string tag = 3;
      public static final int TAG_FIELD_NUMBER = 3;
      private boolean hasTag;
      private java.lang.String tag_ = "";
      public boolean hasTag() { return hasTag; }
      public java.lang.String getTag() { return tag_; }
      
      // required string value = 5;
      public static final int VALUE_FIELD_NUMBER = 5;
      private boolean hasValue;
      private java.lang.String value_ = "";
      public boolean hasValue() { return hasValue; }
      public java.lang.String getValue() { return value_; }
      
      // optional uint32 id = 7;
      public static final int ID_FIELD_NUMBER = 7;
      private boolean hasId;
      private int id_ = 0;
      public boolean hasId() { return hasId; }
      public int getId() { return id_; }
      
      private void initFields() {
      }
      @Override
	public final boolean isInitialized() {
        if (!hasTag) return false;
        if (!hasValue) return false;
        return true;
      }
      
      @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasTag()) {
          output.writeString(3, getTag());
        }
        if (hasValue()) {
          output.writeString(5, getValue());
        }
        if (hasId()) {
          output.writeUInt32(7, getId());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      @Override
	public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasTag()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(3, getTag());
        }
        if (hasValue()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(5, getValue());
        }
        if (hasId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(7, getId());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      @Override
	public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      @Override
	public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule result;
        
        // Construct using net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule();
          return builder;
        }
        
        @Override
		protected net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule internalGetResult() {
          return result;
        }
        
        @Override
		public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule();
          return this;
        }
        
        @Override
		public Builder clone() {
          return create().mergeFrom(result);
        }
        
        @Override
		public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule.getDescriptor();
        }
        
        @Override
		public net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule getDefaultInstanceForType() {
          return net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule.getDefaultInstance();
        }
        
        @Override
		public boolean isInitialized() {
          return result.isInitialized();
        }
        @Override
		public net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        @Override
		public net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule returnMe = result;
          result = null;
          return returnMe;
        }
        
        @Override
		public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule) {
            return mergeFrom((net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule other) {
          if (other == net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule.getDefaultInstance()) return this;
          if (other.hasTag()) {
            setTag(other.getTag());
          }
          if (other.hasValue()) {
            setValue(other.getValue());
          }
          if (other.hasId()) {
            setId(other.getId());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        @Override
		public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 26: {
                setTag(input.readString());
                break;
              }
              case 42: {
                setValue(input.readString());
                break;
              }
              case 56: {
                setId(input.readUInt32());
                break;
              }
            }
          }
        }
        
        
        // required string tag = 3;
        public boolean hasTag() {
          return result.hasTag();
        }
        public java.lang.String getTag() {
          return result.getTag();
        }
        public Builder setTag(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasTag = true;
          result.tag_ = value;
          return this;
        }
        public Builder clearTag() {
          result.hasTag = false;
          result.tag_ = getDefaultInstance().getTag();
          return this;
        }
        
        // required string value = 5;
        public boolean hasValue() {
          return result.hasValue();
        }
        public java.lang.String getValue() {
          return result.getValue();
        }
        public Builder setValue(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasValue = true;
          result.value_ = value;
          return this;
        }
        public Builder clearValue() {
          result.hasValue = false;
          result.value_ = getDefaultInstance().getValue();
          return this;
        }
        
        // optional uint32 id = 7;
        public boolean hasId() {
          return result.hasId();
        }
        public int getId() {
          return result.getId();
        }
        public Builder setId(int value) {
          result.hasId = true;
          result.id_ = value;
          return this;
        }
        public Builder clearId() {
          result.hasId = false;
          result.id_ = 0;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:FlcNavRoutingIndex.RouteEncodingRule)
      }
      
      static {
        defaultInstance = new RouteEncodingRule(true);
        net.flcnav.binary.FlcnavOdb.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:FlcNavRoutingIndex.RouteEncodingRule)
    }
    
    public static final class RouteDataBox extends
        com.google.protobuf.GeneratedMessage {
      // Use RouteDataBox.newBuilder() to construct.
      private RouteDataBox() {
        initFields();
      }
      private RouteDataBox(boolean noInit) {}
      
      private static final RouteDataBox defaultInstance;
      public static RouteDataBox getDefaultInstance() {
        return defaultInstance;
      }
      
      @Override
	public RouteDataBox getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavRoutingIndex_RouteDataBox_descriptor;
      }
      
      @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavRoutingIndex_RouteDataBox_fieldAccessorTable;
      }
      
      // required sint32 left = 1;
      public static final int LEFT_FIELD_NUMBER = 1;
      private boolean hasLeft;
      private int left_ = 0;
      public boolean hasLeft() { return hasLeft; }
      public int getLeft() { return left_; }
      
      // required sint32 right = 2;
      public static final int RIGHT_FIELD_NUMBER = 2;
      private boolean hasRight;
      private int right_ = 0;
      public boolean hasRight() { return hasRight; }
      public int getRight() { return right_; }
      
      // required sint32 top = 3;
      public static final int TOP_FIELD_NUMBER = 3;
      private boolean hasTop;
      private int top_ = 0;
      public boolean hasTop() { return hasTop; }
      public int getTop() { return top_; }
      
      // required sint32 bottom = 4;
      public static final int BOTTOM_FIELD_NUMBER = 4;
      private boolean hasBottom;
      private int bottom_ = 0;
      public boolean hasBottom() { return hasBottom; }
      public int getBottom() { return bottom_; }
      
      // optional fixed32 shiftToData = 5;
      public static final int SHIFTTODATA_FIELD_NUMBER = 5;
      private boolean hasShiftToData;
      private int shiftToData_ = 0;
      public boolean hasShiftToData() { return hasShiftToData; }
      public int getShiftToData() { return shiftToData_; }
      
      // repeated .FlcNavRoutingIndex.RouteDataBox boxes = 7;
      public static final int BOXES_FIELD_NUMBER = 7;
      private java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox> boxes_ =
        java.util.Collections.emptyList();
      public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox> getBoxesList() {
        return boxes_;
      }
      public int getBoxesCount() { return boxes_.size(); }
      public net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox getBoxes(int index) {
        return boxes_.get(index);
      }
      
      private void initFields() {
      }
      @Override
	public final boolean isInitialized() {
        if (!hasLeft) return false;
        if (!hasRight) return false;
        if (!hasTop) return false;
        if (!hasBottom) return false;
        for (net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox element : getBoxesList()) {
          if (!element.isInitialized()) return false;
        }
        return true;
      }
      
      @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasLeft()) {
          output.writeSInt32(1, getLeft());
        }
        if (hasRight()) {
          output.writeSInt32(2, getRight());
        }
        if (hasTop()) {
          output.writeSInt32(3, getTop());
        }
        if (hasBottom()) {
          output.writeSInt32(4, getBottom());
        }
        if (hasShiftToData()) {
          output.writeFixed32(5, getShiftToData());
        }
        for (net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox element : getBoxesList()) {
          output.writeMessage(7, element);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      @Override
	public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasLeft()) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(1, getLeft());
        }
        if (hasRight()) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(2, getRight());
        }
        if (hasTop()) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(3, getTop());
        }
        if (hasBottom()) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(4, getBottom());
        }
        if (hasShiftToData()) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed32Size(5, getShiftToData());
        }
        for (net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox element : getBoxesList()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, element);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      @Override
	public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      @Override
	public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox result;
        
        // Construct using net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox();
          return builder;
        }
        
        @Override
		protected net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox internalGetResult() {
          return result;
        }
        
        @Override
		public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox();
          return this;
        }
        
        @Override
		public Builder clone() {
          return create().mergeFrom(result);
        }
        
        @Override
		public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox.getDescriptor();
        }
        
        @Override
		public net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox getDefaultInstanceForType() {
          return net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox.getDefaultInstance();
        }
        
        @Override
		public boolean isInitialized() {
          return result.isInitialized();
        }
        @Override
		public net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        @Override
		public net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          if (result.boxes_ != java.util.Collections.EMPTY_LIST) {
            result.boxes_ =
              java.util.Collections.unmodifiableList(result.boxes_);
          }
          net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox returnMe = result;
          result = null;
          return returnMe;
        }
        
        @Override
		public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox) {
            return mergeFrom((net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox other) {
          if (other == net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox.getDefaultInstance()) return this;
          if (other.hasLeft()) {
            setLeft(other.getLeft());
          }
          if (other.hasRight()) {
            setRight(other.getRight());
          }
          if (other.hasTop()) {
            setTop(other.getTop());
          }
          if (other.hasBottom()) {
            setBottom(other.getBottom());
          }
          if (other.hasShiftToData()) {
            setShiftToData(other.getShiftToData());
          }
          if (!other.boxes_.isEmpty()) {
            if (result.boxes_.isEmpty()) {
              result.boxes_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox>();
            }
            result.boxes_.addAll(other.boxes_);
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        @Override
		public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 8: {
                setLeft(input.readSInt32());
                break;
              }
              case 16: {
                setRight(input.readSInt32());
                break;
              }
              case 24: {
                setTop(input.readSInt32());
                break;
              }
              case 32: {
                setBottom(input.readSInt32());
                break;
              }
              case 45: {
                setShiftToData(input.readFixed32());
                break;
              }
              case 58: {
                net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox.Builder subBuilder = net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addBoxes(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        
        // required sint32 left = 1;
        public boolean hasLeft() {
          return result.hasLeft();
        }
        public int getLeft() {
          return result.getLeft();
        }
        public Builder setLeft(int value) {
          result.hasLeft = true;
          result.left_ = value;
          return this;
        }
        public Builder clearLeft() {
          result.hasLeft = false;
          result.left_ = 0;
          return this;
        }
        
        // required sint32 right = 2;
        public boolean hasRight() {
          return result.hasRight();
        }
        public int getRight() {
          return result.getRight();
        }
        public Builder setRight(int value) {
          result.hasRight = true;
          result.right_ = value;
          return this;
        }
        public Builder clearRight() {
          result.hasRight = false;
          result.right_ = 0;
          return this;
        }
        
        // required sint32 top = 3;
        public boolean hasTop() {
          return result.hasTop();
        }
        public int getTop() {
          return result.getTop();
        }
        public Builder setTop(int value) {
          result.hasTop = true;
          result.top_ = value;
          return this;
        }
        public Builder clearTop() {
          result.hasTop = false;
          result.top_ = 0;
          return this;
        }
        
        // required sint32 bottom = 4;
        public boolean hasBottom() {
          return result.hasBottom();
        }
        public int getBottom() {
          return result.getBottom();
        }
        public Builder setBottom(int value) {
          result.hasBottom = true;
          result.bottom_ = value;
          return this;
        }
        public Builder clearBottom() {
          result.hasBottom = false;
          result.bottom_ = 0;
          return this;
        }
        
        // optional fixed32 shiftToData = 5;
        public boolean hasShiftToData() {
          return result.hasShiftToData();
        }
        public int getShiftToData() {
          return result.getShiftToData();
        }
        public Builder setShiftToData(int value) {
          result.hasShiftToData = true;
          result.shiftToData_ = value;
          return this;
        }
        public Builder clearShiftToData() {
          result.hasShiftToData = false;
          result.shiftToData_ = 0;
          return this;
        }
        
        // repeated .FlcNavRoutingIndex.RouteDataBox boxes = 7;
        public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox> getBoxesList() {
          return java.util.Collections.unmodifiableList(result.boxes_);
        }
        public int getBoxesCount() {
          return result.getBoxesCount();
        }
        public net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox getBoxes(int index) {
          return result.getBoxes(index);
        }
        public Builder setBoxes(int index, net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.boxes_.set(index, value);
          return this;
        }
        public Builder setBoxes(int index, net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox.Builder builderForValue) {
          result.boxes_.set(index, builderForValue.build());
          return this;
        }
        public Builder addBoxes(net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox value) {
          if (value == null) {
            throw new NullPointerException();
          }
          if (result.boxes_.isEmpty()) {
            result.boxes_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox>();
          }
          result.boxes_.add(value);
          return this;
        }
        public Builder addBoxes(net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox.Builder builderForValue) {
          if (result.boxes_.isEmpty()) {
            result.boxes_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox>();
          }
          result.boxes_.add(builderForValue.build());
          return this;
        }
        public Builder addAllBoxes(
            java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox> values) {
          if (result.boxes_.isEmpty()) {
            result.boxes_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox>();
          }
          super.addAll(values, result.boxes_);
          return this;
        }
        public Builder clearBoxes() {
          result.boxes_ = java.util.Collections.emptyList();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:FlcNavRoutingIndex.RouteDataBox)
      }
      
      static {
        defaultInstance = new RouteDataBox(true);
        net.flcnav.binary.FlcnavOdb.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:FlcNavRoutingIndex.RouteDataBox)
    }
    
    public static final class RouteDataBlock extends
        com.google.protobuf.GeneratedMessage {
      // Use RouteDataBlock.newBuilder() to construct.
      private RouteDataBlock() {
        initFields();
      }
      private RouteDataBlock(boolean noInit) {}
      
      private static final RouteDataBlock defaultInstance;
      public static RouteDataBlock getDefaultInstance() {
        return defaultInstance;
      }
      
      @Override
	public RouteDataBlock getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavRoutingIndex_RouteDataBlock_descriptor;
      }
      
      @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.flcnav.binary.FlcnavOdb.internal_static_FlcNavRoutingIndex_RouteDataBlock_fieldAccessorTable;
      }
      
      // optional .IdTable idTable = 5;
      public static final int IDTABLE_FIELD_NUMBER = 5;
      private boolean hasIdTable;
      private net.flcnav.binary.FlcnavOdb.IdTable idTable_;
      public boolean hasIdTable() { return hasIdTable; }
      public net.flcnav.binary.FlcnavOdb.IdTable getIdTable() { return idTable_; }
      
      // optional .StringTable stringTable = 8;
      public static final int STRINGTABLE_FIELD_NUMBER = 8;
      private boolean hasStringTable;
      private net.flcnav.binary.FlcnavOdb.StringTable stringTable_;
      public boolean hasStringTable() { return hasStringTable; }
      public net.flcnav.binary.FlcnavOdb.StringTable getStringTable() { return stringTable_; }
      
      // repeated .RouteData dataObjects = 6;
      public static final int DATAOBJECTS_FIELD_NUMBER = 6;
      private java.util.List<net.flcnav.binary.FlcnavOdb.RouteData> dataObjects_ =
        java.util.Collections.emptyList();
      public java.util.List<net.flcnav.binary.FlcnavOdb.RouteData> getDataObjectsList() {
        return dataObjects_;
      }
      public int getDataObjectsCount() { return dataObjects_.size(); }
      public net.flcnav.binary.FlcnavOdb.RouteData getDataObjects(int index) {
        return dataObjects_.get(index);
      }
      
      // repeated .RestrictionData restrictions = 7;
      public static final int RESTRICTIONS_FIELD_NUMBER = 7;
      private java.util.List<net.flcnav.binary.FlcnavOdb.RestrictionData> restrictions_ =
        java.util.Collections.emptyList();
      public java.util.List<net.flcnav.binary.FlcnavOdb.RestrictionData> getRestrictionsList() {
        return restrictions_;
      }
      public int getRestrictionsCount() { return restrictions_.size(); }
      public net.flcnav.binary.FlcnavOdb.RestrictionData getRestrictions(int index) {
        return restrictions_.get(index);
      }
      
      private void initFields() {
        idTable_ = net.flcnav.binary.FlcnavOdb.IdTable.getDefaultInstance();
        stringTable_ = net.flcnav.binary.FlcnavOdb.StringTable.getDefaultInstance();
      }
      @Override
	public final boolean isInitialized() {
        for (net.flcnav.binary.FlcnavOdb.RouteData element : getDataObjectsList()) {
          if (!element.isInitialized()) return false;
        }
        for (net.flcnav.binary.FlcnavOdb.RestrictionData element : getRestrictionsList()) {
          if (!element.isInitialized()) return false;
        }
        return true;
      }
      
      @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasIdTable()) {
          output.writeMessage(5, getIdTable());
        }
        for (net.flcnav.binary.FlcnavOdb.RouteData element : getDataObjectsList()) {
          output.writeMessage(6, element);
        }
        for (net.flcnav.binary.FlcnavOdb.RestrictionData element : getRestrictionsList()) {
          output.writeMessage(7, element);
        }
        if (hasStringTable()) {
          output.writeMessage(8, getStringTable());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      @Override
	public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasIdTable()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, getIdTable());
        }
        for (net.flcnav.binary.FlcnavOdb.RouteData element : getDataObjectsList()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, element);
        }
        for (net.flcnav.binary.FlcnavOdb.RestrictionData element : getRestrictionsList()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, element);
        }
        if (hasStringTable()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, getStringTable());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      @Override
	public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      @Override
	public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock result;
        
        // Construct using net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock();
          return builder;
        }
        
        @Override
		protected net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock internalGetResult() {
          return result;
        }
        
        @Override
		public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock();
          return this;
        }
        
        @Override
		public Builder clone() {
          return create().mergeFrom(result);
        }
        
        @Override
		public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock.getDescriptor();
        }
        
        @Override
		public net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock getDefaultInstanceForType() {
          return net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock.getDefaultInstance();
        }
        
        @Override
		public boolean isInitialized() {
          return result.isInitialized();
        }
        @Override
		public net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        @Override
		public net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          if (result.dataObjects_ != java.util.Collections.EMPTY_LIST) {
            result.dataObjects_ =
              java.util.Collections.unmodifiableList(result.dataObjects_);
          }
          if (result.restrictions_ != java.util.Collections.EMPTY_LIST) {
            result.restrictions_ =
              java.util.Collections.unmodifiableList(result.restrictions_);
          }
          net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock returnMe = result;
          result = null;
          return returnMe;
        }
        
        @Override
		public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock) {
            return mergeFrom((net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock other) {
          if (other == net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock.getDefaultInstance()) return this;
          if (other.hasIdTable()) {
            mergeIdTable(other.getIdTable());
          }
          if (other.hasStringTable()) {
            mergeStringTable(other.getStringTable());
          }
          if (!other.dataObjects_.isEmpty()) {
            if (result.dataObjects_.isEmpty()) {
              result.dataObjects_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.RouteData>();
            }
            result.dataObjects_.addAll(other.dataObjects_);
          }
          if (!other.restrictions_.isEmpty()) {
            if (result.restrictions_.isEmpty()) {
              result.restrictions_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.RestrictionData>();
            }
            result.restrictions_.addAll(other.restrictions_);
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        @Override
		public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 42: {
                net.flcnav.binary.FlcnavOdb.IdTable.Builder subBuilder = net.flcnav.binary.FlcnavOdb.IdTable.newBuilder();
                if (hasIdTable()) {
                  subBuilder.mergeFrom(getIdTable());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setIdTable(subBuilder.buildPartial());
                break;
              }
              case 50: {
                net.flcnav.binary.FlcnavOdb.RouteData.Builder subBuilder = net.flcnav.binary.FlcnavOdb.RouteData.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addDataObjects(subBuilder.buildPartial());
                break;
              }
              case 58: {
                net.flcnav.binary.FlcnavOdb.RestrictionData.Builder subBuilder = net.flcnav.binary.FlcnavOdb.RestrictionData.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addRestrictions(subBuilder.buildPartial());
                break;
              }
              case 66: {
                net.flcnav.binary.FlcnavOdb.StringTable.Builder subBuilder = net.flcnav.binary.FlcnavOdb.StringTable.newBuilder();
                if (hasStringTable()) {
                  subBuilder.mergeFrom(getStringTable());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setStringTable(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        
        // optional .IdTable idTable = 5;
        public boolean hasIdTable() {
          return result.hasIdTable();
        }
        public net.flcnav.binary.FlcnavOdb.IdTable getIdTable() {
          return result.getIdTable();
        }
        public Builder setIdTable(net.flcnav.binary.FlcnavOdb.IdTable value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.hasIdTable = true;
          result.idTable_ = value;
          return this;
        }
        public Builder setIdTable(net.flcnav.binary.FlcnavOdb.IdTable.Builder builderForValue) {
          result.hasIdTable = true;
          result.idTable_ = builderForValue.build();
          return this;
        }
        public Builder mergeIdTable(net.flcnav.binary.FlcnavOdb.IdTable value) {
          if (result.hasIdTable() &&
              result.idTable_ != net.flcnav.binary.FlcnavOdb.IdTable.getDefaultInstance()) {
            result.idTable_ =
              net.flcnav.binary.FlcnavOdb.IdTable.newBuilder(result.idTable_).mergeFrom(value).buildPartial();
          } else {
            result.idTable_ = value;
          }
          result.hasIdTable = true;
          return this;
        }
        public Builder clearIdTable() {
          result.hasIdTable = false;
          result.idTable_ = net.flcnav.binary.FlcnavOdb.IdTable.getDefaultInstance();
          return this;
        }
        
        // optional .StringTable stringTable = 8;
        public boolean hasStringTable() {
          return result.hasStringTable();
        }
        public net.flcnav.binary.FlcnavOdb.StringTable getStringTable() {
          return result.getStringTable();
        }
        public Builder setStringTable(net.flcnav.binary.FlcnavOdb.StringTable value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.hasStringTable = true;
          result.stringTable_ = value;
          return this;
        }
        public Builder setStringTable(net.flcnav.binary.FlcnavOdb.StringTable.Builder builderForValue) {
          result.hasStringTable = true;
          result.stringTable_ = builderForValue.build();
          return this;
        }
        public Builder mergeStringTable(net.flcnav.binary.FlcnavOdb.StringTable value) {
          if (result.hasStringTable() &&
              result.stringTable_ != net.flcnav.binary.FlcnavOdb.StringTable.getDefaultInstance()) {
            result.stringTable_ =
              net.flcnav.binary.FlcnavOdb.StringTable.newBuilder(result.stringTable_).mergeFrom(value).buildPartial();
          } else {
            result.stringTable_ = value;
          }
          result.hasStringTable = true;
          return this;
        }
        public Builder clearStringTable() {
          result.hasStringTable = false;
          result.stringTable_ = net.flcnav.binary.FlcnavOdb.StringTable.getDefaultInstance();
          return this;
        }
        
        // repeated .RouteData dataObjects = 6;
        public java.util.List<net.flcnav.binary.FlcnavOdb.RouteData> getDataObjectsList() {
          return java.util.Collections.unmodifiableList(result.dataObjects_);
        }
        public int getDataObjectsCount() {
          return result.getDataObjectsCount();
        }
        public net.flcnav.binary.FlcnavOdb.RouteData getDataObjects(int index) {
          return result.getDataObjects(index);
        }
        public Builder setDataObjects(int index, net.flcnav.binary.FlcnavOdb.RouteData value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.dataObjects_.set(index, value);
          return this;
        }
        public Builder setDataObjects(int index, net.flcnav.binary.FlcnavOdb.RouteData.Builder builderForValue) {
          result.dataObjects_.set(index, builderForValue.build());
          return this;
        }
        public Builder addDataObjects(net.flcnav.binary.FlcnavOdb.RouteData value) {
          if (value == null) {
            throw new NullPointerException();
          }
          if (result.dataObjects_.isEmpty()) {
            result.dataObjects_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.RouteData>();
          }
          result.dataObjects_.add(value);
          return this;
        }
        public Builder addDataObjects(net.flcnav.binary.FlcnavOdb.RouteData.Builder builderForValue) {
          if (result.dataObjects_.isEmpty()) {
            result.dataObjects_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.RouteData>();
          }
          result.dataObjects_.add(builderForValue.build());
          return this;
        }
        public Builder addAllDataObjects(
            java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.RouteData> values) {
          if (result.dataObjects_.isEmpty()) {
            result.dataObjects_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.RouteData>();
          }
          super.addAll(values, result.dataObjects_);
          return this;
        }
        public Builder clearDataObjects() {
          result.dataObjects_ = java.util.Collections.emptyList();
          return this;
        }
        
        // repeated .RestrictionData restrictions = 7;
        public java.util.List<net.flcnav.binary.FlcnavOdb.RestrictionData> getRestrictionsList() {
          return java.util.Collections.unmodifiableList(result.restrictions_);
        }
        public int getRestrictionsCount() {
          return result.getRestrictionsCount();
        }
        public net.flcnav.binary.FlcnavOdb.RestrictionData getRestrictions(int index) {
          return result.getRestrictions(index);
        }
        public Builder setRestrictions(int index, net.flcnav.binary.FlcnavOdb.RestrictionData value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.restrictions_.set(index, value);
          return this;
        }
        public Builder setRestrictions(int index, net.flcnav.binary.FlcnavOdb.RestrictionData.Builder builderForValue) {
          result.restrictions_.set(index, builderForValue.build());
          return this;
        }
        public Builder addRestrictions(net.flcnav.binary.FlcnavOdb.RestrictionData value) {
          if (value == null) {
            throw new NullPointerException();
          }
          if (result.restrictions_.isEmpty()) {
            result.restrictions_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.RestrictionData>();
          }
          result.restrictions_.add(value);
          return this;
        }
        public Builder addRestrictions(net.flcnav.binary.FlcnavOdb.RestrictionData.Builder builderForValue) {
          if (result.restrictions_.isEmpty()) {
            result.restrictions_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.RestrictionData>();
          }
          result.restrictions_.add(builderForValue.build());
          return this;
        }
        public Builder addAllRestrictions(
            java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.RestrictionData> values) {
          if (result.restrictions_.isEmpty()) {
            result.restrictions_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.RestrictionData>();
          }
          super.addAll(values, result.restrictions_);
          return this;
        }
        public Builder clearRestrictions() {
          result.restrictions_ = java.util.Collections.emptyList();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:FlcNavRoutingIndex.RouteDataBlock)
      }
      
      static {
        defaultInstance = new RouteDataBlock(true);
        net.flcnav.binary.FlcnavOdb.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:FlcNavRoutingIndex.RouteDataBlock)
    }
    
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // repeated .FlcNavRoutingIndex.RouteEncodingRule rules = 2;
    public static final int RULES_FIELD_NUMBER = 2;
    private java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule> rules_ =
      java.util.Collections.emptyList();
    public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule> getRulesList() {
      return rules_;
    }
    public int getRulesCount() { return rules_.size(); }
    public net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule getRules(int index) {
      return rules_.get(index);
    }
    
    // repeated .FlcNavRoutingIndex.RouteDataBox rootBoxes = 3;
    public static final int ROOTBOXES_FIELD_NUMBER = 3;
    private java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox> rootBoxes_ =
      java.util.Collections.emptyList();
    public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox> getRootBoxesList() {
      return rootBoxes_;
    }
    public int getRootBoxesCount() { return rootBoxes_.size(); }
    public net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox getRootBoxes(int index) {
      return rootBoxes_.get(index);
    }
    
    // repeated .FlcNavRoutingIndex.RouteDataBlock blocks = 5;
    public static final int BLOCKS_FIELD_NUMBER = 5;
    private java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock> blocks_ =
      java.util.Collections.emptyList();
    public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock> getBlocksList() {
      return blocks_;
    }
    public int getBlocksCount() { return blocks_.size(); }
    public net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock getBlocks(int index) {
      return blocks_.get(index);
    }
    
    private void initFields() {
    }
    @Override
	public final boolean isInitialized() {
      if (!hasName) return false;
      for (net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule element : getRulesList()) {
        if (!element.isInitialized()) return false;
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox element : getRootBoxesList()) {
        if (!element.isInitialized()) return false;
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock element : getBlocksList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule element : getRulesList()) {
        output.writeMessage(2, element);
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox element : getRootBoxesList()) {
        output.writeMessage(3, element);
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock element : getBlocksList()) {
        output.writeMessage(5, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule element : getRulesList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox element : getRootBoxesList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      for (net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock element : getBlocksList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex result;
      
      // Construct using net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex();
        return builder;
      }
      
      @Override
	protected net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex internalGetResult() {
        return result;
      }
      
      @Override
	public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex();
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(result);
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.getDescriptor();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex getDefaultInstanceForType() {
        return net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.getDefaultInstance();
      }
      
      @Override
	public boolean isInitialized() {
        return result.isInitialized();
      }
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      @Override
	public net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.rules_ != java.util.Collections.EMPTY_LIST) {
          result.rules_ =
            java.util.Collections.unmodifiableList(result.rules_);
        }
        if (result.rootBoxes_ != java.util.Collections.EMPTY_LIST) {
          result.rootBoxes_ =
            java.util.Collections.unmodifiableList(result.rootBoxes_);
        }
        if (result.blocks_ != java.util.Collections.EMPTY_LIST) {
          result.blocks_ =
            java.util.Collections.unmodifiableList(result.blocks_);
        }
        net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex returnMe = result;
        result = null;
        return returnMe;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex) {
          return mergeFrom((net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex other) {
        if (other == net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (!other.rules_.isEmpty()) {
          if (result.rules_.isEmpty()) {
            result.rules_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule>();
          }
          result.rules_.addAll(other.rules_);
        }
        if (!other.rootBoxes_.isEmpty()) {
          if (result.rootBoxes_.isEmpty()) {
            result.rootBoxes_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox>();
          }
          result.rootBoxes_.addAll(other.rootBoxes_);
        }
        if (!other.blocks_.isEmpty()) {
          if (result.blocks_.isEmpty()) {
            result.blocks_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock>();
          }
          result.blocks_.addAll(other.blocks_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 18: {
              net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule.Builder subBuilder = net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRules(subBuilder.buildPartial());
              break;
            }
            case 26: {
              net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox.Builder subBuilder = net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRootBoxes(subBuilder.buildPartial());
              break;
            }
            case 42: {
              net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock.Builder subBuilder = net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addBlocks(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // repeated .FlcNavRoutingIndex.RouteEncodingRule rules = 2;
      public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule> getRulesList() {
        return java.util.Collections.unmodifiableList(result.rules_);
      }
      public int getRulesCount() {
        return result.getRulesCount();
      }
      public net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule getRules(int index) {
        return result.getRules(index);
      }
      public Builder setRules(int index, net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.rules_.set(index, value);
        return this;
      }
      public Builder setRules(int index, net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule.Builder builderForValue) {
        result.rules_.set(index, builderForValue.build());
        return this;
      }
      public Builder addRules(net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.rules_.isEmpty()) {
          result.rules_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule>();
        }
        result.rules_.add(value);
        return this;
      }
      public Builder addRules(net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule.Builder builderForValue) {
        if (result.rules_.isEmpty()) {
          result.rules_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule>();
        }
        result.rules_.add(builderForValue.build());
        return this;
      }
      public Builder addAllRules(
          java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule> values) {
        if (result.rules_.isEmpty()) {
          result.rules_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule>();
        }
        super.addAll(values, result.rules_);
        return this;
      }
      public Builder clearRules() {
        result.rules_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .FlcNavRoutingIndex.RouteDataBox rootBoxes = 3;
      public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox> getRootBoxesList() {
        return java.util.Collections.unmodifiableList(result.rootBoxes_);
      }
      public int getRootBoxesCount() {
        return result.getRootBoxesCount();
      }
      public net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox getRootBoxes(int index) {
        return result.getRootBoxes(index);
      }
      public Builder setRootBoxes(int index, net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.rootBoxes_.set(index, value);
        return this;
      }
      public Builder setRootBoxes(int index, net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox.Builder builderForValue) {
        result.rootBoxes_.set(index, builderForValue.build());
        return this;
      }
      public Builder addRootBoxes(net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.rootBoxes_.isEmpty()) {
          result.rootBoxes_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox>();
        }
        result.rootBoxes_.add(value);
        return this;
      }
      public Builder addRootBoxes(net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox.Builder builderForValue) {
        if (result.rootBoxes_.isEmpty()) {
          result.rootBoxes_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox>();
        }
        result.rootBoxes_.add(builderForValue.build());
        return this;
      }
      public Builder addAllRootBoxes(
          java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox> values) {
        if (result.rootBoxes_.isEmpty()) {
          result.rootBoxes_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox>();
        }
        super.addAll(values, result.rootBoxes_);
        return this;
      }
      public Builder clearRootBoxes() {
        result.rootBoxes_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .FlcNavRoutingIndex.RouteDataBlock blocks = 5;
      public java.util.List<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock> getBlocksList() {
        return java.util.Collections.unmodifiableList(result.blocks_);
      }
      public int getBlocksCount() {
        return result.getBlocksCount();
      }
      public net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock getBlocks(int index) {
        return result.getBlocks(index);
      }
      public Builder setBlocks(int index, net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.blocks_.set(index, value);
        return this;
      }
      public Builder setBlocks(int index, net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock.Builder builderForValue) {
        result.blocks_.set(index, builderForValue.build());
        return this;
      }
      public Builder addBlocks(net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.blocks_.isEmpty()) {
          result.blocks_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock>();
        }
        result.blocks_.add(value);
        return this;
      }
      public Builder addBlocks(net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock.Builder builderForValue) {
        if (result.blocks_.isEmpty()) {
          result.blocks_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock>();
        }
        result.blocks_.add(builderForValue.build());
        return this;
      }
      public Builder addAllBlocks(
          java.lang.Iterable<? extends net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock> values) {
        if (result.blocks_.isEmpty()) {
          result.blocks_ = new java.util.ArrayList<net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock>();
        }
        super.addAll(values, result.blocks_);
        return this;
      }
      public Builder clearBlocks() {
        result.blocks_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:FlcNavRoutingIndex)
    }
    
    static {
      defaultInstance = new FlcNavRoutingIndex(true);
      net.flcnav.binary.FlcnavOdb.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FlcNavRoutingIndex)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FlcNavStructure_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FlcNavStructure_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FlcNavTileBox_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FlcNavTileBox_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_StringTable_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_StringTable_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_IndexedStringTable_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_IndexedStringTable_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FlcNavMapIndex_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FlcNavMapIndex_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FlcNavMapIndex_MapEncodingRule_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FlcNavMapIndex_MapEncodingRule_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FlcNavMapIndex_MapRootLevel_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FlcNavMapIndex_MapRootLevel_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FlcNavMapIndex_MapDataBox_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FlcNavMapIndex_MapDataBox_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MapDataBlock_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MapDataBlock_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MapData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MapData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FlcNavAddressIndex_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FlcNavAddressIndex_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FlcNavAddressIndex_CitiesIndex_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FlcNavAddressIndex_CitiesIndex_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FlcNavAddressNameIndexData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FlcNavAddressNameIndexData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FlcNavAddressNameIndexData_AddressNameIndexData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FlcNavAddressNameIndexData_AddressNameIndexData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_AddressNameIndexDataAtom_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_AddressNameIndexDataAtom_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CityIndex_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CityIndex_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CityBlockIndex_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CityBlockIndex_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_StreetIndex_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_StreetIndex_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_StreetIntersection_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_StreetIntersection_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_BuildingIndex_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_BuildingIndex_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TransportRoutes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TransportRoutes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TransportRoute_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TransportRoute_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TransportRouteStop_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TransportRouteStop_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TransportStop_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TransportStop_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TransportStopsTree_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TransportStopsTree_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FlcNavTransportIndex_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FlcNavTransportIndex_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FlcNavPoiIndex_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FlcNavPoiIndex_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FlcNavPoiNameIndex_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FlcNavPoiNameIndex_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FlcNavPoiNameIndex_FlcNavPoiNameIndexData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FlcNavPoiNameIndex_FlcNavPoiNameIndexData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FlcNavPoiNameIndexDataAtom_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FlcNavPoiNameIndexDataAtom_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FlcNavCategoryTable_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FlcNavCategoryTable_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FlcNavPoiBox_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FlcNavPoiBox_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FlcNavPoiCategories_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FlcNavPoiCategories_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FlcNavPoiBoxData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FlcNavPoiBoxData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FlcNavPoiBoxDataAtom_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FlcNavPoiBoxDataAtom_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_IdTable_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_IdTable_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RestrictionData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RestrictionData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RouteData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RouteData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FlcNavRoutingIndex_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FlcNavRoutingIndex_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FlcNavRoutingIndex_RouteEncodingRule_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FlcNavRoutingIndex_RouteEncodingRule_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FlcNavRoutingIndex_RouteDataBox_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FlcNavRoutingIndex_RouteDataBox_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FlcNavRoutingIndex_RouteDataBlock_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FlcNavRoutingIndex_RouteDataBlock_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024src/flcnav_odb.proto\"\232\002\n\017FlcNavStructu" +
      "re\022\017\n\007version\030\001 \002(\r\022\023\n\013dateCreated\030\022 \002(\003" +
      "\022)\n\014addressIndex\030\007 \003(\0132\023.FlcNavAddressIn" +
      "dex\022-\n\016transportIndex\030\004 \003(\0132\025.FlcNavTran" +
      "sportIndex\022!\n\010poiIndex\030\010 \003(\0132\017.FlcNavPoi" +
      "Index\022!\n\010mapIndex\030\006 \003(\0132\017.FlcNavMapIndex" +
      "\022)\n\014routingIndex\030\t \003(\0132\023.FlcNavRoutingIn" +
      "dex\022\026\n\016versionConfirm\030  \002(\r\"I\n\rFlcNavTil" +
      "eBox\022\014\n\004left\030\001 \002(\r\022\r\n\005right\030\002 \002(\r\022\013\n\003top" +
      "\030\003 \002(\r\022\016\n\006bottom\030\004 \002(\r\"\030\n\013StringTable\022\t\n",
      "\001s\030\001 \003(\t\"f\n\022IndexedStringTable\022\016\n\006prefix" +
      "\030\001 \001(\t\022\013\n\003key\030\003 \003(\t\022\013\n\003val\030\004 \003(\007\022&\n\tsubt" +
      "ables\030\005 \003(\0132\023.IndexedStringTable\"\250\004\n\016Flc" +
      "NavMapIndex\022\014\n\004name\030\002 \002(\t\022.\n\005rules\030\004 \003(\013" +
      "2\037.FlcNavMapIndex.MapEncodingRule\022,\n\006lev" +
      "els\030\005 \003(\0132\034.FlcNavMapIndex.MapRootLevel\032" +
      "X\n\017MapEncodingRule\022\013\n\003tag\030\003 \002(\t\022\r\n\005value" +
      "\030\005 \001(\t\022\n\n\002id\030\007 \001(\r\022\017\n\007minZoom\030\t \001(\r\022\014\n\004t" +
      "ype\030\n \001(\r\032\264\001\n\014MapRootLevel\022\017\n\007maxZoom\030\001 " +
      "\002(\005\022\017\n\007minZoom\030\002 \002(\005\022\014\n\004left\030\003 \002(\005\022\r\n\005ri",
      "ght\030\004 \002(\005\022\013\n\003top\030\005 \002(\005\022\016\n\006bottom\030\006 \002(\005\022)" +
      "\n\005boxes\030\007 \003(\0132\032.FlcNavMapIndex.MapDataBo" +
      "x\022\035\n\006blocks\030\017 \003(\0132\r.MapDataBlock\032\230\001\n\nMap" +
      "DataBox\022\014\n\004left\030\001 \002(\021\022\r\n\005right\030\002 \002(\021\022\013\n\003" +
      "top\030\003 \002(\021\022\016\n\006bottom\030\004 \002(\021\022\026\n\016shiftToMapD" +
      "ata\030\005 \001(\007\022\r\n\005ocean\030\006 \001(\010\022)\n\005boxes\030\007 \003(\0132" +
      "\032.FlcNavMapIndex.MapDataBox\"`\n\014MapDataBl" +
      "ock\022\016\n\006baseId\030\n \001(\004\022\035\n\013dataObjects\030\014 \003(\013" +
      "2\010.MapData\022!\n\013stringTable\030\017 \001(\0132\014.String" +
      "Table\"\266\001\n\007MapData\022\023\n\013coordinates\030\001 \001(\014\022\027",
      "\n\017areaCoordinates\030\002 \001(\014\022\037\n\027polygonInnerC" +
      "oordinates\030\004 \003(\014\022\027\n\017additionalTypes\030\006 \001(" +
      "\014\022\r\n\005types\030\007 \002(\014\022\023\n\013stringNames\030\n \001(\014\022\n\n" +
      "\002id\030\014 \002(\022\022\023\n\013rasterBytes\030\017 \001(\014\"\222\002\n\022FlcNa" +
      "vAddressIndex\022\014\n\004name\030\001 \002(\t\022\017\n\007name_en\030\002" +
      " \001(\t\022\"\n\nboundaries\030\003 \001(\0132\016.FlcNavTileBox" +
      "\022/\n\006cities\030\006 \003(\0132\037.FlcNavAddressIndex.Ci" +
      "tiesIndex\022.\n\tnameIndex\030\007 \001(\0132\033.FlcNavAdd" +
      "ressNameIndexData\032X\n\013CitiesIndex\022\014\n\004type" +
      "\030\002 \002(\r\022\032\n\006cities\030\005 \003(\0132\n.CityIndex\022\037\n\006bl",
      "ocks\030\007 \003(\0132\017.CityBlockIndex\"\301\001\n\032FlcNavAd" +
      "dressNameIndexData\022\"\n\005table\030\004 \002(\0132\023.Inde" +
      "xedStringTable\022>\n\004atom\030\007 \003(\01320.FlcNavAdd" +
      "ressNameIndexData.AddressNameIndexData\032?" +
      "\n\024AddressNameIndexData\022\'\n\004atom\030\004 \003(\0132\031.A" +
      "ddressNameIndexDataAtom\"v\n\030AddressNameIn" +
      "dexDataAtom\022\014\n\004name\030\001 \001(\t\022\016\n\006nameEn\030\002 \001(" +
      "\t\022\014\n\004type\030\003 \002(\r\022\024\n\014shiftToIndex\030\005 \003(\005\022\030\n" +
      "\020shiftToCityIndex\030\006 \003(\005\"~\n\tCityIndex\022\021\n\t" +
      "city_type\030\001 \001(\r\022\014\n\004name\030\002 \002(\t\022\017\n\007name_en",
      "\030\003 \001(\t\022\n\n\002id\030\004 \001(\004\022\t\n\001x\030\005 \002(\r\022\t\n\001y\030\006 \002(\r" +
      "\022\035\n\025shiftToCityBlockIndex\030\n \001(\007\"l\n\016CityB" +
      "lockIndex\022\030\n\020shiftToCityIndex\030\004 \001(\007\022!\n\tb" +
      "uildings\030\n \003(\0132\016.BuildingIndex\022\035\n\007street" +
      "s\030\014 \003(\0132\014.StreetIndex\"\235\001\n\013StreetIndex\022\014\n" +
      "\004name\030\001 \002(\t\022\017\n\007name_en\030\002 \001(\t\022\t\n\001x\030\003 \002(\021\022" +
      "\t\n\001y\030\004 \002(\021\022\n\n\002id\030\006 \001(\004\022!\n\tbuildings\030\014 \003(" +
      "\0132\016.BuildingIndex\022*\n\rintersections\030\005 \003(\013" +
      "2\023.StreetIntersection\"_\n\022StreetIntersect" +
      "ion\022\014\n\004name\030\002 \002(\t\022\017\n\007name_en\030\003 \001(\t\022\024\n\014in",
      "tersectedX\030\004 \002(\021\022\024\n\014intersectedY\030\005 \002(\021\"\262" +
      "\001\n\rBuildingIndex\022\014\n\004name\030\001 \002(\t\022\017\n\007name_e" +
      "n\030\002 \001(\t\022\r\n\005name2\030\003 \001(\t\022\020\n\010name_en2\030\004 \001(\t" +
      "\022\025\n\rinterpolation\030\005 \001(\021\022\t\n\001x\030\007 \002(\021\022\t\n\001y\030" +
      "\010 \002(\021\022\n\n\002x2\030\t \001(\021\022\n\n\002y2\030\n \001(\021\022\n\n\002id\030\r \001(" +
      "\004\022\020\n\010postcode\030\016 \001(\t\"2\n\017TransportRoutes\022\037" +
      "\n\006routes\030\006 \003(\0132\017.TransportRoute\"\317\001\n\016Tran" +
      "sportRoute\022\n\n\002id\030\001 \002(\004\022\014\n\004type\030\003 \001(\r\022\020\n\010" +
      "operator\030\004 \001(\r\022\013\n\003ref\030\005 \001(\t\022\014\n\004name\030\006 \001(" +
      "\r\022\017\n\007name_en\030\007 \001(\r\022\020\n\010distance\030\010 \001(\r\022(\n\013",
      "directStops\030\017 \003(\0132\023.TransportRouteStop\022)" +
      "\n\014reverseStops\030\020 \003(\0132\023.TransportRouteSto" +
      "p\"W\n\022TransportRouteStop\022\n\n\002id\030\001 \002(\022\022\n\n\002d" +
      "x\030\002 \002(\021\022\n\n\002dy\030\003 \002(\021\022\014\n\004name\030\006 \002(\r\022\017\n\007nam" +
      "e_en\030\007 \001(\r\"b\n\rTransportStop\022\n\n\002dx\030\001 \002(\021\022" +
      "\n\n\002dy\030\002 \002(\021\022\n\n\002id\030\005 \002(\022\022\014\n\004name\030\006 \002(\r\022\017\n" +
      "\007name_en\030\007 \001(\r\022\016\n\006routes\030\020 \003(\r\"\244\001\n\022Trans" +
      "portStopsTree\022\014\n\004left\030\001 \002(\021\022\r\n\005right\030\002 \002" +
      "(\021\022\013\n\003top\030\003 \002(\021\022\016\n\006bottom\030\004 \002(\021\022%\n\010subtr" +
      "ees\030\007 \003(\0132\023.TransportStopsTree\022\035\n\005leafs\030",
      "\010 \003(\0132\016.TransportStop\022\016\n\006baseId\030\020 \001(\004\"\215\001" +
      "\n\024FlcNavTransportIndex\022\014\n\004name\030\001 \001(\t\022 \n\006" +
      "routes\030\003 \001(\0132\020.TransportRoutes\022\"\n\005stops\030" +
      "\006 \001(\0132\023.TransportStopsTree\022!\n\013stringTabl" +
      "e\030\t \002(\0132\014.StringTable\"\333\001\n\016FlcNavPoiIndex" +
      "\022\014\n\004name\030\001 \002(\t\022\"\n\nboundaries\030\002 \002(\0132\016.Flc" +
      "NavTileBox\022-\n\017categoriesTable\030\003 \003(\0132\024.Fl" +
      "cNavCategoryTable\022&\n\tnameIndex\030\004 \001(\0132\023.F" +
      "lcNavPoiNameIndex\022\034\n\005boxes\030\006 \003(\0132\r.FlcNa" +
      "vPoiBox\022\"\n\007poiData\030\t \003(\0132\021.FlcNavPoiBoxD",
      "ata\"\270\001\n\022FlcNavPoiNameIndex\022\"\n\005table\030\003 \002(" +
      "\0132\023.IndexedStringTable\0228\n\004data\030\005 \003(\0132*.F" +
      "lcNavPoiNameIndex.FlcNavPoiNameIndexData" +
      "\032D\n\026FlcNavPoiNameIndexData\022*\n\005atoms\030\003 \003(" +
      "\0132\033.FlcNavPoiNameIndexDataAtom\"Q\n\032FlcNav" +
      "PoiNameIndexDataAtom\022\014\n\004zoom\030\002 \001(\r\022\t\n\001x\030" +
      "\003 \001(\r\022\t\n\001y\030\004 \001(\r\022\017\n\007shiftTo\030\016 \001(\007\">\n\023Flc" +
      "NavCategoryTable\022\020\n\010category\030\001 \002(\t\022\025\n\rsu" +
      "bcategories\030\003 \003(\t\"\227\001\n\014FlcNavPoiBox\022\014\n\004zo" +
      "om\030\001 \002(\r\022\014\n\004left\030\002 \002(\021\022\013\n\003top\030\003 \002(\021\022(\n\nc",
      "ategories\030\004 \001(\0132\024.FlcNavPoiCategories\022\037\n" +
      "\010subBoxes\030\n \003(\0132\r.FlcNavPoiBox\022\023\n\013shiftT" +
      "oData\030\016 \001(\007\")\n\023FlcNavPoiCategories\022\022\n\nca" +
      "tegories\030\003 \003(\r\"^\n\020FlcNavPoiBoxData\022\014\n\004zo" +
      "om\030\001 \001(\r\022\t\n\001x\030\002 \001(\r\022\t\n\001y\030\003 \001(\r\022&\n\007poiDat" +
      "a\030\005 \003(\0132\025.FlcNavPoiBoxDataAtom\"\255\001\n\024FlcNa" +
      "vPoiBoxDataAtom\022\n\n\002dx\030\002 \002(\021\022\n\n\002dy\030\003 \002(\021\022" +
      "\022\n\ncategories\030\004 \003(\r\022\014\n\004name\030\006 \001(\t\022\016\n\006nam" +
      "eEn\030\007 \001(\t\022\n\n\002id\030\010 \001(\004\022\024\n\014openingHours\030\n " +
      "\001(\t\022\014\n\004site\030\013 \001(\t\022\r\n\005phone\030\014 \001(\t\022\014\n\004note",
      "\030\r \001(\t\"\032\n\007IdTable\022\017\n\007routeId\030\001 \003(\022\"F\n\017Re" +
      "strictionData\022\014\n\004type\030\001 \002(\005\022\014\n\004from\030\002 \002(" +
      "\005\022\n\n\002to\030\003 \002(\005\022\013\n\003via\030\004 \001(\005\"\217\001\n\tRouteData" +
      "\022\016\n\006points\030\001 \002(\014\022\022\n\npointTypes\030\004 \001(\014\022\022\n\n" +
      "pointJNInd\030\005 \001(\014\022\025\n\rpointJNWayIds\030\006 \001(\014\022" +
      "\r\n\005types\030\007 \002(\014\022\017\n\007routeId\030\014 \002(\005\022\023\n\013strin" +
      "gNames\030\016 \001(\014\"\251\004\n\022FlcNavRoutingIndex\022\014\n\004n" +
      "ame\030\001 \002(\t\0224\n\005rules\030\002 \003(\0132%.FlcNavRouting" +
      "Index.RouteEncodingRule\0223\n\trootBoxes\030\003 \003" +
      "(\0132 .FlcNavRoutingIndex.RouteDataBox\0222\n\006",
      "blocks\030\005 \003(\0132\".FlcNavRoutingIndex.RouteD" +
      "ataBlock\032;\n\021RouteEncodingRule\022\013\n\003tag\030\003 \002" +
      "(\t\022\r\n\005value\030\005 \002(\t\022\n\n\002id\030\007 \001(\r\032\216\001\n\014RouteD" +
      "ataBox\022\014\n\004left\030\001 \002(\021\022\r\n\005right\030\002 \002(\021\022\013\n\003t" +
      "op\030\003 \002(\021\022\016\n\006bottom\030\004 \002(\021\022\023\n\013shiftToData\030" +
      "\005 \001(\007\022/\n\005boxes\030\007 \003(\0132 .FlcNavRoutingInde" +
      "x.RouteDataBox\032\227\001\n\016RouteDataBlock\022\031\n\007idT" +
      "able\030\005 \001(\0132\010.IdTable\022!\n\013stringTable\030\010 \001(" +
      "\0132\014.StringTable\022\037\n\013dataObjects\030\006 \003(\0132\n.R" +
      "outeData\022&\n\014restrictions\030\007 \003(\0132\020.Restric",
      "tionDataB\023\n\021net.flcnav.binary"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        @Override
		public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_FlcNavStructure_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_FlcNavStructure_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FlcNavStructure_descriptor,
              new java.lang.String[] { "Version", "DateCreated", "AddressIndex", "TransportIndex", "PoiIndex", "MapIndex", "RoutingIndex", "VersionConfirm", },
              net.flcnav.binary.FlcnavOdb.FlcNavStructure.class,
              net.flcnav.binary.FlcnavOdb.FlcNavStructure.Builder.class);
          internal_static_FlcNavTileBox_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_FlcNavTileBox_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FlcNavTileBox_descriptor,
              new java.lang.String[] { "Left", "Right", "Top", "Bottom", },
              net.flcnav.binary.FlcnavOdb.FlcNavTileBox.class,
              net.flcnav.binary.FlcnavOdb.FlcNavTileBox.Builder.class);
          internal_static_StringTable_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_StringTable_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_StringTable_descriptor,
              new java.lang.String[] { "S", },
              net.flcnav.binary.FlcnavOdb.StringTable.class,
              net.flcnav.binary.FlcnavOdb.StringTable.Builder.class);
          internal_static_IndexedStringTable_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_IndexedStringTable_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_IndexedStringTable_descriptor,
              new java.lang.String[] { "Prefix", "Key", "Val", "Subtables", },
              net.flcnav.binary.FlcnavOdb.IndexedStringTable.class,
              net.flcnav.binary.FlcnavOdb.IndexedStringTable.Builder.class);
          internal_static_FlcNavMapIndex_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_FlcNavMapIndex_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FlcNavMapIndex_descriptor,
              new java.lang.String[] { "Name", "Rules", "Levels", },
              net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.class,
              net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.Builder.class);
          internal_static_FlcNavMapIndex_MapEncodingRule_descriptor =
            internal_static_FlcNavMapIndex_descriptor.getNestedTypes().get(0);
          internal_static_FlcNavMapIndex_MapEncodingRule_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FlcNavMapIndex_MapEncodingRule_descriptor,
              new java.lang.String[] { "Tag", "Value", "Id", "MinZoom", "Type", },
              net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule.class,
              net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapEncodingRule.Builder.class);
          internal_static_FlcNavMapIndex_MapRootLevel_descriptor =
            internal_static_FlcNavMapIndex_descriptor.getNestedTypes().get(1);
          internal_static_FlcNavMapIndex_MapRootLevel_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FlcNavMapIndex_MapRootLevel_descriptor,
              new java.lang.String[] { "MaxZoom", "MinZoom", "Left", "Right", "Top", "Bottom", "Boxes", "Blocks", },
              net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel.class,
              net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapRootLevel.Builder.class);
          internal_static_FlcNavMapIndex_MapDataBox_descriptor =
            internal_static_FlcNavMapIndex_descriptor.getNestedTypes().get(2);
          internal_static_FlcNavMapIndex_MapDataBox_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FlcNavMapIndex_MapDataBox_descriptor,
              new java.lang.String[] { "Left", "Right", "Top", "Bottom", "ShiftToMapData", "Ocean", "Boxes", },
              net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox.class,
              net.flcnav.binary.FlcnavOdb.FlcNavMapIndex.MapDataBox.Builder.class);
          internal_static_MapDataBlock_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_MapDataBlock_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MapDataBlock_descriptor,
              new java.lang.String[] { "BaseId", "DataObjects", "StringTable", },
              net.flcnav.binary.FlcnavOdb.MapDataBlock.class,
              net.flcnav.binary.FlcnavOdb.MapDataBlock.Builder.class);
          internal_static_MapData_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_MapData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MapData_descriptor,
              new java.lang.String[] { "Coordinates", "AreaCoordinates", "PolygonInnerCoordinates", "AdditionalTypes", "Types", "StringNames", "Id", "RasterBytes", },
              net.flcnav.binary.FlcnavOdb.MapData.class,
              net.flcnav.binary.FlcnavOdb.MapData.Builder.class);
          internal_static_FlcNavAddressIndex_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_FlcNavAddressIndex_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FlcNavAddressIndex_descriptor,
              new java.lang.String[] { "Name", "NameEn", "Boundaries", "Cities", "NameIndex", },
              net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.class,
              net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.Builder.class);
          internal_static_FlcNavAddressIndex_CitiesIndex_descriptor =
            internal_static_FlcNavAddressIndex_descriptor.getNestedTypes().get(0);
          internal_static_FlcNavAddressIndex_CitiesIndex_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FlcNavAddressIndex_CitiesIndex_descriptor,
              new java.lang.String[] { "Type", "Cities", "Blocks", },
              net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex.class,
              net.flcnav.binary.FlcnavOdb.FlcNavAddressIndex.CitiesIndex.Builder.class);
          internal_static_FlcNavAddressNameIndexData_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_FlcNavAddressNameIndexData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FlcNavAddressNameIndexData_descriptor,
              new java.lang.String[] { "Table", "Atom", },
              net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.class,
              net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.Builder.class);
          internal_static_FlcNavAddressNameIndexData_AddressNameIndexData_descriptor =
            internal_static_FlcNavAddressNameIndexData_descriptor.getNestedTypes().get(0);
          internal_static_FlcNavAddressNameIndexData_AddressNameIndexData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FlcNavAddressNameIndexData_AddressNameIndexData_descriptor,
              new java.lang.String[] { "Atom", },
              net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData.class,
              net.flcnav.binary.FlcnavOdb.FlcNavAddressNameIndexData.AddressNameIndexData.Builder.class);
          internal_static_AddressNameIndexDataAtom_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_AddressNameIndexDataAtom_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_AddressNameIndexDataAtom_descriptor,
              new java.lang.String[] { "Name", "NameEn", "Type", "ShiftToIndex", "ShiftToCityIndex", },
              net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom.class,
              net.flcnav.binary.FlcnavOdb.AddressNameIndexDataAtom.Builder.class);
          internal_static_CityIndex_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_CityIndex_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CityIndex_descriptor,
              new java.lang.String[] { "CityType", "Name", "NameEn", "Id", "X", "Y", "ShiftToCityBlockIndex", },
              net.flcnav.binary.FlcnavOdb.CityIndex.class,
              net.flcnav.binary.FlcnavOdb.CityIndex.Builder.class);
          internal_static_CityBlockIndex_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_CityBlockIndex_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CityBlockIndex_descriptor,
              new java.lang.String[] { "ShiftToCityIndex", "Buildings", "Streets", },
              net.flcnav.binary.FlcnavOdb.CityBlockIndex.class,
              net.flcnav.binary.FlcnavOdb.CityBlockIndex.Builder.class);
          internal_static_StreetIndex_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_StreetIndex_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_StreetIndex_descriptor,
              new java.lang.String[] { "Name", "NameEn", "X", "Y", "Id", "Buildings", "Intersections", },
              net.flcnav.binary.FlcnavOdb.StreetIndex.class,
              net.flcnav.binary.FlcnavOdb.StreetIndex.Builder.class);
          internal_static_StreetIntersection_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_StreetIntersection_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_StreetIntersection_descriptor,
              new java.lang.String[] { "Name", "NameEn", "IntersectedX", "IntersectedY", },
              net.flcnav.binary.FlcnavOdb.StreetIntersection.class,
              net.flcnav.binary.FlcnavOdb.StreetIntersection.Builder.class);
          internal_static_BuildingIndex_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_BuildingIndex_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_BuildingIndex_descriptor,
              new java.lang.String[] { "Name", "NameEn", "Name2", "NameEn2", "Interpolation", "X", "Y", "X2", "Y2", "Id", "Postcode", },
              net.flcnav.binary.FlcnavOdb.BuildingIndex.class,
              net.flcnav.binary.FlcnavOdb.BuildingIndex.Builder.class);
          internal_static_TransportRoutes_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_TransportRoutes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TransportRoutes_descriptor,
              new java.lang.String[] { "Routes", },
              net.flcnav.binary.FlcnavOdb.TransportRoutes.class,
              net.flcnav.binary.FlcnavOdb.TransportRoutes.Builder.class);
          internal_static_TransportRoute_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_TransportRoute_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TransportRoute_descriptor,
              new java.lang.String[] { "Id", "Type", "Operator", "Ref", "Name", "NameEn", "Distance", "DirectStops", "ReverseStops", },
              net.flcnav.binary.FlcnavOdb.TransportRoute.class,
              net.flcnav.binary.FlcnavOdb.TransportRoute.Builder.class);
          internal_static_TransportRouteStop_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_TransportRouteStop_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TransportRouteStop_descriptor,
              new java.lang.String[] { "Id", "Dx", "Dy", "Name", "NameEn", },
              net.flcnav.binary.FlcnavOdb.TransportRouteStop.class,
              net.flcnav.binary.FlcnavOdb.TransportRouteStop.Builder.class);
          internal_static_TransportStop_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_TransportStop_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TransportStop_descriptor,
              new java.lang.String[] { "Dx", "Dy", "Id", "Name", "NameEn", "Routes", },
              net.flcnav.binary.FlcnavOdb.TransportStop.class,
              net.flcnav.binary.FlcnavOdb.TransportStop.Builder.class);
          internal_static_TransportStopsTree_descriptor =
            getDescriptor().getMessageTypes().get(19);
          internal_static_TransportStopsTree_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TransportStopsTree_descriptor,
              new java.lang.String[] { "Left", "Right", "Top", "Bottom", "Subtrees", "Leafs", "BaseId", },
              net.flcnav.binary.FlcnavOdb.TransportStopsTree.class,
              net.flcnav.binary.FlcnavOdb.TransportStopsTree.Builder.class);
          internal_static_FlcNavTransportIndex_descriptor =
            getDescriptor().getMessageTypes().get(20);
          internal_static_FlcNavTransportIndex_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FlcNavTransportIndex_descriptor,
              new java.lang.String[] { "Name", "Routes", "Stops", "StringTable", },
              net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex.class,
              net.flcnav.binary.FlcnavOdb.FlcNavTransportIndex.Builder.class);
          internal_static_FlcNavPoiIndex_descriptor =
            getDescriptor().getMessageTypes().get(21);
          internal_static_FlcNavPoiIndex_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FlcNavPoiIndex_descriptor,
              new java.lang.String[] { "Name", "Boundaries", "CategoriesTable", "NameIndex", "Boxes", "PoiData", },
              net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex.class,
              net.flcnav.binary.FlcnavOdb.FlcNavPoiIndex.Builder.class);
          internal_static_FlcNavPoiNameIndex_descriptor =
            getDescriptor().getMessageTypes().get(22);
          internal_static_FlcNavPoiNameIndex_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FlcNavPoiNameIndex_descriptor,
              new java.lang.String[] { "Table", "Data", },
              net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.class,
              net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.Builder.class);
          internal_static_FlcNavPoiNameIndex_FlcNavPoiNameIndexData_descriptor =
            internal_static_FlcNavPoiNameIndex_descriptor.getNestedTypes().get(0);
          internal_static_FlcNavPoiNameIndex_FlcNavPoiNameIndexData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FlcNavPoiNameIndex_FlcNavPoiNameIndexData_descriptor,
              new java.lang.String[] { "Atoms", },
              net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData.class,
              net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndex.FlcNavPoiNameIndexData.Builder.class);
          internal_static_FlcNavPoiNameIndexDataAtom_descriptor =
            getDescriptor().getMessageTypes().get(23);
          internal_static_FlcNavPoiNameIndexDataAtom_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FlcNavPoiNameIndexDataAtom_descriptor,
              new java.lang.String[] { "Zoom", "X", "Y", "ShiftTo", },
              net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom.class,
              net.flcnav.binary.FlcnavOdb.FlcNavPoiNameIndexDataAtom.Builder.class);
          internal_static_FlcNavCategoryTable_descriptor =
            getDescriptor().getMessageTypes().get(24);
          internal_static_FlcNavCategoryTable_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FlcNavCategoryTable_descriptor,
              new java.lang.String[] { "Category", "Subcategories", },
              net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable.class,
              net.flcnav.binary.FlcnavOdb.FlcNavCategoryTable.Builder.class);
          internal_static_FlcNavPoiBox_descriptor =
            getDescriptor().getMessageTypes().get(25);
          internal_static_FlcNavPoiBox_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FlcNavPoiBox_descriptor,
              new java.lang.String[] { "Zoom", "Left", "Top", "Categories", "SubBoxes", "ShiftToData", },
              net.flcnav.binary.FlcnavOdb.FlcNavPoiBox.class,
              net.flcnav.binary.FlcnavOdb.FlcNavPoiBox.Builder.class);
          internal_static_FlcNavPoiCategories_descriptor =
            getDescriptor().getMessageTypes().get(26);
          internal_static_FlcNavPoiCategories_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FlcNavPoiCategories_descriptor,
              new java.lang.String[] { "Categories", },
              net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories.class,
              net.flcnav.binary.FlcnavOdb.FlcNavPoiCategories.Builder.class);
          internal_static_FlcNavPoiBoxData_descriptor =
            getDescriptor().getMessageTypes().get(27);
          internal_static_FlcNavPoiBoxData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FlcNavPoiBoxData_descriptor,
              new java.lang.String[] { "Zoom", "X", "Y", "PoiData", },
              net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData.class,
              net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxData.Builder.class);
          internal_static_FlcNavPoiBoxDataAtom_descriptor =
            getDescriptor().getMessageTypes().get(28);
          internal_static_FlcNavPoiBoxDataAtom_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FlcNavPoiBoxDataAtom_descriptor,
              new java.lang.String[] { "Dx", "Dy", "Categories", "Name", "NameEn", "Id", "OpeningHours", "Site", "Phone", "Note", },
              net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom.class,
              net.flcnav.binary.FlcnavOdb.FlcNavPoiBoxDataAtom.Builder.class);
          internal_static_IdTable_descriptor =
            getDescriptor().getMessageTypes().get(29);
          internal_static_IdTable_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_IdTable_descriptor,
              new java.lang.String[] { "RouteId", },
              net.flcnav.binary.FlcnavOdb.IdTable.class,
              net.flcnav.binary.FlcnavOdb.IdTable.Builder.class);
          internal_static_RestrictionData_descriptor =
            getDescriptor().getMessageTypes().get(30);
          internal_static_RestrictionData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RestrictionData_descriptor,
              new java.lang.String[] { "Type", "From", "To", "Via", },
              net.flcnav.binary.FlcnavOdb.RestrictionData.class,
              net.flcnav.binary.FlcnavOdb.RestrictionData.Builder.class);
          internal_static_RouteData_descriptor =
            getDescriptor().getMessageTypes().get(31);
          internal_static_RouteData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RouteData_descriptor,
              new java.lang.String[] { "Points", "PointTypes", "PointJNInd", "PointJNWayIds", "Types", "RouteId", "StringNames", },
              net.flcnav.binary.FlcnavOdb.RouteData.class,
              net.flcnav.binary.FlcnavOdb.RouteData.Builder.class);
          internal_static_FlcNavRoutingIndex_descriptor =
            getDescriptor().getMessageTypes().get(32);
          internal_static_FlcNavRoutingIndex_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FlcNavRoutingIndex_descriptor,
              new java.lang.String[] { "Name", "Rules", "RootBoxes", "Blocks", },
              net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.class,
              net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.Builder.class);
          internal_static_FlcNavRoutingIndex_RouteEncodingRule_descriptor =
            internal_static_FlcNavRoutingIndex_descriptor.getNestedTypes().get(0);
          internal_static_FlcNavRoutingIndex_RouteEncodingRule_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FlcNavRoutingIndex_RouteEncodingRule_descriptor,
              new java.lang.String[] { "Tag", "Value", "Id", },
              net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule.class,
              net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteEncodingRule.Builder.class);
          internal_static_FlcNavRoutingIndex_RouteDataBox_descriptor =
            internal_static_FlcNavRoutingIndex_descriptor.getNestedTypes().get(1);
          internal_static_FlcNavRoutingIndex_RouteDataBox_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FlcNavRoutingIndex_RouteDataBox_descriptor,
              new java.lang.String[] { "Left", "Right", "Top", "Bottom", "ShiftToData", "Boxes", },
              net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox.class,
              net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBox.Builder.class);
          internal_static_FlcNavRoutingIndex_RouteDataBlock_descriptor =
            internal_static_FlcNavRoutingIndex_descriptor.getNestedTypes().get(2);
          internal_static_FlcNavRoutingIndex_RouteDataBlock_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FlcNavRoutingIndex_RouteDataBlock_descriptor,
              new java.lang.String[] { "IdTable", "StringTable", "DataObjects", "Restrictions", },
              net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock.class,
              net.flcnav.binary.FlcnavOdb.FlcNavRoutingIndex.RouteDataBlock.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
